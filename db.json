{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1549965672112},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1549965672112},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1549965672112},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1549965672113},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1549965672113},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1549965672123},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1549965672114},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1549965672113},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1549965660567},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1549965672113},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1549965672114},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1549965672114},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1549965672114},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1549965672114},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1549965672114},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1549965672115},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1549965672115},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1549965672116},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1549965672115},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1549965672121},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1549965672121},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1549965672123},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1549965672122},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1549965672122},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1549965672123},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1549965672122},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1549965672122},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1549965672120},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1549965672120},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1549965672120},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1549965672121},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1549965672116},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1549965672121},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1549965672117},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1549965672117},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1549965672118},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1549965672117},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1549965672118},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1549965672118},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1549965672118},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1549965672119},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1549965672120},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1549965672124},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1549965672138},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1549965672138},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1549965672139},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1549965672139},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1549965672139},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1549965672128},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1549965672138},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1549965672140},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1549965672143},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1549965672144},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1549965672117},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1549965672144},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1549965672145},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1549965672119},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1549965672119},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1549965672119},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1549965672119},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1549965672120},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1549965672120},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1549965672124},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1549965672125},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1549965672125},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1549965672125},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1549965672125},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1549965672126},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1549965672126},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1549965672126},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1549965672127},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1549965672127},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1549965672126},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1549965672127},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1549965672129},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1549965672130},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1549965672140},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1549965672134},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1549965672141},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1549965672141},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1549965672142},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1549965672142},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1549965672142},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1549965672134},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1549965672132},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1549965672137},{"_id":"source/_posts/Docker.md","hash":"9655856ee1386fa89abe5ea32b06f3f2efd28550","modified":1548990615914},{"_id":"source/_posts/Git.md","hash":"e7c6a074fceb19b5e8a1655ff9b86e3f4df04a8c","modified":1544066522444},{"_id":"source/_posts/Python.md","hash":"eb755d9127dea12fb5b634f7d192187f044195ec","modified":1544174442383},{"_id":"source/_posts/Sublime.md","hash":"16766f1ba7cd75fd22abfb1035fe6c8171f8081e","modified":1545026513334},{"_id":"source/_posts/SQL.md","hash":"650ad7f13b8d243dd9c87d963a00091ac63a36af","modified":1547779890734},{"_id":"source/_posts/控制台.md","hash":"5731583c9bd96e0893b89f2a6d0d9f0b976c4df3","modified":1548990760699}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2019-02-12T10:01:00.566Z","updated":"2019-02-12T10:01:00.567Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1lo5y000005lzysklvcovu","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"_content":"[TOC]\n\n## Kubernetes：部署环境、持续集成\n\n- Container\n- Cluster、Node、Pod\n- Service、Label、Selector\n- Volume\n- Depliyment、Rolling Update\n  - ReplicaSet\n  - Canary\n  - Blue-Green\n- Continuous Delivery Pipeline\n  - Jenkins\n\n## DaoCloud加速器\n\n1. 官网地址：https://www.daocloud.io/mirror#accelerator-doc\n2. 账号：sweetyu2603   密码：sy20122603\n\n## 版本 version\n\n```\ndocker --info\ndocker --version\ndocker-compose --version\ndocker-machine --version\n```\n\n## 仓库 repository\n\n```\n仓库：docker [login|pull|push|search]\n私人仓库：registry.domain.com:5000/repository:<tag_name>\n公共仓库：username/repository<:tag_name>\n```\n\n## 容器 container\n\n```\ndocker [run|start|stop|restart|kill|rm|pause|unpause]\ndocker [ps|inspect|top|attach|events|logs|wait|export|port]\ndocker [commit|cp|diff]\n```\n\n## 镜像 image\n\n```\ndocker [images|rmi|tag|build|history|save|import]\n```\n\n## 常用库\n\n```\ndocker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -d (镜像id)\ndocker run  --name redis -p 6379:6379 -v F:/Data:/data  -d (镜像id) redis-server --appendonly yes\ndocker exec -it 7a6dbd754a68 redis-cli -h 172.16.0.6 -p 6379 -a crs-nv1bxvs7:sy123456\ndocker run --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=root -d (镜像id)\ndocker run --name jena -p 3030:3030 -e ADMIN_PASSWORD=root -d (镜像id)\ndocker run --name neo4j -p 7473-7474:7473-7474 -p 7687:7687  --privileged=true -v 本地地址:/var/lib/neo4j/import -d (镜像id)\ndocker run -p 27017:27017 -v $PWD/db:/data/db -d mongo (镜像id)\n```\n\n## 重启网卡\n\n```\nsystemctl restart network\nnmcli con show\nnmcli con up xxx\nvi /etc/sysctl.conf  或 vi /usr/lib/sysctl.d/00-system.conf\n    添加如下代码：net.ipv4.ip_forward=1 \nsysctl net.ipv4.ip_forward\n```\n\n## 关闭防火墙\n\n```\nsystemctl stop firewalld\nsystemctl disable firewalld\nreboot -h\n```\n\n## docker主机\n\n```\ndocker-machine restart default \ndocker-machine env default \ndocker-machine ls\ndocker-machine stop default\ndocker-machine kill default\ndocker-machine rm default\ndocker-machine create --virtualbox-disk-size \"50000\" --virtualbox-memory \"4096\" -d virtualbox default\n```\n\n## Toolbox\n\n```\n使用Toolbox上的docker镜像作为后台数据库，在前端进行连接时，需要填写固定本地IP（192.168.99.99），而不是locahost\n```\n\n## Volume\n\n- volumes do not provide shared between all containers, or a lifecycle management either.\n- Kubernetes, volumes allow containers in part to share data, and to be stateful.\n    ```\n    docker volume ls\n    docker volume rm $(docker volume ls -qf dangling=true)\n    ```\n\n## DockerFile\n\n指令 | 说明\n---|---\nFROM | 指定所创建镜像的基础镜像\nMAINTAINER | 指定维护者信息\nRUN | 运行命令\nCMD | 指定启动容器时默认执行的命令\nLABEL | 指定生成镜像的元数据标签信息\nEXPOSE | 声明镜像内服务所监听的端口\nENV | 指定环境变量\nADD | 复制指定的<src>路径下的内容到容器中的<dest>路径下，<src>可以为URL；如果为tar文件，会自动解压到<dest>路径下\nCOPY | 复制本地主机的<src>路径下的内容到容器中的<dest>路径下，推荐使用\nENTRYPOINT | 指定镜像的默认入口【仅一个】，docker run --entrypoint\nVOLUME | 创建数据挂载点，VOLUME [\"/data\"]\nUSER | 指定运行容器时的用户名或UID\nWORKDIR | 配置工作目录\nARG | 指定镜像内使用的参数，可用docker build --build-arg<name>=<value>来指定参数值\nONBUILD | 配置当前所创建的镜像作为其他镜像的基础镜像时，所执行的创建操作的命令\nSTOPSIGNAL | 容器退出的信号\nHEALTHCHECK | 如何进行健康检查\nSHELL | 指定默认SHELL类型，SHELL [\"executable\",\"parameters\"]，默认为 [\"bin/sh\",\"-c\"]\n\n> 注意:\n> 1. HEALTHCHECK NONE：禁止基础镜像中的健康检查\n> 1. HEALTHCHECK [OPTIONS] CMD command：根据所执行命令返回值是否为0判断\n> [OPTION]支持：\n>     - --inerval = DURATION  (默认为：30s)：多久检查一次；\n>     - --timeout = DURATION  (默认为：30s)：每次检查等待结果的超时时间；\n>     - --retries = N  (默认为：3)：如果失败了，重试几次才最终确定失败。\n\n1. dockerfile 示例：\n    ```\n    # Command format: Instruction [arguments / command ] ..\n\n    # Base image to use, this nust be set as the first line\n    FROM ubuntu\n\n    # Maintainer\n    MAINTAINER docker_user docker_user@email.com\n\n    # RUN <command> 或 RUN [\"executable\",\"param1\",\"param2\"]\n    RUN echo \"deb http://archive.ubuntu.com/ubuntu/ raring main universe\" >> /etc/apt/sources.list\n    RUN apt-get update && apt-get install -y nginx\n    RUN echo \"\\ndaemon off;\" >> /etc/nginx/nginx.conf\n\n    # Commands when creating a new container\n    CMD /usr/sbin/nginx\n\n    LABEL version=\"1.0\"\n    LABEL description=\"A nginx image \\ that label-values can span multiple lines.\"\n    ```\n\n2. 创建镜像\n    ```\n    docker build -t build_repo/image_name /dir/docker_file\n    ```\n\n3. .dockerignore文件：让Docker忽略匹配模式路径下的目录和文件\n    ```\n    # comment\n        */tmp*\n        */*/tmp*\n        tmp?\n        ~*\n    ```\n","source":"_posts/Docker.md","raw":"[TOC]\n\n## Kubernetes：部署环境、持续集成\n\n- Container\n- Cluster、Node、Pod\n- Service、Label、Selector\n- Volume\n- Depliyment、Rolling Update\n  - ReplicaSet\n  - Canary\n  - Blue-Green\n- Continuous Delivery Pipeline\n  - Jenkins\n\n## DaoCloud加速器\n\n1. 官网地址：https://www.daocloud.io/mirror#accelerator-doc\n2. 账号：sweetyu2603   密码：sy20122603\n\n## 版本 version\n\n```\ndocker --info\ndocker --version\ndocker-compose --version\ndocker-machine --version\n```\n\n## 仓库 repository\n\n```\n仓库：docker [login|pull|push|search]\n私人仓库：registry.domain.com:5000/repository:<tag_name>\n公共仓库：username/repository<:tag_name>\n```\n\n## 容器 container\n\n```\ndocker [run|start|stop|restart|kill|rm|pause|unpause]\ndocker [ps|inspect|top|attach|events|logs|wait|export|port]\ndocker [commit|cp|diff]\n```\n\n## 镜像 image\n\n```\ndocker [images|rmi|tag|build|history|save|import]\n```\n\n## 常用库\n\n```\ndocker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -d (镜像id)\ndocker run  --name redis -p 6379:6379 -v F:/Data:/data  -d (镜像id) redis-server --appendonly yes\ndocker exec -it 7a6dbd754a68 redis-cli -h 172.16.0.6 -p 6379 -a crs-nv1bxvs7:sy123456\ndocker run --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=root -d (镜像id)\ndocker run --name jena -p 3030:3030 -e ADMIN_PASSWORD=root -d (镜像id)\ndocker run --name neo4j -p 7473-7474:7473-7474 -p 7687:7687  --privileged=true -v 本地地址:/var/lib/neo4j/import -d (镜像id)\ndocker run -p 27017:27017 -v $PWD/db:/data/db -d mongo (镜像id)\n```\n\n## 重启网卡\n\n```\nsystemctl restart network\nnmcli con show\nnmcli con up xxx\nvi /etc/sysctl.conf  或 vi /usr/lib/sysctl.d/00-system.conf\n    添加如下代码：net.ipv4.ip_forward=1 \nsysctl net.ipv4.ip_forward\n```\n\n## 关闭防火墙\n\n```\nsystemctl stop firewalld\nsystemctl disable firewalld\nreboot -h\n```\n\n## docker主机\n\n```\ndocker-machine restart default \ndocker-machine env default \ndocker-machine ls\ndocker-machine stop default\ndocker-machine kill default\ndocker-machine rm default\ndocker-machine create --virtualbox-disk-size \"50000\" --virtualbox-memory \"4096\" -d virtualbox default\n```\n\n## Toolbox\n\n```\n使用Toolbox上的docker镜像作为后台数据库，在前端进行连接时，需要填写固定本地IP（192.168.99.99），而不是locahost\n```\n\n## Volume\n\n- volumes do not provide shared between all containers, or a lifecycle management either.\n- Kubernetes, volumes allow containers in part to share data, and to be stateful.\n    ```\n    docker volume ls\n    docker volume rm $(docker volume ls -qf dangling=true)\n    ```\n\n## DockerFile\n\n指令 | 说明\n---|---\nFROM | 指定所创建镜像的基础镜像\nMAINTAINER | 指定维护者信息\nRUN | 运行命令\nCMD | 指定启动容器时默认执行的命令\nLABEL | 指定生成镜像的元数据标签信息\nEXPOSE | 声明镜像内服务所监听的端口\nENV | 指定环境变量\nADD | 复制指定的<src>路径下的内容到容器中的<dest>路径下，<src>可以为URL；如果为tar文件，会自动解压到<dest>路径下\nCOPY | 复制本地主机的<src>路径下的内容到容器中的<dest>路径下，推荐使用\nENTRYPOINT | 指定镜像的默认入口【仅一个】，docker run --entrypoint\nVOLUME | 创建数据挂载点，VOLUME [\"/data\"]\nUSER | 指定运行容器时的用户名或UID\nWORKDIR | 配置工作目录\nARG | 指定镜像内使用的参数，可用docker build --build-arg<name>=<value>来指定参数值\nONBUILD | 配置当前所创建的镜像作为其他镜像的基础镜像时，所执行的创建操作的命令\nSTOPSIGNAL | 容器退出的信号\nHEALTHCHECK | 如何进行健康检查\nSHELL | 指定默认SHELL类型，SHELL [\"executable\",\"parameters\"]，默认为 [\"bin/sh\",\"-c\"]\n\n> 注意:\n> 1. HEALTHCHECK NONE：禁止基础镜像中的健康检查\n> 1. HEALTHCHECK [OPTIONS] CMD command：根据所执行命令返回值是否为0判断\n> [OPTION]支持：\n>     - --inerval = DURATION  (默认为：30s)：多久检查一次；\n>     - --timeout = DURATION  (默认为：30s)：每次检查等待结果的超时时间；\n>     - --retries = N  (默认为：3)：如果失败了，重试几次才最终确定失败。\n\n1. dockerfile 示例：\n    ```\n    # Command format: Instruction [arguments / command ] ..\n\n    # Base image to use, this nust be set as the first line\n    FROM ubuntu\n\n    # Maintainer\n    MAINTAINER docker_user docker_user@email.com\n\n    # RUN <command> 或 RUN [\"executable\",\"param1\",\"param2\"]\n    RUN echo \"deb http://archive.ubuntu.com/ubuntu/ raring main universe\" >> /etc/apt/sources.list\n    RUN apt-get update && apt-get install -y nginx\n    RUN echo \"\\ndaemon off;\" >> /etc/nginx/nginx.conf\n\n    # Commands when creating a new container\n    CMD /usr/sbin/nginx\n\n    LABEL version=\"1.0\"\n    LABEL description=\"A nginx image \\ that label-values can span multiple lines.\"\n    ```\n\n2. 创建镜像\n    ```\n    docker build -t build_repo/image_name /dir/docker_file\n    ```\n\n3. .dockerignore文件：让Docker忽略匹配模式路径下的目录和文件\n    ```\n    # comment\n        */tmp*\n        */*/tmp*\n        tmp?\n        ~*\n    ```\n","slug":"Docker","published":1,"date":"2018-12-05T09:57:29.375Z","updated":"2019-02-01T03:10:15.914Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1oo2o80000muzy0xy1195m","content":"<p>[TOC]</p>\n<h2 id=\"Kubernetes：部署环境、持续集成\"><a href=\"#Kubernetes：部署环境、持续集成\" class=\"headerlink\" title=\"Kubernetes：部署环境、持续集成\"></a>Kubernetes：部署环境、持续集成</h2><ul>\n<li>Container</li>\n<li>Cluster、Node、Pod</li>\n<li>Service、Label、Selector</li>\n<li>Volume</li>\n<li>Depliyment、Rolling Update<ul>\n<li>ReplicaSet</li>\n<li>Canary</li>\n<li>Blue-Green</li>\n</ul>\n</li>\n<li>Continuous Delivery Pipeline<ul>\n<li>Jenkins</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"DaoCloud加速器\"><a href=\"#DaoCloud加速器\" class=\"headerlink\" title=\"DaoCloud加速器\"></a>DaoCloud加速器</h2><ol>\n<li>官网地址：<a href=\"https://www.daocloud.io/mirror#accelerator-doc\" target=\"_blank\" rel=\"noopener\">https://www.daocloud.io/mirror#accelerator-doc</a></li>\n<li>账号：sweetyu2603   密码：sy20122603</li>\n</ol>\n<h2 id=\"版本-version\"><a href=\"#版本-version\" class=\"headerlink\" title=\"版本 version\"></a>版本 version</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker --info</span><br><span class=\"line\">docker --version</span><br><span class=\"line\">docker-compose --version</span><br><span class=\"line\">docker-machine --version</span><br></pre></td></tr></table></figure>\n<h2 id=\"仓库-repository\"><a href=\"#仓库-repository\" class=\"headerlink\" title=\"仓库 repository\"></a>仓库 repository</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">仓库：docker [login|pull|push|search]</span><br><span class=\"line\">私人仓库：registry.domain.com:5000/repository:&lt;tag_name&gt;</span><br><span class=\"line\">公共仓库：username/repository&lt;:tag_name&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"容器-container\"><a href=\"#容器-container\" class=\"headerlink\" title=\"容器 container\"></a>容器 container</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker [run|start|stop|restart|kill|rm|pause|unpause]</span><br><span class=\"line\">docker [ps|inspect|top|attach|events|logs|wait|export|port]</span><br><span class=\"line\">docker [commit|cp|diff]</span><br></pre></td></tr></table></figure>\n<h2 id=\"镜像-image\"><a href=\"#镜像-image\" class=\"headerlink\" title=\"镜像 image\"></a>镜像 image</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker [images|rmi|tag|build|history|save|import]</span><br></pre></td></tr></table></figure>\n<h2 id=\"常用库\"><a href=\"#常用库\" class=\"headerlink\" title=\"常用库\"></a>常用库</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -d (镜像id)</span><br><span class=\"line\">docker run  --name redis -p 6379:6379 -v F:/Data:/data  -d (镜像id) redis-server --appendonly yes</span><br><span class=\"line\">docker exec -it 7a6dbd754a68 redis-cli -h 172.16.0.6 -p 6379 -a crs-nv1bxvs7:sy123456</span><br><span class=\"line\">docker run --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=root -d (镜像id)</span><br><span class=\"line\">docker run --name jena -p 3030:3030 -e ADMIN_PASSWORD=root -d (镜像id)</span><br><span class=\"line\">docker run --name neo4j -p 7473-7474:7473-7474 -p 7687:7687  --privileged=true -v 本地地址:/var/lib/neo4j/import -d (镜像id)</span><br><span class=\"line\">docker run -p 27017:27017 -v $PWD/db:/data/db -d mongo (镜像id)</span><br></pre></td></tr></table></figure>\n<h2 id=\"重启网卡\"><a href=\"#重启网卡\" class=\"headerlink\" title=\"重启网卡\"></a>重启网卡</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart network</span><br><span class=\"line\">nmcli con show</span><br><span class=\"line\">nmcli con up xxx</span><br><span class=\"line\">vi /etc/sysctl.conf  或 vi /usr/lib/sysctl.d/00-system.conf</span><br><span class=\"line\">    添加如下代码：net.ipv4.ip_forward=1 </span><br><span class=\"line\">sysctl net.ipv4.ip_forward</span><br></pre></td></tr></table></figure>\n<h2 id=\"关闭防火墙\"><a href=\"#关闭防火墙\" class=\"headerlink\" title=\"关闭防火墙\"></a>关闭防火墙</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld</span><br><span class=\"line\">systemctl disable firewalld</span><br><span class=\"line\">reboot -h</span><br></pre></td></tr></table></figure>\n<h2 id=\"docker主机\"><a href=\"#docker主机\" class=\"headerlink\" title=\"docker主机\"></a>docker主机</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-machine restart default </span><br><span class=\"line\">docker-machine env default </span><br><span class=\"line\">docker-machine ls</span><br><span class=\"line\">docker-machine stop default</span><br><span class=\"line\">docker-machine kill default</span><br><span class=\"line\">docker-machine rm default</span><br><span class=\"line\">docker-machine create --virtualbox-disk-size &quot;50000&quot; --virtualbox-memory &quot;4096&quot; -d virtualbox default</span><br></pre></td></tr></table></figure>\n<h2 id=\"Toolbox\"><a href=\"#Toolbox\" class=\"headerlink\" title=\"Toolbox\"></a>Toolbox</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用Toolbox上的docker镜像作为后台数据库，在前端进行连接时，需要填写固定本地IP（192.168.99.99），而不是locahost</span><br></pre></td></tr></table></figure>\n<h2 id=\"Volume\"><a href=\"#Volume\" class=\"headerlink\" title=\"Volume\"></a>Volume</h2><ul>\n<li>volumes do not provide shared between all containers, or a lifecycle management either.</li>\n<li>Kubernetes, volumes allow containers in part to share data, and to be stateful.  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker volume ls</span><br><span class=\"line\">docker volume rm $(docker volume ls -qf dangling=true)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"DockerFile\"><a href=\"#DockerFile\" class=\"headerlink\" title=\"DockerFile\"></a>DockerFile</h2><table>\n<thead>\n<tr>\n<th>指令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>FROM</td>\n<td>指定所创建镜像的基础镜像</td>\n</tr>\n<tr>\n<td>MAINTAINER</td>\n<td>指定维护者信息</td>\n</tr>\n<tr>\n<td>RUN</td>\n<td>运行命令</td>\n</tr>\n<tr>\n<td>CMD</td>\n<td>指定启动容器时默认执行的命令</td>\n</tr>\n<tr>\n<td>LABEL</td>\n<td>指定生成镜像的元数据标签信息</td>\n</tr>\n<tr>\n<td>EXPOSE</td>\n<td>声明镜像内服务所监听的端口</td>\n</tr>\n<tr>\n<td>ENV</td>\n<td>指定环境变量</td>\n</tr>\n<tr>\n<td>ADD</td>\n<td>复制指定的<src>路径下的内容到容器中的<dest>路径下，<src>可以为URL；如果为tar文件，会自动解压到<dest>路径下</dest></src></dest></src></td>\n</tr>\n<tr>\n<td>COPY</td>\n<td>复制本地主机的<src>路径下的内容到容器中的<dest>路径下，推荐使用</dest></src></td>\n</tr>\n<tr>\n<td>ENTRYPOINT</td>\n<td>指定镜像的默认入口【仅一个】，docker run –entrypoint</td>\n</tr>\n<tr>\n<td>VOLUME</td>\n<td>创建数据挂载点，VOLUME [“/data”]</td>\n</tr>\n<tr>\n<td>USER</td>\n<td>指定运行容器时的用户名或UID</td>\n</tr>\n<tr>\n<td>WORKDIR</td>\n<td>配置工作目录</td>\n</tr>\n<tr>\n<td>ARG</td>\n<td>指定镜像内使用的参数，可用docker build –build-arg<name>=<value>来指定参数值</value></name></td>\n</tr>\n<tr>\n<td>ONBUILD</td>\n<td>配置当前所创建的镜像作为其他镜像的基础镜像时，所执行的创建操作的命令</td>\n</tr>\n<tr>\n<td>STOPSIGNAL</td>\n<td>容器退出的信号</td>\n</tr>\n<tr>\n<td>HEALTHCHECK</td>\n<td>如何进行健康检查</td>\n</tr>\n<tr>\n<td>SHELL</td>\n<td>指定默认SHELL类型，SHELL [“executable”,”parameters”]，默认为 [“bin/sh”,”-c”]</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注意:</p>\n<ol>\n<li>HEALTHCHECK NONE：禁止基础镜像中的健康检查</li>\n<li>HEALTHCHECK [OPTIONS] CMD command：根据所执行命令返回值是否为0判断<br>[OPTION]支持：<ul>\n<li>–inerval = DURATION  (默认为：30s)：多久检查一次；</li>\n<li>–timeout = DURATION  (默认为：30s)：每次检查等待结果的超时时间；</li>\n<li>–retries = N  (默认为：3)：如果失败了，重试几次才最终确定失败。</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<ol>\n<li><p>dockerfile 示例：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Command format: Instruction [arguments / command ] ..</span><br><span class=\"line\"></span><br><span class=\"line\"># Base image to use, this nust be set as the first line</span><br><span class=\"line\">FROM ubuntu</span><br><span class=\"line\"></span><br><span class=\"line\"># Maintainer</span><br><span class=\"line\">MAINTAINER docker_user docker_user@email.com</span><br><span class=\"line\"></span><br><span class=\"line\"># RUN &lt;command&gt; 或 RUN [&quot;executable&quot;,&quot;param1&quot;,&quot;param2&quot;]</span><br><span class=\"line\">RUN echo &quot;deb http://archive.ubuntu.com/ubuntu/ raring main universe&quot; &gt;&gt; /etc/apt/sources.list</span><br><span class=\"line\">RUN apt-get update &amp;&amp; apt-get install -y nginx</span><br><span class=\"line\">RUN echo &quot;\\ndaemon off;&quot; &gt;&gt; /etc/nginx/nginx.conf</span><br><span class=\"line\"></span><br><span class=\"line\"># Commands when creating a new container</span><br><span class=\"line\">CMD /usr/sbin/nginx</span><br><span class=\"line\"></span><br><span class=\"line\">LABEL version=&quot;1.0&quot;</span><br><span class=\"line\">LABEL description=&quot;A nginx image \\ that label-values can span multiple lines.&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建镜像</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t build_repo/image_name /dir/docker_file</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>.dockerignore文件：让Docker忽略匹配模式路径下的目录和文件</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># comment</span><br><span class=\"line\">    */tmp*</span><br><span class=\"line\">    */*/tmp*</span><br><span class=\"line\">    tmp?</span><br><span class=\"line\">    ~*</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>[TOC]</p>\n<h2 id=\"Kubernetes：部署环境、持续集成\"><a href=\"#Kubernetes：部署环境、持续集成\" class=\"headerlink\" title=\"Kubernetes：部署环境、持续集成\"></a>Kubernetes：部署环境、持续集成</h2><ul>\n<li>Container</li>\n<li>Cluster、Node、Pod</li>\n<li>Service、Label、Selector</li>\n<li>Volume</li>\n<li>Depliyment、Rolling Update<ul>\n<li>ReplicaSet</li>\n<li>Canary</li>\n<li>Blue-Green</li>\n</ul>\n</li>\n<li>Continuous Delivery Pipeline<ul>\n<li>Jenkins</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"DaoCloud加速器\"><a href=\"#DaoCloud加速器\" class=\"headerlink\" title=\"DaoCloud加速器\"></a>DaoCloud加速器</h2><ol>\n<li>官网地址：<a href=\"https://www.daocloud.io/mirror#accelerator-doc\" target=\"_blank\" rel=\"noopener\">https://www.daocloud.io/mirror#accelerator-doc</a></li>\n<li>账号：sweetyu2603   密码：sy20122603</li>\n</ol>\n<h2 id=\"版本-version\"><a href=\"#版本-version\" class=\"headerlink\" title=\"版本 version\"></a>版本 version</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker --info</span><br><span class=\"line\">docker --version</span><br><span class=\"line\">docker-compose --version</span><br><span class=\"line\">docker-machine --version</span><br></pre></td></tr></table></figure>\n<h2 id=\"仓库-repository\"><a href=\"#仓库-repository\" class=\"headerlink\" title=\"仓库 repository\"></a>仓库 repository</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">仓库：docker [login|pull|push|search]</span><br><span class=\"line\">私人仓库：registry.domain.com:5000/repository:&lt;tag_name&gt;</span><br><span class=\"line\">公共仓库：username/repository&lt;:tag_name&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"容器-container\"><a href=\"#容器-container\" class=\"headerlink\" title=\"容器 container\"></a>容器 container</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker [run|start|stop|restart|kill|rm|pause|unpause]</span><br><span class=\"line\">docker [ps|inspect|top|attach|events|logs|wait|export|port]</span><br><span class=\"line\">docker [commit|cp|diff]</span><br></pre></td></tr></table></figure>\n<h2 id=\"镜像-image\"><a href=\"#镜像-image\" class=\"headerlink\" title=\"镜像 image\"></a>镜像 image</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker [images|rmi|tag|build|history|save|import]</span><br></pre></td></tr></table></figure>\n<h2 id=\"常用库\"><a href=\"#常用库\" class=\"headerlink\" title=\"常用库\"></a>常用库</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -d (镜像id)</span><br><span class=\"line\">docker run  --name redis -p 6379:6379 -v F:/Data:/data  -d (镜像id) redis-server --appendonly yes</span><br><span class=\"line\">docker exec -it 7a6dbd754a68 redis-cli -h 172.16.0.6 -p 6379 -a crs-nv1bxvs7:sy123456</span><br><span class=\"line\">docker run --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=root -d (镜像id)</span><br><span class=\"line\">docker run --name jena -p 3030:3030 -e ADMIN_PASSWORD=root -d (镜像id)</span><br><span class=\"line\">docker run --name neo4j -p 7473-7474:7473-7474 -p 7687:7687  --privileged=true -v 本地地址:/var/lib/neo4j/import -d (镜像id)</span><br><span class=\"line\">docker run -p 27017:27017 -v $PWD/db:/data/db -d mongo (镜像id)</span><br></pre></td></tr></table></figure>\n<h2 id=\"重启网卡\"><a href=\"#重启网卡\" class=\"headerlink\" title=\"重启网卡\"></a>重启网卡</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart network</span><br><span class=\"line\">nmcli con show</span><br><span class=\"line\">nmcli con up xxx</span><br><span class=\"line\">vi /etc/sysctl.conf  或 vi /usr/lib/sysctl.d/00-system.conf</span><br><span class=\"line\">    添加如下代码：net.ipv4.ip_forward=1 </span><br><span class=\"line\">sysctl net.ipv4.ip_forward</span><br></pre></td></tr></table></figure>\n<h2 id=\"关闭防火墙\"><a href=\"#关闭防火墙\" class=\"headerlink\" title=\"关闭防火墙\"></a>关闭防火墙</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld</span><br><span class=\"line\">systemctl disable firewalld</span><br><span class=\"line\">reboot -h</span><br></pre></td></tr></table></figure>\n<h2 id=\"docker主机\"><a href=\"#docker主机\" class=\"headerlink\" title=\"docker主机\"></a>docker主机</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-machine restart default </span><br><span class=\"line\">docker-machine env default </span><br><span class=\"line\">docker-machine ls</span><br><span class=\"line\">docker-machine stop default</span><br><span class=\"line\">docker-machine kill default</span><br><span class=\"line\">docker-machine rm default</span><br><span class=\"line\">docker-machine create --virtualbox-disk-size &quot;50000&quot; --virtualbox-memory &quot;4096&quot; -d virtualbox default</span><br></pre></td></tr></table></figure>\n<h2 id=\"Toolbox\"><a href=\"#Toolbox\" class=\"headerlink\" title=\"Toolbox\"></a>Toolbox</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">使用Toolbox上的docker镜像作为后台数据库，在前端进行连接时，需要填写固定本地IP（192.168.99.99），而不是locahost</span><br></pre></td></tr></table></figure>\n<h2 id=\"Volume\"><a href=\"#Volume\" class=\"headerlink\" title=\"Volume\"></a>Volume</h2><ul>\n<li>volumes do not provide shared between all containers, or a lifecycle management either.</li>\n<li>Kubernetes, volumes allow containers in part to share data, and to be stateful.  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker volume ls</span><br><span class=\"line\">docker volume rm $(docker volume ls -qf dangling=true)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"DockerFile\"><a href=\"#DockerFile\" class=\"headerlink\" title=\"DockerFile\"></a>DockerFile</h2><table>\n<thead>\n<tr>\n<th>指令</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>FROM</td>\n<td>指定所创建镜像的基础镜像</td>\n</tr>\n<tr>\n<td>MAINTAINER</td>\n<td>指定维护者信息</td>\n</tr>\n<tr>\n<td>RUN</td>\n<td>运行命令</td>\n</tr>\n<tr>\n<td>CMD</td>\n<td>指定启动容器时默认执行的命令</td>\n</tr>\n<tr>\n<td>LABEL</td>\n<td>指定生成镜像的元数据标签信息</td>\n</tr>\n<tr>\n<td>EXPOSE</td>\n<td>声明镜像内服务所监听的端口</td>\n</tr>\n<tr>\n<td>ENV</td>\n<td>指定环境变量</td>\n</tr>\n<tr>\n<td>ADD</td>\n<td>复制指定的<src>路径下的内容到容器中的<dest>路径下，<src>可以为URL；如果为tar文件，会自动解压到<dest>路径下</dest></src></dest></src></td>\n</tr>\n<tr>\n<td>COPY</td>\n<td>复制本地主机的<src>路径下的内容到容器中的<dest>路径下，推荐使用</dest></src></td>\n</tr>\n<tr>\n<td>ENTRYPOINT</td>\n<td>指定镜像的默认入口【仅一个】，docker run –entrypoint</td>\n</tr>\n<tr>\n<td>VOLUME</td>\n<td>创建数据挂载点，VOLUME [“/data”]</td>\n</tr>\n<tr>\n<td>USER</td>\n<td>指定运行容器时的用户名或UID</td>\n</tr>\n<tr>\n<td>WORKDIR</td>\n<td>配置工作目录</td>\n</tr>\n<tr>\n<td>ARG</td>\n<td>指定镜像内使用的参数，可用docker build –build-arg<name>=<value>来指定参数值</value></name></td>\n</tr>\n<tr>\n<td>ONBUILD</td>\n<td>配置当前所创建的镜像作为其他镜像的基础镜像时，所执行的创建操作的命令</td>\n</tr>\n<tr>\n<td>STOPSIGNAL</td>\n<td>容器退出的信号</td>\n</tr>\n<tr>\n<td>HEALTHCHECK</td>\n<td>如何进行健康检查</td>\n</tr>\n<tr>\n<td>SHELL</td>\n<td>指定默认SHELL类型，SHELL [“executable”,”parameters”]，默认为 [“bin/sh”,”-c”]</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>注意:</p>\n<ol>\n<li>HEALTHCHECK NONE：禁止基础镜像中的健康检查</li>\n<li>HEALTHCHECK [OPTIONS] CMD command：根据所执行命令返回值是否为0判断<br>[OPTION]支持：<ul>\n<li>–inerval = DURATION  (默认为：30s)：多久检查一次；</li>\n<li>–timeout = DURATION  (默认为：30s)：每次检查等待结果的超时时间；</li>\n<li>–retries = N  (默认为：3)：如果失败了，重试几次才最终确定失败。</li>\n</ul>\n</li>\n</ol>\n</blockquote>\n<ol>\n<li><p>dockerfile 示例：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Command format: Instruction [arguments / command ] ..</span><br><span class=\"line\"></span><br><span class=\"line\"># Base image to use, this nust be set as the first line</span><br><span class=\"line\">FROM ubuntu</span><br><span class=\"line\"></span><br><span class=\"line\"># Maintainer</span><br><span class=\"line\">MAINTAINER docker_user docker_user@email.com</span><br><span class=\"line\"></span><br><span class=\"line\"># RUN &lt;command&gt; 或 RUN [&quot;executable&quot;,&quot;param1&quot;,&quot;param2&quot;]</span><br><span class=\"line\">RUN echo &quot;deb http://archive.ubuntu.com/ubuntu/ raring main universe&quot; &gt;&gt; /etc/apt/sources.list</span><br><span class=\"line\">RUN apt-get update &amp;&amp; apt-get install -y nginx</span><br><span class=\"line\">RUN echo &quot;\\ndaemon off;&quot; &gt;&gt; /etc/nginx/nginx.conf</span><br><span class=\"line\"></span><br><span class=\"line\"># Commands when creating a new container</span><br><span class=\"line\">CMD /usr/sbin/nginx</span><br><span class=\"line\"></span><br><span class=\"line\">LABEL version=&quot;1.0&quot;</span><br><span class=\"line\">LABEL description=&quot;A nginx image \\ that label-values can span multiple lines.&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建镜像</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t build_repo/image_name /dir/docker_file</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>.dockerignore文件：让Docker忽略匹配模式路径下的目录和文件</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># comment</span><br><span class=\"line\">    */tmp*</span><br><span class=\"line\">    */*/tmp*</span><br><span class=\"line\">    tmp?</span><br><span class=\"line\">    ~*</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n"},{"_content":"#### 安装\n\n```\nsudo apt-get install git\n```\n\n#### 拉取git 库\n\n```\ngit clone git@github.com:仓库地址.git\n```\n\n#### 添加、删除、提交暂存区\n\n```\ngit pull\ngit add ‘目标git_path下的某个文件名’\ngit rm -f ‘目标git_path下的某个文件名’\ngit commit -m \"备注信息\"\ngit push -u origin 分支名\n```\n\n#### 分支管理\n\n```\n> 远程\n    git branch -r\n    git checkout -b 本地分支名 origin/远程分支名\n    git push origin --delete 远程分支名\n> 本地\n    git branch\n    git checkout 本地分支名\n    git branch -d 本地分支名\n```\n\n#### 日志分析\n\n```\ngit status                              # 获取当前分支状态\ngit reset --hard 版本号前几位/HEAD^       # 版本回退\ngit log --graph                         # 查看分支合并图\ngit rev-parse HEAD                      # 获取commitID号\n```\n","source":"_posts/Git.md","raw":"#### 安装\n\n```\nsudo apt-get install git\n```\n\n#### 拉取git 库\n\n```\ngit clone git@github.com:仓库地址.git\n```\n\n#### 添加、删除、提交暂存区\n\n```\ngit pull\ngit add ‘目标git_path下的某个文件名’\ngit rm -f ‘目标git_path下的某个文件名’\ngit commit -m \"备注信息\"\ngit push -u origin 分支名\n```\n\n#### 分支管理\n\n```\n> 远程\n    git branch -r\n    git checkout -b 本地分支名 origin/远程分支名\n    git push origin --delete 远程分支名\n> 本地\n    git branch\n    git checkout 本地分支名\n    git branch -d 本地分支名\n```\n\n#### 日志分析\n\n```\ngit status                              # 获取当前分支状态\ngit reset --hard 版本号前几位/HEAD^       # 版本回退\ngit log --graph                         # 查看分支合并图\ngit rev-parse HEAD                      # 获取commitID号\n```\n","slug":"Git","published":1,"date":"2018-12-05T09:57:37.671Z","updated":"2018-12-06T03:22:02.444Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1oo2oi0001muzyinxktr9k","content":"<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install git</span><br></pre></td></tr></table></figure>\n<h4 id=\"拉取git-库\"><a href=\"#拉取git-库\" class=\"headerlink\" title=\"拉取git 库\"></a>拉取git 库</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:仓库地址.git</span><br></pre></td></tr></table></figure>\n<h4 id=\"添加、删除、提交暂存区\"><a href=\"#添加、删除、提交暂存区\" class=\"headerlink\" title=\"添加、删除、提交暂存区\"></a>添加、删除、提交暂存区</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br><span class=\"line\">git add ‘目标git_path下的某个文件名’</span><br><span class=\"line\">git rm -f ‘目标git_path下的某个文件名’</span><br><span class=\"line\">git commit -m &quot;备注信息&quot;</span><br><span class=\"line\">git push -u origin 分支名</span><br></pre></td></tr></table></figure>\n<h4 id=\"分支管理\"><a href=\"#分支管理\" class=\"headerlink\" title=\"分支管理\"></a>分支管理</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; 远程</span><br><span class=\"line\">    git branch -r</span><br><span class=\"line\">    git checkout -b 本地分支名 origin/远程分支名</span><br><span class=\"line\">    git push origin --delete 远程分支名</span><br><span class=\"line\">&gt; 本地</span><br><span class=\"line\">    git branch</span><br><span class=\"line\">    git checkout 本地分支名</span><br><span class=\"line\">    git branch -d 本地分支名</span><br></pre></td></tr></table></figure>\n<h4 id=\"日志分析\"><a href=\"#日志分析\" class=\"headerlink\" title=\"日志分析\"></a>日志分析</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status                              # 获取当前分支状态</span><br><span class=\"line\">git reset --hard 版本号前几位/HEAD^       # 版本回退</span><br><span class=\"line\">git log --graph                         # 查看分支合并图</span><br><span class=\"line\">git rev-parse HEAD                      # 获取commitID号</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install git</span><br></pre></td></tr></table></figure>\n<h4 id=\"拉取git-库\"><a href=\"#拉取git-库\" class=\"headerlink\" title=\"拉取git 库\"></a>拉取git 库</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:仓库地址.git</span><br></pre></td></tr></table></figure>\n<h4 id=\"添加、删除、提交暂存区\"><a href=\"#添加、删除、提交暂存区\" class=\"headerlink\" title=\"添加、删除、提交暂存区\"></a>添加、删除、提交暂存区</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br><span class=\"line\">git add ‘目标git_path下的某个文件名’</span><br><span class=\"line\">git rm -f ‘目标git_path下的某个文件名’</span><br><span class=\"line\">git commit -m &quot;备注信息&quot;</span><br><span class=\"line\">git push -u origin 分支名</span><br></pre></td></tr></table></figure>\n<h4 id=\"分支管理\"><a href=\"#分支管理\" class=\"headerlink\" title=\"分支管理\"></a>分支管理</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; 远程</span><br><span class=\"line\">    git branch -r</span><br><span class=\"line\">    git checkout -b 本地分支名 origin/远程分支名</span><br><span class=\"line\">    git push origin --delete 远程分支名</span><br><span class=\"line\">&gt; 本地</span><br><span class=\"line\">    git branch</span><br><span class=\"line\">    git checkout 本地分支名</span><br><span class=\"line\">    git branch -d 本地分支名</span><br></pre></td></tr></table></figure>\n<h4 id=\"日志分析\"><a href=\"#日志分析\" class=\"headerlink\" title=\"日志分析\"></a>日志分析</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status                              # 获取当前分支状态</span><br><span class=\"line\">git reset --hard 版本号前几位/HEAD^       # 版本回退</span><br><span class=\"line\">git log --graph                         # 查看分支合并图</span><br><span class=\"line\">git rev-parse HEAD                      # 获取commitID号</span><br></pre></td></tr></table></figure>\n"},{"_content":"[TOC]\n\n#### 修改快捷键：Preferences -> KeyBindings\n\n```\n[   { \"keys\": [\"command+u\"], \"command\": \"upper_case\" },\n    { \"keys\": [\"command+l\"], \"command\": \"lower_case\" },\n    { \"keys\": [\"ctrl+shift+p\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"command_palette\"} }\n]\n```\n\n#### 多行操作\n\n```\n1、鼠标选中多行，按下 Ctrl Shift L (Command Shift L) ，可同时编辑这些行； \n2、鼠标选中文本，反复按 CTRL D (Command D) ，可继续向下同时选中下一个相同的文本进行同时编辑； \n3、鼠标选中文本，按下 Alt F3 (Win) 或 Ctrl Command G(Mac) ，可一次性选择全部的相同文本进行同时编辑；\n4、Shift 鼠标右键 (Win) 或 Option 鼠标左键 (Mac) 或使用鼠标中键，可用鼠标进行竖向多行选择； \n5、Ctrl 鼠标左键(Win) 或 Command 鼠标左键(Mac) ，可手动选择同时要编辑。\n```\n\n#### 插件：Preferences -> Packages Setting\n\n##### Package Control\n\n```\nCtrl + `，打开控制台\n输入 \nimport urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())\n回车\nctrl+shift+p\n输入Package Control:install Package，可安装插件\n```\n\n##### PackageResourceViewer\n> resouceopen，查看所有Sublime插件源码\n\n\n##### Git：ctrl+shift+p -> 输入 Git:git指令\n##### GitGutter：查看git修改内容\n##### Anaconda：python脚本自动提示\n\n```\ncommand+b，运行程序\nView -> show Console，可显示控制台输入参数\n{\n    \"python_interpreter\": \"/Users/songyu/anaconda3/bin/python3\",  \t// 可通过which python3获取地址\n    \"complete_parameters\": false,\t\t\t\t// 自动补全函数时是否匹配必要参数\n    \"complete_all_parameters\": false,\t\t\t// 自动补全函数时是否匹配所有参数\n    \"suppress_word_completions\": false,\t\t// 禁止代码补全\n    \"suppress_explicit_completions\": false,\t\t// 禁止精确补全\n    \"auto_formatting\": true,\t\t\t\t\t// 代码格式检查\n    \"enable_docstrings_tooltip\": false,\t\t\t// 显示文档\n    \"enable_signatures_tooltip\": false,\t\t\t// 在悬浮窗中显示方法签名\n    \"display_signatures\": false\t\t\t\t// 显示方法签名\n}\n```\n\n##### 格式化\n - Pretty JSON（ctrl+command+j，【json】）\n - JsFormat（ctrl+alt+f，【json、js】）\n - SublimeAStyleFormater（ctrl+alt+f，【C、C++、Java、C#】）\n - SqlBeautifier（command+j，再command+f，【sql】）\n\n##### DocBlockr：注释\n##### AutoFileName：提示文件路径\n##### ConvertToUTF8：解决中文乱码问题\n##### Better Completion：自动补全\n> NodeJS、css、html、javascript、jquery、php、sql、react、angularjs、glossary等\n##### Javatar：command+shift+k(两次)\n\n```\nProject Settings > Set Source Folder > 代码源文件夹，一般为./src\nProject Settings > Dependencies > Add External .jar 或 Add Class Folder，增加依赖包或依赖类\nProject Settings > Set Default JDK，设置默认JDK版本\nCreate > Class > package.demoName，新建类\nOperations > Correct Class，自动更新包名\nOperations > Organize Imports，自动更新import列表\nBuilds > Project，编译\nBuilds > Run Main Class / Current Class，运行main程序\n```\n\n##### Emmet：快速编写html（Tab 或 ctrl+e）\n\n```\n> html:5    或     !html:xt\t    或      html:4s\n> 标签.class值#id名\t\t如：p.bar#foo\n> 标签{标签内的值}\t\t如：h1{标题}\n> 标签[属性=属性值]\t    如：a[href=#]\n> 标签1+标签2\t\t\t同级，a.class1+a.class2\n> 标签1>子标签2\t\t    嵌套级，p#id1>span#id2\n> 标签1^上一层标签2\t    提升一级，p>span>p\n> 标签*N\t\t\t\t    多个元素，ul>li.item*3\n> css缩写\n    - p 表示%\n    - e 表示 em\n    - x 表示 ex\n    - h 表示 height\n    - w 表示 width\n    - m 表示 margin\n    - @f、@f+ 表示 @font-face\n    - ov:h、ov-h、ovh 表示 overflow:hidden\n    - lg(left,#fff 50%,#000)，渐变颜色\n    - -super-foo 表示 后缀为-super-foo的属性\n```\n\n##### Color Highlighter：shift+ctrl+c，选择颜色插入\n\n##### Autoprefixer：css的浏览器兼容书写，需要已安装nodejs","source":"_posts/Sublime.md","raw":"[TOC]\n\n#### 修改快捷键：Preferences -> KeyBindings\n\n```\n[   { \"keys\": [\"command+u\"], \"command\": \"upper_case\" },\n    { \"keys\": [\"command+l\"], \"command\": \"lower_case\" },\n    { \"keys\": [\"ctrl+shift+p\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"command_palette\"} }\n]\n```\n\n#### 多行操作\n\n```\n1、鼠标选中多行，按下 Ctrl Shift L (Command Shift L) ，可同时编辑这些行； \n2、鼠标选中文本，反复按 CTRL D (Command D) ，可继续向下同时选中下一个相同的文本进行同时编辑； \n3、鼠标选中文本，按下 Alt F3 (Win) 或 Ctrl Command G(Mac) ，可一次性选择全部的相同文本进行同时编辑；\n4、Shift 鼠标右键 (Win) 或 Option 鼠标左键 (Mac) 或使用鼠标中键，可用鼠标进行竖向多行选择； \n5、Ctrl 鼠标左键(Win) 或 Command 鼠标左键(Mac) ，可手动选择同时要编辑。\n```\n\n#### 插件：Preferences -> Packages Setting\n\n##### Package Control\n\n```\nCtrl + `，打开控制台\n输入 \nimport urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())\n回车\nctrl+shift+p\n输入Package Control:install Package，可安装插件\n```\n\n##### PackageResourceViewer\n> resouceopen，查看所有Sublime插件源码\n\n\n##### Git：ctrl+shift+p -> 输入 Git:git指令\n##### GitGutter：查看git修改内容\n##### Anaconda：python脚本自动提示\n\n```\ncommand+b，运行程序\nView -> show Console，可显示控制台输入参数\n{\n    \"python_interpreter\": \"/Users/songyu/anaconda3/bin/python3\",  \t// 可通过which python3获取地址\n    \"complete_parameters\": false,\t\t\t\t// 自动补全函数时是否匹配必要参数\n    \"complete_all_parameters\": false,\t\t\t// 自动补全函数时是否匹配所有参数\n    \"suppress_word_completions\": false,\t\t// 禁止代码补全\n    \"suppress_explicit_completions\": false,\t\t// 禁止精确补全\n    \"auto_formatting\": true,\t\t\t\t\t// 代码格式检查\n    \"enable_docstrings_tooltip\": false,\t\t\t// 显示文档\n    \"enable_signatures_tooltip\": false,\t\t\t// 在悬浮窗中显示方法签名\n    \"display_signatures\": false\t\t\t\t// 显示方法签名\n}\n```\n\n##### 格式化\n - Pretty JSON（ctrl+command+j，【json】）\n - JsFormat（ctrl+alt+f，【json、js】）\n - SublimeAStyleFormater（ctrl+alt+f，【C、C++、Java、C#】）\n - SqlBeautifier（command+j，再command+f，【sql】）\n\n##### DocBlockr：注释\n##### AutoFileName：提示文件路径\n##### ConvertToUTF8：解决中文乱码问题\n##### Better Completion：自动补全\n> NodeJS、css、html、javascript、jquery、php、sql、react、angularjs、glossary等\n##### Javatar：command+shift+k(两次)\n\n```\nProject Settings > Set Source Folder > 代码源文件夹，一般为./src\nProject Settings > Dependencies > Add External .jar 或 Add Class Folder，增加依赖包或依赖类\nProject Settings > Set Default JDK，设置默认JDK版本\nCreate > Class > package.demoName，新建类\nOperations > Correct Class，自动更新包名\nOperations > Organize Imports，自动更新import列表\nBuilds > Project，编译\nBuilds > Run Main Class / Current Class，运行main程序\n```\n\n##### Emmet：快速编写html（Tab 或 ctrl+e）\n\n```\n> html:5    或     !html:xt\t    或      html:4s\n> 标签.class值#id名\t\t如：p.bar#foo\n> 标签{标签内的值}\t\t如：h1{标题}\n> 标签[属性=属性值]\t    如：a[href=#]\n> 标签1+标签2\t\t\t同级，a.class1+a.class2\n> 标签1>子标签2\t\t    嵌套级，p#id1>span#id2\n> 标签1^上一层标签2\t    提升一级，p>span>p\n> 标签*N\t\t\t\t    多个元素，ul>li.item*3\n> css缩写\n    - p 表示%\n    - e 表示 em\n    - x 表示 ex\n    - h 表示 height\n    - w 表示 width\n    - m 表示 margin\n    - @f、@f+ 表示 @font-face\n    - ov:h、ov-h、ovh 表示 overflow:hidden\n    - lg(left,#fff 50%,#000)，渐变颜色\n    - -super-foo 表示 后缀为-super-foo的属性\n```\n\n##### Color Highlighter：shift+ctrl+c，选择颜色插入\n\n##### Autoprefixer：css的浏览器兼容书写，需要已安装nodejs","slug":"Sublime","published":1,"date":"2018-12-05T09:57:19.563Z","updated":"2018-12-17T06:01:53.334Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1oo2ow0002muzyqwej16j5","content":"<p>[TOC]</p>\n<h4 id=\"修改快捷键：Preferences-gt-KeyBindings\"><a href=\"#修改快捷键：Preferences-gt-KeyBindings\" class=\"headerlink\" title=\"修改快捷键：Preferences -&gt; KeyBindings\"></a>修改快捷键：Preferences -&gt; KeyBindings</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[   &#123; &quot;keys&quot;: [&quot;command+u&quot;], &quot;command&quot;: &quot;upper_case&quot; &#125;,</span><br><span class=\"line\">    &#123; &quot;keys&quot;: [&quot;command+l&quot;], &quot;command&quot;: &quot;lower_case&quot; &#125;,</span><br><span class=\"line\">    &#123; &quot;keys&quot;: [&quot;ctrl+shift+p&quot;], &quot;command&quot;: &quot;show_overlay&quot;, &quot;args&quot;: &#123;&quot;overlay&quot;: &quot;command_palette&quot;&#125; &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h4 id=\"多行操作\"><a href=\"#多行操作\" class=\"headerlink\" title=\"多行操作\"></a>多行操作</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、鼠标选中多行，按下 Ctrl Shift L (Command Shift L) ，可同时编辑这些行； </span><br><span class=\"line\">2、鼠标选中文本，反复按 CTRL D (Command D) ，可继续向下同时选中下一个相同的文本进行同时编辑； </span><br><span class=\"line\">3、鼠标选中文本，按下 Alt F3 (Win) 或 Ctrl Command G(Mac) ，可一次性选择全部的相同文本进行同时编辑；</span><br><span class=\"line\">4、Shift 鼠标右键 (Win) 或 Option 鼠标左键 (Mac) 或使用鼠标中键，可用鼠标进行竖向多行选择； </span><br><span class=\"line\">5、Ctrl 鼠标左键(Win) 或 Command 鼠标左键(Mac) ，可手动选择同时要编辑。</span><br></pre></td></tr></table></figure>\n<h4 id=\"插件：Preferences-gt-Packages-Setting\"><a href=\"#插件：Preferences-gt-Packages-Setting\" class=\"headerlink\" title=\"插件：Preferences -&gt; Packages Setting\"></a>插件：Preferences -&gt; Packages Setting</h4><h5 id=\"Package-Control\"><a href=\"#Package-Control\" class=\"headerlink\" title=\"Package Control\"></a>Package Control</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ctrl + `，打开控制台</span><br><span class=\"line\">输入 </span><br><span class=\"line\">import urllib.request,os; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &apos;wb&apos;).write(urllib.request.urlopen( &apos;http://sublime.wbond.net/&apos; + pf.replace(&apos; &apos;,&apos;%20&apos;)).read())</span><br><span class=\"line\">回车</span><br><span class=\"line\">ctrl+shift+p</span><br><span class=\"line\">输入Package Control:install Package，可安装插件</span><br></pre></td></tr></table></figure>\n<h5 id=\"PackageResourceViewer\"><a href=\"#PackageResourceViewer\" class=\"headerlink\" title=\"PackageResourceViewer\"></a>PackageResourceViewer</h5><blockquote>\n<p>resouceopen，查看所有Sublime插件源码</p>\n</blockquote>\n<h5 id=\"Git：ctrl-shift-p-gt-输入-Git-git指令\"><a href=\"#Git：ctrl-shift-p-gt-输入-Git-git指令\" class=\"headerlink\" title=\"Git：ctrl+shift+p -&gt; 输入 Git:git指令\"></a>Git：ctrl+shift+p -&gt; 输入 Git:git指令</h5><h5 id=\"GitGutter：查看git修改内容\"><a href=\"#GitGutter：查看git修改内容\" class=\"headerlink\" title=\"GitGutter：查看git修改内容\"></a>GitGutter：查看git修改内容</h5><h5 id=\"Anaconda：python脚本自动提示\"><a href=\"#Anaconda：python脚本自动提示\" class=\"headerlink\" title=\"Anaconda：python脚本自动提示\"></a>Anaconda：python脚本自动提示</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">command+b，运行程序</span><br><span class=\"line\">View -&gt; show Console，可显示控制台输入参数</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;python_interpreter&quot;: &quot;/Users/songyu/anaconda3/bin/python3&quot;,  \t// 可通过which python3获取地址</span><br><span class=\"line\">    &quot;complete_parameters&quot;: false,\t\t\t\t// 自动补全函数时是否匹配必要参数</span><br><span class=\"line\">    &quot;complete_all_parameters&quot;: false,\t\t\t// 自动补全函数时是否匹配所有参数</span><br><span class=\"line\">    &quot;suppress_word_completions&quot;: false,\t\t// 禁止代码补全</span><br><span class=\"line\">    &quot;suppress_explicit_completions&quot;: false,\t\t// 禁止精确补全</span><br><span class=\"line\">    &quot;auto_formatting&quot;: true,\t\t\t\t\t// 代码格式检查</span><br><span class=\"line\">    &quot;enable_docstrings_tooltip&quot;: false,\t\t\t// 显示文档</span><br><span class=\"line\">    &quot;enable_signatures_tooltip&quot;: false,\t\t\t// 在悬浮窗中显示方法签名</span><br><span class=\"line\">    &quot;display_signatures&quot;: false\t\t\t\t// 显示方法签名</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"格式化\"><a href=\"#格式化\" class=\"headerlink\" title=\"格式化\"></a>格式化</h5><ul>\n<li>Pretty JSON（ctrl+command+j，【json】）</li>\n<li>JsFormat（ctrl+alt+f，【json、js】）</li>\n<li>SublimeAStyleFormater（ctrl+alt+f，【C、C++、Java、C#】）</li>\n<li>SqlBeautifier（command+j，再command+f，【sql】）</li>\n</ul>\n<h5 id=\"DocBlockr：注释\"><a href=\"#DocBlockr：注释\" class=\"headerlink\" title=\"DocBlockr：注释\"></a>DocBlockr：注释</h5><h5 id=\"AutoFileName：提示文件路径\"><a href=\"#AutoFileName：提示文件路径\" class=\"headerlink\" title=\"AutoFileName：提示文件路径\"></a>AutoFileName：提示文件路径</h5><h5 id=\"ConvertToUTF8：解决中文乱码问题\"><a href=\"#ConvertToUTF8：解决中文乱码问题\" class=\"headerlink\" title=\"ConvertToUTF8：解决中文乱码问题\"></a>ConvertToUTF8：解决中文乱码问题</h5><h5 id=\"Better-Completion：自动补全\"><a href=\"#Better-Completion：自动补全\" class=\"headerlink\" title=\"Better Completion：自动补全\"></a>Better Completion：自动补全</h5><blockquote>\n<p>NodeJS、css、html、javascript、jquery、php、sql、react、angularjs、glossary等</p>\n</blockquote>\n<h5 id=\"Javatar：command-shift-k-两次\"><a href=\"#Javatar：command-shift-k-两次\" class=\"headerlink\" title=\"Javatar：command+shift+k(两次)\"></a>Javatar：command+shift+k(两次)</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Project Settings &gt; Set Source Folder &gt; 代码源文件夹，一般为./src</span><br><span class=\"line\">Project Settings &gt; Dependencies &gt; Add External .jar 或 Add Class Folder，增加依赖包或依赖类</span><br><span class=\"line\">Project Settings &gt; Set Default JDK，设置默认JDK版本</span><br><span class=\"line\">Create &gt; Class &gt; package.demoName，新建类</span><br><span class=\"line\">Operations &gt; Correct Class，自动更新包名</span><br><span class=\"line\">Operations &gt; Organize Imports，自动更新import列表</span><br><span class=\"line\">Builds &gt; Project，编译</span><br><span class=\"line\">Builds &gt; Run Main Class / Current Class，运行main程序</span><br></pre></td></tr></table></figure>\n<h5 id=\"Emmet：快速编写html（Tab-或-ctrl-e）\"><a href=\"#Emmet：快速编写html（Tab-或-ctrl-e）\" class=\"headerlink\" title=\"Emmet：快速编写html（Tab 或 ctrl+e）\"></a>Emmet：快速编写html（Tab 或 ctrl+e）</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; html:5    或     !html:xt\t    或      html:4s</span><br><span class=\"line\">&gt; 标签.class值#id名\t\t如：p.bar#foo</span><br><span class=\"line\">&gt; 标签&#123;标签内的值&#125;\t\t如：h1&#123;标题&#125;</span><br><span class=\"line\">&gt; 标签[属性=属性值]\t    如：a[href=#]</span><br><span class=\"line\">&gt; 标签1+标签2\t\t\t同级，a.class1+a.class2</span><br><span class=\"line\">&gt; 标签1&gt;子标签2\t\t    嵌套级，p#id1&gt;span#id2</span><br><span class=\"line\">&gt; 标签1^上一层标签2\t    提升一级，p&gt;span&gt;p</span><br><span class=\"line\">&gt; 标签*N\t\t\t\t    多个元素，ul&gt;li.item*3</span><br><span class=\"line\">&gt; css缩写</span><br><span class=\"line\">    - p 表示%</span><br><span class=\"line\">    - e 表示 em</span><br><span class=\"line\">    - x 表示 ex</span><br><span class=\"line\">    - h 表示 height</span><br><span class=\"line\">    - w 表示 width</span><br><span class=\"line\">    - m 表示 margin</span><br><span class=\"line\">    - @f、@f+ 表示 @font-face</span><br><span class=\"line\">    - ov:h、ov-h、ovh 表示 overflow:hidden</span><br><span class=\"line\">    - lg(left,#fff 50%,#000)，渐变颜色</span><br><span class=\"line\">    - -super-foo 表示 后缀为-super-foo的属性</span><br></pre></td></tr></table></figure>\n<h5 id=\"Color-Highlighter：shift-ctrl-c，选择颜色插入\"><a href=\"#Color-Highlighter：shift-ctrl-c，选择颜色插入\" class=\"headerlink\" title=\"Color Highlighter：shift+ctrl+c，选择颜色插入\"></a>Color Highlighter：shift+ctrl+c，选择颜色插入</h5><h5 id=\"Autoprefixer：css的浏览器兼容书写，需要已安装nodejs\"><a href=\"#Autoprefixer：css的浏览器兼容书写，需要已安装nodejs\" class=\"headerlink\" title=\"Autoprefixer：css的浏览器兼容书写，需要已安装nodejs\"></a>Autoprefixer：css的浏览器兼容书写，需要已安装nodejs</h5>","site":{"data":{}},"excerpt":"","more":"<p>[TOC]</p>\n<h4 id=\"修改快捷键：Preferences-gt-KeyBindings\"><a href=\"#修改快捷键：Preferences-gt-KeyBindings\" class=\"headerlink\" title=\"修改快捷键：Preferences -&gt; KeyBindings\"></a>修改快捷键：Preferences -&gt; KeyBindings</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[   &#123; &quot;keys&quot;: [&quot;command+u&quot;], &quot;command&quot;: &quot;upper_case&quot; &#125;,</span><br><span class=\"line\">    &#123; &quot;keys&quot;: [&quot;command+l&quot;], &quot;command&quot;: &quot;lower_case&quot; &#125;,</span><br><span class=\"line\">    &#123; &quot;keys&quot;: [&quot;ctrl+shift+p&quot;], &quot;command&quot;: &quot;show_overlay&quot;, &quot;args&quot;: &#123;&quot;overlay&quot;: &quot;command_palette&quot;&#125; &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h4 id=\"多行操作\"><a href=\"#多行操作\" class=\"headerlink\" title=\"多行操作\"></a>多行操作</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、鼠标选中多行，按下 Ctrl Shift L (Command Shift L) ，可同时编辑这些行； </span><br><span class=\"line\">2、鼠标选中文本，反复按 CTRL D (Command D) ，可继续向下同时选中下一个相同的文本进行同时编辑； </span><br><span class=\"line\">3、鼠标选中文本，按下 Alt F3 (Win) 或 Ctrl Command G(Mac) ，可一次性选择全部的相同文本进行同时编辑；</span><br><span class=\"line\">4、Shift 鼠标右键 (Win) 或 Option 鼠标左键 (Mac) 或使用鼠标中键，可用鼠标进行竖向多行选择； </span><br><span class=\"line\">5、Ctrl 鼠标左键(Win) 或 Command 鼠标左键(Mac) ，可手动选择同时要编辑。</span><br></pre></td></tr></table></figure>\n<h4 id=\"插件：Preferences-gt-Packages-Setting\"><a href=\"#插件：Preferences-gt-Packages-Setting\" class=\"headerlink\" title=\"插件：Preferences -&gt; Packages Setting\"></a>插件：Preferences -&gt; Packages Setting</h4><h5 id=\"Package-Control\"><a href=\"#Package-Control\" class=\"headerlink\" title=\"Package Control\"></a>Package Control</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ctrl + `，打开控制台</span><br><span class=\"line\">输入 </span><br><span class=\"line\">import urllib.request,os; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &apos;wb&apos;).write(urllib.request.urlopen( &apos;http://sublime.wbond.net/&apos; + pf.replace(&apos; &apos;,&apos;%20&apos;)).read())</span><br><span class=\"line\">回车</span><br><span class=\"line\">ctrl+shift+p</span><br><span class=\"line\">输入Package Control:install Package，可安装插件</span><br></pre></td></tr></table></figure>\n<h5 id=\"PackageResourceViewer\"><a href=\"#PackageResourceViewer\" class=\"headerlink\" title=\"PackageResourceViewer\"></a>PackageResourceViewer</h5><blockquote>\n<p>resouceopen，查看所有Sublime插件源码</p>\n</blockquote>\n<h5 id=\"Git：ctrl-shift-p-gt-输入-Git-git指令\"><a href=\"#Git：ctrl-shift-p-gt-输入-Git-git指令\" class=\"headerlink\" title=\"Git：ctrl+shift+p -&gt; 输入 Git:git指令\"></a>Git：ctrl+shift+p -&gt; 输入 Git:git指令</h5><h5 id=\"GitGutter：查看git修改内容\"><a href=\"#GitGutter：查看git修改内容\" class=\"headerlink\" title=\"GitGutter：查看git修改内容\"></a>GitGutter：查看git修改内容</h5><h5 id=\"Anaconda：python脚本自动提示\"><a href=\"#Anaconda：python脚本自动提示\" class=\"headerlink\" title=\"Anaconda：python脚本自动提示\"></a>Anaconda：python脚本自动提示</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">command+b，运行程序</span><br><span class=\"line\">View -&gt; show Console，可显示控制台输入参数</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;python_interpreter&quot;: &quot;/Users/songyu/anaconda3/bin/python3&quot;,  \t// 可通过which python3获取地址</span><br><span class=\"line\">    &quot;complete_parameters&quot;: false,\t\t\t\t// 自动补全函数时是否匹配必要参数</span><br><span class=\"line\">    &quot;complete_all_parameters&quot;: false,\t\t\t// 自动补全函数时是否匹配所有参数</span><br><span class=\"line\">    &quot;suppress_word_completions&quot;: false,\t\t// 禁止代码补全</span><br><span class=\"line\">    &quot;suppress_explicit_completions&quot;: false,\t\t// 禁止精确补全</span><br><span class=\"line\">    &quot;auto_formatting&quot;: true,\t\t\t\t\t// 代码格式检查</span><br><span class=\"line\">    &quot;enable_docstrings_tooltip&quot;: false,\t\t\t// 显示文档</span><br><span class=\"line\">    &quot;enable_signatures_tooltip&quot;: false,\t\t\t// 在悬浮窗中显示方法签名</span><br><span class=\"line\">    &quot;display_signatures&quot;: false\t\t\t\t// 显示方法签名</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"格式化\"><a href=\"#格式化\" class=\"headerlink\" title=\"格式化\"></a>格式化</h5><ul>\n<li>Pretty JSON（ctrl+command+j，【json】）</li>\n<li>JsFormat（ctrl+alt+f，【json、js】）</li>\n<li>SublimeAStyleFormater（ctrl+alt+f，【C、C++、Java、C#】）</li>\n<li>SqlBeautifier（command+j，再command+f，【sql】）</li>\n</ul>\n<h5 id=\"DocBlockr：注释\"><a href=\"#DocBlockr：注释\" class=\"headerlink\" title=\"DocBlockr：注释\"></a>DocBlockr：注释</h5><h5 id=\"AutoFileName：提示文件路径\"><a href=\"#AutoFileName：提示文件路径\" class=\"headerlink\" title=\"AutoFileName：提示文件路径\"></a>AutoFileName：提示文件路径</h5><h5 id=\"ConvertToUTF8：解决中文乱码问题\"><a href=\"#ConvertToUTF8：解决中文乱码问题\" class=\"headerlink\" title=\"ConvertToUTF8：解决中文乱码问题\"></a>ConvertToUTF8：解决中文乱码问题</h5><h5 id=\"Better-Completion：自动补全\"><a href=\"#Better-Completion：自动补全\" class=\"headerlink\" title=\"Better Completion：自动补全\"></a>Better Completion：自动补全</h5><blockquote>\n<p>NodeJS、css、html、javascript、jquery、php、sql、react、angularjs、glossary等</p>\n</blockquote>\n<h5 id=\"Javatar：command-shift-k-两次\"><a href=\"#Javatar：command-shift-k-两次\" class=\"headerlink\" title=\"Javatar：command+shift+k(两次)\"></a>Javatar：command+shift+k(两次)</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Project Settings &gt; Set Source Folder &gt; 代码源文件夹，一般为./src</span><br><span class=\"line\">Project Settings &gt; Dependencies &gt; Add External .jar 或 Add Class Folder，增加依赖包或依赖类</span><br><span class=\"line\">Project Settings &gt; Set Default JDK，设置默认JDK版本</span><br><span class=\"line\">Create &gt; Class &gt; package.demoName，新建类</span><br><span class=\"line\">Operations &gt; Correct Class，自动更新包名</span><br><span class=\"line\">Operations &gt; Organize Imports，自动更新import列表</span><br><span class=\"line\">Builds &gt; Project，编译</span><br><span class=\"line\">Builds &gt; Run Main Class / Current Class，运行main程序</span><br></pre></td></tr></table></figure>\n<h5 id=\"Emmet：快速编写html（Tab-或-ctrl-e）\"><a href=\"#Emmet：快速编写html（Tab-或-ctrl-e）\" class=\"headerlink\" title=\"Emmet：快速编写html（Tab 或 ctrl+e）\"></a>Emmet：快速编写html（Tab 或 ctrl+e）</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; html:5    或     !html:xt\t    或      html:4s</span><br><span class=\"line\">&gt; 标签.class值#id名\t\t如：p.bar#foo</span><br><span class=\"line\">&gt; 标签&#123;标签内的值&#125;\t\t如：h1&#123;标题&#125;</span><br><span class=\"line\">&gt; 标签[属性=属性值]\t    如：a[href=#]</span><br><span class=\"line\">&gt; 标签1+标签2\t\t\t同级，a.class1+a.class2</span><br><span class=\"line\">&gt; 标签1&gt;子标签2\t\t    嵌套级，p#id1&gt;span#id2</span><br><span class=\"line\">&gt; 标签1^上一层标签2\t    提升一级，p&gt;span&gt;p</span><br><span class=\"line\">&gt; 标签*N\t\t\t\t    多个元素，ul&gt;li.item*3</span><br><span class=\"line\">&gt; css缩写</span><br><span class=\"line\">    - p 表示%</span><br><span class=\"line\">    - e 表示 em</span><br><span class=\"line\">    - x 表示 ex</span><br><span class=\"line\">    - h 表示 height</span><br><span class=\"line\">    - w 表示 width</span><br><span class=\"line\">    - m 表示 margin</span><br><span class=\"line\">    - @f、@f+ 表示 @font-face</span><br><span class=\"line\">    - ov:h、ov-h、ovh 表示 overflow:hidden</span><br><span class=\"line\">    - lg(left,#fff 50%,#000)，渐变颜色</span><br><span class=\"line\">    - -super-foo 表示 后缀为-super-foo的属性</span><br></pre></td></tr></table></figure>\n<h5 id=\"Color-Highlighter：shift-ctrl-c，选择颜色插入\"><a href=\"#Color-Highlighter：shift-ctrl-c，选择颜色插入\" class=\"headerlink\" title=\"Color Highlighter：shift+ctrl+c，选择颜色插入\"></a>Color Highlighter：shift+ctrl+c，选择颜色插入</h5><h5 id=\"Autoprefixer：css的浏览器兼容书写，需要已安装nodejs\"><a href=\"#Autoprefixer：css的浏览器兼容书写，需要已安装nodejs\" class=\"headerlink\" title=\"Autoprefixer：css的浏览器兼容书写，需要已安装nodejs\"></a>Autoprefixer：css的浏览器兼容书写，需要已安装nodejs</h5>"},{"_content":"[TOC]\n\n#### 包管理\n\n- 列出所有包 conda list\n- 更新包 conda upgrade package_name，更新所有包 conda upgrade --all\n- 安装包 （如numpy） conda install numpy，可同时安装多个包：conda install numpy scipy pandas，或限定版本conda install numpy=1.9\n- 卸载包 conda remove package_name\n\n#### 环境管理\n\n- 创建环境：在终端中使用 conda create -n env_name list of packages\n- 指定python版本：conda create -n py3 python=3\n- 进入环境：activate env_name\n- 退出环境：deactivate\n- 导出环境文件：conda env export > environment.yaml\n- 使用环境文件创建环境\n    - conda env create -f environment.yaml\n    - pip freeze > requirements.txt\n    - pip install -r requirements.txt\n- 列出所有环境：conda env list\n- 移除环境：conda env remove -n env_name\n\n    ```\n    ```\n\n#### 常用命令\n\n```\npip install 包名\npip list\nconda env list\n```\n\n\n\n#### 常用包\n- 集合处理：collections\n    - 计数：collections.Counter(list)\n    - 队列&堆栈：collections.deque()\n    - 有序字典：collections.OrderedDict(dict)\n- 随机数：random\n- 模式匹配：re、glob、string\n    - 分割（split）\n    - 替换（sub\\replace）\n    - 查询（findall、search）\n    - str.encode()\n    - bytes.decode()\n- 加密解析\n    - hashlib（md5）\n    - pyparsing\n    - fuzzywuzzy（模糊字符串匹配）\n    - ftfy（整理unicode文本）\n    - unidecode（unicode转ASCII）\n    - nameparser（人名）\n    - phonenumbers（电话号码）\n    - pypinyin（拼音）\n    - flanker（邮件）\n- 时间：datetime、time、calendar\n    - time.localtime(timestamp) 时间戳 -> 时间数组\n    - time.mktime(timeArray) 时间数组->时间戳\n    - time.strptime(strTime, \"%Y-%m-%d %H:%M:%S\") 字符串->时间数组\n    - time.strftime(\"%Y%m%d-%H:%M:%S\",arrTime) 时间数组 -> 格式化时间\n- 文件操作\n    - os\n    - csv\n    - shutil\n    - pandas\n    - xlrd\n    - tablib（XLS、CSV、JSON、YAML）\n    - rows（CSV、HTML、XLS、TXT）\n- 打印结果：logging、string、pprint\n- 网络请求：requests、urllib、pycurl、socket\n- 序列化对象：pickle、json\n    - pickle.dump(obj, file, protocol=0)\n    - pickle.load(file)\n    - strs = json.dumps(obj, skipkeys=True, sort_keys=True)\n    - dicts= json.loads(encode_obj)\n- 压缩文件\n    - zipfile（.zip）\n    - gzip（.gz）\n    - tarfile（.tar）\n    - zlib\n        - zlib.compress(orginal)   # 压缩字符串\n        - zlib.decompress(compressed)  # 解压缩\n        - zlib.adler32(orginal) & 0xffffffff   # 校验和\n        - zlib.crc32(orginal) & 0xffffffff    # 校验和\n- 数据库：sqlite3、sqlalchemy、pyneo4j、psycopg2\n- 微信：itchat\n- 爬虫\n    - scrapy\n    - phantomjs\n    - pyspider\n    - grab\n    - treq（异步）\n    - selenium（动态）\n    - cola（分布式）\n    - user-agents\n- web框架：django\n- NLP\n    - pyltp\n    - jieba\n    - nltk\n    - foolnltk\n    - gensim\n    - fasttext\n- 分布式：pyspark\n- 绘图：matplotlib\n- 深度学习：tensorflow、caffe、keras、mxnet、theano、pytorch\n- 网页解析：beautifulsoup4、lxml、html2text、xmltodict、pyquery\n- 机器学习：sklearn\n- 科学计算：scipy\n    - interpolate 插值\n    - linalg 线性代数\n    - optimize 数值优化\n    - stats 统计分布\n    - cluster 聚类算法\n    - constants 物理数学常数\n    - fftpack 傅里叶变换\n    - integrate 积分和常微分方程求解\n    - odr 正交距离回归\n    - signal 信号处理\n    - ndimage n维图像包\n    - sparse 稀疏矩阵\n    - spatial 空间数据结构和算法\n    - special 特殊方程\n    - io 输入输出\n    - weave C/C++ 积分\n- 向量表示：numpy\n    - 索引过滤\n    - 一元运算\n    - 三角函数（sin、arccos、tanh、cos）\n    - 数值计算（exp、log、sqrt、floor、ceil、abs）\n    - 修改形状（flatten、resize、reshape、ravel）\n    - 数据类型（astype）\n    - 数组属性+方法\n    - 二元运算\n    - 四则运算（+、-、*、/、//、%、**）\n    - 拼接\n    - 比较和逻辑运算\n    - 矩阵运算\n    - 生成数组\n    - 特殊数组\n    - 随机数组\n    - 结构化数组\n    - 文件读写\n    - 内存映射\n\n\n#### pytorch\n> 1、数据的加载和保存\n\n```\nmodel = torch.load(path)\ntorch.save(model, path)\nmodel.load_state_dict(torch.load(path))\ntorch.save(model.state_dict(), path)\n```\n> 2、Tensors与numpy互转\n\n```\na = torch.ones(5)  ->  b = a.numpy()\na = torch.from_numpy(b)  <-  b = np.ones(5)\na.add_(1)  ->  np.add(b, 1, out=b)\n```\n\n> 3、常规模型、参数及方法\n\n- Module\n    - 基本属性：_backend、_parameters、_buffers、_backward_hooks、_forward_hooks、\n    - _forward_pre_hooks、_modules、training（训练True / 验证 False）\n    - 待重写方法：forward、extra_repr、_apply、__setstate__、train、eval\n- Embedding\n    - num_embeddings：向量个数\n    - embedding_dim：向量维度\n    - padding_idx：行偏移，默认为None\n    - max_norm：归一化处理，默认为None\n    - norm_type：范数类型，默认为2-范数\n    - scale_grad_by_freq：是否缩放梯度，默认为False\n    - sparse：是否输出稀疏张量，默认为False\n    - from_pretrained(embeddings, freeze, sparse)[类方法]\n    - RNNBase[Inputs: input, h_0; Outputs: output, h_n]\n    - mode：'LSTM' 、'GRU'、 'RNN_TANH'、'RNN_RELU'\n    - input_size：输入向量‘x’的特征维度\n    - hidden_size：隐藏层‘h’的神经元个数\n    - num_layers：神经网络的层数，默认为1\n    - bias:是否使用偏置，默认为True\n    - batch_first：是否批量输入输出，默认为False\n    - dropout：在每个输出上引入一个“Dropout”层，默认为0\n    - bidirectional：是否为双向RNN\n    - _flat_weights、all_weights\n    - check_forward_args(input, hidden, batch_sizes)\n    - reset_parameters()\n    - flatten_parameters()\n\n#### ftplib\n##### ftp登陆连接\n\n```\nfrom ftplib import FTP            #加载ftp模块\nftp=FTP()                         #设置变量\nftp.set_debuglevel(2)             #打开调试级别2，显示详细信息\nftp.connect(\"IP\",\"port\")          #连接的ftp sever和端口\nftp.login(\"user\",\"password\")      #连接的用户名，密码\nprint ftp.getwelcome()            #打印出欢迎信息\nftp.cmd(\"xxx/xxx\")                #进入远程目录\nbufsize=1024                      #设置的缓冲区大小\nfilename=\"filename.txt\"           #需要下载的文件\nfile_handle=open(filename,\"wb\").write #以写模式在本地打开文件\nftp.retrbinaly(\"RETR filename.txt\",file_handle,bufsize) #接收服务器上文件并写入本地文件\nftp.set_debuglevel(0)             #关闭调试模式\nftp.quit()                        #退出ftp\n```\n \n##### ftp相关命令操作\n\n```\nftp.cwd(pathname)                 #设置FTP当前操作的路径\nftp.dir()                         #显示目录下所有目录信息\nftp.nlst()                        #获取目录下的文件\nftp.mkd(pathname)                 #新建远程目录\nftp.pwd()                         #返回当前所在位置\nftp.rmd(dirname)                  #删除远程目录\nftp.delete(filename)              #删除远程文件\nftp.rename(fromname, toname)#将fromname修改名称为toname。\nftp.storbinaly(\"STOR filename.txt\",file_handel,bufsize)  #上传目标文件\nftp.retrbinary(\"RETR filename.txt\",file_handel,bufsize)  #下载FTP文件\n```\n\n\n#### boto3\n- 提供了两个级别的接口来访问AWS服务\n    - High Level的Resource接口\n    - Low Level的Client接口\n```\nres = boto3.resource('service name')\t# 获取API对象，例如s3、ec2\nclient = boto3.client('service name')\n```\n\n#### os\n```\ndef commandExecute(commandLine):\n    run_sts = os.system(commandLine)\n    if run_sts != 0:\n       \tprint(\"执行失败:%s\" % commandLine, 'ERROR')\n        exit(1)\n```\n\n\n### 异常处理\n\n```\n安装包时报错：error: command 'clang++' failed with exit status 1\n解决办法(有效)： \n $ git clone https://github.com/HIT-SCIR/pyltp\n $ git submodule init\n $ git submodule update\n $ python setup.py install \n # Mac系统出现版本问题，使用 MACOSX_DEPLOYMENT_TARGET=10.7 python setup.py install\n```\n\n\n```\nFutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\n解决办法(有效)：pip install h5py==2.8.0rc1\n```\n\n\n","source":"_posts/Python.md","raw":"[TOC]\n\n#### 包管理\n\n- 列出所有包 conda list\n- 更新包 conda upgrade package_name，更新所有包 conda upgrade --all\n- 安装包 （如numpy） conda install numpy，可同时安装多个包：conda install numpy scipy pandas，或限定版本conda install numpy=1.9\n- 卸载包 conda remove package_name\n\n#### 环境管理\n\n- 创建环境：在终端中使用 conda create -n env_name list of packages\n- 指定python版本：conda create -n py3 python=3\n- 进入环境：activate env_name\n- 退出环境：deactivate\n- 导出环境文件：conda env export > environment.yaml\n- 使用环境文件创建环境\n    - conda env create -f environment.yaml\n    - pip freeze > requirements.txt\n    - pip install -r requirements.txt\n- 列出所有环境：conda env list\n- 移除环境：conda env remove -n env_name\n\n    ```\n    ```\n\n#### 常用命令\n\n```\npip install 包名\npip list\nconda env list\n```\n\n\n\n#### 常用包\n- 集合处理：collections\n    - 计数：collections.Counter(list)\n    - 队列&堆栈：collections.deque()\n    - 有序字典：collections.OrderedDict(dict)\n- 随机数：random\n- 模式匹配：re、glob、string\n    - 分割（split）\n    - 替换（sub\\replace）\n    - 查询（findall、search）\n    - str.encode()\n    - bytes.decode()\n- 加密解析\n    - hashlib（md5）\n    - pyparsing\n    - fuzzywuzzy（模糊字符串匹配）\n    - ftfy（整理unicode文本）\n    - unidecode（unicode转ASCII）\n    - nameparser（人名）\n    - phonenumbers（电话号码）\n    - pypinyin（拼音）\n    - flanker（邮件）\n- 时间：datetime、time、calendar\n    - time.localtime(timestamp) 时间戳 -> 时间数组\n    - time.mktime(timeArray) 时间数组->时间戳\n    - time.strptime(strTime, \"%Y-%m-%d %H:%M:%S\") 字符串->时间数组\n    - time.strftime(\"%Y%m%d-%H:%M:%S\",arrTime) 时间数组 -> 格式化时间\n- 文件操作\n    - os\n    - csv\n    - shutil\n    - pandas\n    - xlrd\n    - tablib（XLS、CSV、JSON、YAML）\n    - rows（CSV、HTML、XLS、TXT）\n- 打印结果：logging、string、pprint\n- 网络请求：requests、urllib、pycurl、socket\n- 序列化对象：pickle、json\n    - pickle.dump(obj, file, protocol=0)\n    - pickle.load(file)\n    - strs = json.dumps(obj, skipkeys=True, sort_keys=True)\n    - dicts= json.loads(encode_obj)\n- 压缩文件\n    - zipfile（.zip）\n    - gzip（.gz）\n    - tarfile（.tar）\n    - zlib\n        - zlib.compress(orginal)   # 压缩字符串\n        - zlib.decompress(compressed)  # 解压缩\n        - zlib.adler32(orginal) & 0xffffffff   # 校验和\n        - zlib.crc32(orginal) & 0xffffffff    # 校验和\n- 数据库：sqlite3、sqlalchemy、pyneo4j、psycopg2\n- 微信：itchat\n- 爬虫\n    - scrapy\n    - phantomjs\n    - pyspider\n    - grab\n    - treq（异步）\n    - selenium（动态）\n    - cola（分布式）\n    - user-agents\n- web框架：django\n- NLP\n    - pyltp\n    - jieba\n    - nltk\n    - foolnltk\n    - gensim\n    - fasttext\n- 分布式：pyspark\n- 绘图：matplotlib\n- 深度学习：tensorflow、caffe、keras、mxnet、theano、pytorch\n- 网页解析：beautifulsoup4、lxml、html2text、xmltodict、pyquery\n- 机器学习：sklearn\n- 科学计算：scipy\n    - interpolate 插值\n    - linalg 线性代数\n    - optimize 数值优化\n    - stats 统计分布\n    - cluster 聚类算法\n    - constants 物理数学常数\n    - fftpack 傅里叶变换\n    - integrate 积分和常微分方程求解\n    - odr 正交距离回归\n    - signal 信号处理\n    - ndimage n维图像包\n    - sparse 稀疏矩阵\n    - spatial 空间数据结构和算法\n    - special 特殊方程\n    - io 输入输出\n    - weave C/C++ 积分\n- 向量表示：numpy\n    - 索引过滤\n    - 一元运算\n    - 三角函数（sin、arccos、tanh、cos）\n    - 数值计算（exp、log、sqrt、floor、ceil、abs）\n    - 修改形状（flatten、resize、reshape、ravel）\n    - 数据类型（astype）\n    - 数组属性+方法\n    - 二元运算\n    - 四则运算（+、-、*、/、//、%、**）\n    - 拼接\n    - 比较和逻辑运算\n    - 矩阵运算\n    - 生成数组\n    - 特殊数组\n    - 随机数组\n    - 结构化数组\n    - 文件读写\n    - 内存映射\n\n\n#### pytorch\n> 1、数据的加载和保存\n\n```\nmodel = torch.load(path)\ntorch.save(model, path)\nmodel.load_state_dict(torch.load(path))\ntorch.save(model.state_dict(), path)\n```\n> 2、Tensors与numpy互转\n\n```\na = torch.ones(5)  ->  b = a.numpy()\na = torch.from_numpy(b)  <-  b = np.ones(5)\na.add_(1)  ->  np.add(b, 1, out=b)\n```\n\n> 3、常规模型、参数及方法\n\n- Module\n    - 基本属性：_backend、_parameters、_buffers、_backward_hooks、_forward_hooks、\n    - _forward_pre_hooks、_modules、training（训练True / 验证 False）\n    - 待重写方法：forward、extra_repr、_apply、__setstate__、train、eval\n- Embedding\n    - num_embeddings：向量个数\n    - embedding_dim：向量维度\n    - padding_idx：行偏移，默认为None\n    - max_norm：归一化处理，默认为None\n    - norm_type：范数类型，默认为2-范数\n    - scale_grad_by_freq：是否缩放梯度，默认为False\n    - sparse：是否输出稀疏张量，默认为False\n    - from_pretrained(embeddings, freeze, sparse)[类方法]\n    - RNNBase[Inputs: input, h_0; Outputs: output, h_n]\n    - mode：'LSTM' 、'GRU'、 'RNN_TANH'、'RNN_RELU'\n    - input_size：输入向量‘x’的特征维度\n    - hidden_size：隐藏层‘h’的神经元个数\n    - num_layers：神经网络的层数，默认为1\n    - bias:是否使用偏置，默认为True\n    - batch_first：是否批量输入输出，默认为False\n    - dropout：在每个输出上引入一个“Dropout”层，默认为0\n    - bidirectional：是否为双向RNN\n    - _flat_weights、all_weights\n    - check_forward_args(input, hidden, batch_sizes)\n    - reset_parameters()\n    - flatten_parameters()\n\n#### ftplib\n##### ftp登陆连接\n\n```\nfrom ftplib import FTP            #加载ftp模块\nftp=FTP()                         #设置变量\nftp.set_debuglevel(2)             #打开调试级别2，显示详细信息\nftp.connect(\"IP\",\"port\")          #连接的ftp sever和端口\nftp.login(\"user\",\"password\")      #连接的用户名，密码\nprint ftp.getwelcome()            #打印出欢迎信息\nftp.cmd(\"xxx/xxx\")                #进入远程目录\nbufsize=1024                      #设置的缓冲区大小\nfilename=\"filename.txt\"           #需要下载的文件\nfile_handle=open(filename,\"wb\").write #以写模式在本地打开文件\nftp.retrbinaly(\"RETR filename.txt\",file_handle,bufsize) #接收服务器上文件并写入本地文件\nftp.set_debuglevel(0)             #关闭调试模式\nftp.quit()                        #退出ftp\n```\n \n##### ftp相关命令操作\n\n```\nftp.cwd(pathname)                 #设置FTP当前操作的路径\nftp.dir()                         #显示目录下所有目录信息\nftp.nlst()                        #获取目录下的文件\nftp.mkd(pathname)                 #新建远程目录\nftp.pwd()                         #返回当前所在位置\nftp.rmd(dirname)                  #删除远程目录\nftp.delete(filename)              #删除远程文件\nftp.rename(fromname, toname)#将fromname修改名称为toname。\nftp.storbinaly(\"STOR filename.txt\",file_handel,bufsize)  #上传目标文件\nftp.retrbinary(\"RETR filename.txt\",file_handel,bufsize)  #下载FTP文件\n```\n\n\n#### boto3\n- 提供了两个级别的接口来访问AWS服务\n    - High Level的Resource接口\n    - Low Level的Client接口\n```\nres = boto3.resource('service name')\t# 获取API对象，例如s3、ec2\nclient = boto3.client('service name')\n```\n\n#### os\n```\ndef commandExecute(commandLine):\n    run_sts = os.system(commandLine)\n    if run_sts != 0:\n       \tprint(\"执行失败:%s\" % commandLine, 'ERROR')\n        exit(1)\n```\n\n\n### 异常处理\n\n```\n安装包时报错：error: command 'clang++' failed with exit status 1\n解决办法(有效)： \n $ git clone https://github.com/HIT-SCIR/pyltp\n $ git submodule init\n $ git submodule update\n $ python setup.py install \n # Mac系统出现版本问题，使用 MACOSX_DEPLOYMENT_TARGET=10.7 python setup.py install\n```\n\n\n```\nFutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.\n解决办法(有效)：pip install h5py==2.8.0rc1\n```\n\n\n","slug":"Python","published":1,"date":"2018-12-05T09:57:40.718Z","updated":"2018-12-07T09:20:42.383Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1oo2p60003muzykck1qxzy","content":"<p>[TOC]</p>\n<h4 id=\"包管理\"><a href=\"#包管理\" class=\"headerlink\" title=\"包管理\"></a>包管理</h4><ul>\n<li>列出所有包 conda list</li>\n<li>更新包 conda upgrade package_name，更新所有包 conda upgrade –all</li>\n<li>安装包 （如numpy） conda install numpy，可同时安装多个包：conda install numpy scipy pandas，或限定版本conda install numpy=1.9</li>\n<li>卸载包 conda remove package_name</li>\n</ul>\n<h4 id=\"环境管理\"><a href=\"#环境管理\" class=\"headerlink\" title=\"环境管理\"></a>环境管理</h4><ul>\n<li>创建环境：在终端中使用 conda create -n env_name list of packages</li>\n<li>指定python版本：conda create -n py3 python=3</li>\n<li>进入环境：activate env_name</li>\n<li>退出环境：deactivate</li>\n<li>导出环境文件：conda env export &gt; environment.yaml</li>\n<li>使用环境文件创建环境<ul>\n<li>conda env create -f environment.yaml</li>\n<li>pip freeze &gt; requirements.txt</li>\n<li>pip install -r requirements.txt</li>\n</ul>\n</li>\n<li>列出所有环境：conda env list</li>\n<li><p>移除环境：conda env remove -n env_name</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install 包名</span><br><span class=\"line\">pip list</span><br><span class=\"line\">conda env list</span><br></pre></td></tr></table></figure>\n<h4 id=\"常用包\"><a href=\"#常用包\" class=\"headerlink\" title=\"常用包\"></a>常用包</h4><ul>\n<li>集合处理：collections<ul>\n<li>计数：collections.Counter(list)</li>\n<li>队列&amp;堆栈：collections.deque()</li>\n<li>有序字典：collections.OrderedDict(dict)</li>\n</ul>\n</li>\n<li>随机数：random</li>\n<li>模式匹配：re、glob、string<ul>\n<li>分割（split）</li>\n<li>替换（sub\\replace）</li>\n<li>查询（findall、search）</li>\n<li>str.encode()</li>\n<li>bytes.decode()</li>\n</ul>\n</li>\n<li>加密解析<ul>\n<li>hashlib（md5）</li>\n<li>pyparsing</li>\n<li>fuzzywuzzy（模糊字符串匹配）</li>\n<li>ftfy（整理unicode文本）</li>\n<li>unidecode（unicode转ASCII）</li>\n<li>nameparser（人名）</li>\n<li>phonenumbers（电话号码）</li>\n<li>pypinyin（拼音）</li>\n<li>flanker（邮件）</li>\n</ul>\n</li>\n<li>时间：datetime、time、calendar<ul>\n<li>time.localtime(timestamp) 时间戳 -&gt; 时间数组</li>\n<li>time.mktime(timeArray) 时间数组-&gt;时间戳</li>\n<li>time.strptime(strTime, “%Y-%m-%d %H:%M:%S”) 字符串-&gt;时间数组</li>\n<li>time.strftime(“%Y%m%d-%H:%M:%S”,arrTime) 时间数组 -&gt; 格式化时间</li>\n</ul>\n</li>\n<li>文件操作<ul>\n<li>os</li>\n<li>csv</li>\n<li>shutil</li>\n<li>pandas</li>\n<li>xlrd</li>\n<li>tablib（XLS、CSV、JSON、YAML）</li>\n<li>rows（CSV、HTML、XLS、TXT）</li>\n</ul>\n</li>\n<li>打印结果：logging、string、pprint</li>\n<li>网络请求：requests、urllib、pycurl、socket</li>\n<li>序列化对象：pickle、json<ul>\n<li>pickle.dump(obj, file, protocol=0)</li>\n<li>pickle.load(file)</li>\n<li>strs = json.dumps(obj, skipkeys=True, sort_keys=True)</li>\n<li>dicts= json.loads(encode_obj)</li>\n</ul>\n</li>\n<li>压缩文件<ul>\n<li>zipfile（.zip）</li>\n<li>gzip（.gz）</li>\n<li>tarfile（.tar）</li>\n<li>zlib<ul>\n<li>zlib.compress(orginal)   # 压缩字符串</li>\n<li>zlib.decompress(compressed)  # 解压缩</li>\n<li>zlib.adler32(orginal) &amp; 0xffffffff   # 校验和</li>\n<li>zlib.crc32(orginal) &amp; 0xffffffff    # 校验和</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>数据库：sqlite3、sqlalchemy、pyneo4j、psycopg2</li>\n<li>微信：itchat</li>\n<li>爬虫<ul>\n<li>scrapy</li>\n<li>phantomjs</li>\n<li>pyspider</li>\n<li>grab</li>\n<li>treq（异步）</li>\n<li>selenium（动态）</li>\n<li>cola（分布式）</li>\n<li>user-agents</li>\n</ul>\n</li>\n<li>web框架：django</li>\n<li>NLP<ul>\n<li>pyltp</li>\n<li>jieba</li>\n<li>nltk</li>\n<li>foolnltk</li>\n<li>gensim</li>\n<li>fasttext</li>\n</ul>\n</li>\n<li>分布式：pyspark</li>\n<li>绘图：matplotlib</li>\n<li>深度学习：tensorflow、caffe、keras、mxnet、theano、pytorch</li>\n<li>网页解析：beautifulsoup4、lxml、html2text、xmltodict、pyquery</li>\n<li>机器学习：sklearn</li>\n<li>科学计算：scipy<ul>\n<li>interpolate 插值</li>\n<li>linalg 线性代数</li>\n<li>optimize 数值优化</li>\n<li>stats 统计分布</li>\n<li>cluster 聚类算法</li>\n<li>constants 物理数学常数</li>\n<li>fftpack 傅里叶变换</li>\n<li>integrate 积分和常微分方程求解</li>\n<li>odr 正交距离回归</li>\n<li>signal 信号处理</li>\n<li>ndimage n维图像包</li>\n<li>sparse 稀疏矩阵</li>\n<li>spatial 空间数据结构和算法</li>\n<li>special 特殊方程</li>\n<li>io 输入输出</li>\n<li>weave C/C++ 积分</li>\n</ul>\n</li>\n<li>向量表示：numpy<ul>\n<li>索引过滤</li>\n<li>一元运算</li>\n<li>三角函数（sin、arccos、tanh、cos）</li>\n<li>数值计算（exp、log、sqrt、floor、ceil、abs）</li>\n<li>修改形状（flatten、resize、reshape、ravel）</li>\n<li>数据类型（astype）</li>\n<li>数组属性+方法</li>\n<li>二元运算</li>\n<li>四则运算（+、-、*、/、//、%、**）</li>\n<li>拼接</li>\n<li>比较和逻辑运算</li>\n<li>矩阵运算</li>\n<li>生成数组</li>\n<li>特殊数组</li>\n<li>随机数组</li>\n<li>结构化数组</li>\n<li>文件读写</li>\n<li>内存映射</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"pytorch\"><a href=\"#pytorch\" class=\"headerlink\" title=\"pytorch\"></a>pytorch</h4><blockquote>\n<p>1、数据的加载和保存</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model = torch.load(path)</span><br><span class=\"line\">torch.save(model, path)</span><br><span class=\"line\">model.load_state_dict(torch.load(path))</span><br><span class=\"line\">torch.save(model.state_dict(), path)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>2、Tensors与numpy互转</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = torch.ones(5)  -&gt;  b = a.numpy()</span><br><span class=\"line\">a = torch.from_numpy(b)  &lt;-  b = np.ones(5)</span><br><span class=\"line\">a.add_(1)  -&gt;  np.add(b, 1, out=b)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>3、常规模型、参数及方法</p>\n</blockquote>\n<ul>\n<li>Module<ul>\n<li>基本属性：_backend、_parameters、_buffers、_backward_hooks、_forward_hooks、</li>\n<li>_forward_pre_hooks、_modules、training（训练True / 验证 False）</li>\n<li>待重写方法：forward、extra_repr、_apply、<strong>setstate</strong>、train、eval</li>\n</ul>\n</li>\n<li>Embedding<ul>\n<li>num_embeddings：向量个数</li>\n<li>embedding_dim：向量维度</li>\n<li>padding_idx：行偏移，默认为None</li>\n<li>max_norm：归一化处理，默认为None</li>\n<li>norm_type：范数类型，默认为2-范数</li>\n<li>scale_grad_by_freq：是否缩放梯度，默认为False</li>\n<li>sparse：是否输出稀疏张量，默认为False</li>\n<li>from_pretrained(embeddings, freeze, sparse)[类方法]</li>\n<li>RNNBase[Inputs: input, h_0; Outputs: output, h_n]</li>\n<li>mode：’LSTM’ 、’GRU’、 ‘RNN_TANH’、’RNN_RELU’</li>\n<li>input_size：输入向量‘x’的特征维度</li>\n<li>hidden_size：隐藏层‘h’的神经元个数</li>\n<li>num_layers：神经网络的层数，默认为1</li>\n<li>bias:是否使用偏置，默认为True</li>\n<li>batch_first：是否批量输入输出，默认为False</li>\n<li>dropout：在每个输出上引入一个“Dropout”层，默认为0</li>\n<li>bidirectional：是否为双向RNN</li>\n<li>_flat_weights、all_weights</li>\n<li>check_forward_args(input, hidden, batch_sizes)</li>\n<li>reset_parameters()</li>\n<li>flatten_parameters()</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"ftplib\"><a href=\"#ftplib\" class=\"headerlink\" title=\"ftplib\"></a>ftplib</h4><h5 id=\"ftp登陆连接\"><a href=\"#ftp登陆连接\" class=\"headerlink\" title=\"ftp登陆连接\"></a>ftp登陆连接</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from ftplib import FTP            #加载ftp模块</span><br><span class=\"line\">ftp=FTP()                         #设置变量</span><br><span class=\"line\">ftp.set_debuglevel(2)             #打开调试级别2，显示详细信息</span><br><span class=\"line\">ftp.connect(&quot;IP&quot;,&quot;port&quot;)          #连接的ftp sever和端口</span><br><span class=\"line\">ftp.login(&quot;user&quot;,&quot;password&quot;)      #连接的用户名，密码</span><br><span class=\"line\">print ftp.getwelcome()            #打印出欢迎信息</span><br><span class=\"line\">ftp.cmd(&quot;xxx/xxx&quot;)                #进入远程目录</span><br><span class=\"line\">bufsize=1024                      #设置的缓冲区大小</span><br><span class=\"line\">filename=&quot;filename.txt&quot;           #需要下载的文件</span><br><span class=\"line\">file_handle=open(filename,&quot;wb&quot;).write #以写模式在本地打开文件</span><br><span class=\"line\">ftp.retrbinaly(&quot;RETR filename.txt&quot;,file_handle,bufsize) #接收服务器上文件并写入本地文件</span><br><span class=\"line\">ftp.set_debuglevel(0)             #关闭调试模式</span><br><span class=\"line\">ftp.quit()                        #退出ftp</span><br></pre></td></tr></table></figure>\n<h5 id=\"ftp相关命令操作\"><a href=\"#ftp相关命令操作\" class=\"headerlink\" title=\"ftp相关命令操作\"></a>ftp相关命令操作</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ftp.cwd(pathname)                 #设置FTP当前操作的路径</span><br><span class=\"line\">ftp.dir()                         #显示目录下所有目录信息</span><br><span class=\"line\">ftp.nlst()                        #获取目录下的文件</span><br><span class=\"line\">ftp.mkd(pathname)                 #新建远程目录</span><br><span class=\"line\">ftp.pwd()                         #返回当前所在位置</span><br><span class=\"line\">ftp.rmd(dirname)                  #删除远程目录</span><br><span class=\"line\">ftp.delete(filename)              #删除远程文件</span><br><span class=\"line\">ftp.rename(fromname, toname)#将fromname修改名称为toname。</span><br><span class=\"line\">ftp.storbinaly(&quot;STOR filename.txt&quot;,file_handel,bufsize)  #上传目标文件</span><br><span class=\"line\">ftp.retrbinary(&quot;RETR filename.txt&quot;,file_handel,bufsize)  #下载FTP文件</span><br></pre></td></tr></table></figure>\n<h4 id=\"boto3\"><a href=\"#boto3\" class=\"headerlink\" title=\"boto3\"></a>boto3</h4><ul>\n<li>提供了两个级别的接口来访问AWS服务<ul>\n<li>High Level的Resource接口</li>\n<li>Low Level的Client接口<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = boto3.resource(&apos;service name&apos;)\t# 获取API对象，例如s3、ec2</span><br><span class=\"line\">client = boto3.client(&apos;service name&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"os\"><a href=\"#os\" class=\"headerlink\" title=\"os\"></a>os</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def commandExecute(commandLine):</span><br><span class=\"line\">    run_sts = os.system(commandLine)</span><br><span class=\"line\">    if run_sts != 0:</span><br><span class=\"line\">       \tprint(&quot;执行失败:%s&quot; % commandLine, &apos;ERROR&apos;)</span><br><span class=\"line\">        exit(1)</span><br></pre></td></tr></table></figure>\n<h3 id=\"异常处理\"><a href=\"#异常处理\" class=\"headerlink\" title=\"异常处理\"></a>异常处理</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装包时报错：error: command &apos;clang++&apos; failed with exit status 1</span><br><span class=\"line\">解决办法(有效)： </span><br><span class=\"line\"> $ git clone https://github.com/HIT-SCIR/pyltp</span><br><span class=\"line\"> $ git submodule init</span><br><span class=\"line\"> $ git submodule update</span><br><span class=\"line\"> $ python setup.py install </span><br><span class=\"line\"> # Mac系统出现版本问题，使用 MACOSX_DEPLOYMENT_TARGET=10.7 python setup.py install</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.</span><br><span class=\"line\">解决办法(有效)：pip install h5py==2.8.0rc1</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>[TOC]</p>\n<h4 id=\"包管理\"><a href=\"#包管理\" class=\"headerlink\" title=\"包管理\"></a>包管理</h4><ul>\n<li>列出所有包 conda list</li>\n<li>更新包 conda upgrade package_name，更新所有包 conda upgrade –all</li>\n<li>安装包 （如numpy） conda install numpy，可同时安装多个包：conda install numpy scipy pandas，或限定版本conda install numpy=1.9</li>\n<li>卸载包 conda remove package_name</li>\n</ul>\n<h4 id=\"环境管理\"><a href=\"#环境管理\" class=\"headerlink\" title=\"环境管理\"></a>环境管理</h4><ul>\n<li>创建环境：在终端中使用 conda create -n env_name list of packages</li>\n<li>指定python版本：conda create -n py3 python=3</li>\n<li>进入环境：activate env_name</li>\n<li>退出环境：deactivate</li>\n<li>导出环境文件：conda env export &gt; environment.yaml</li>\n<li>使用环境文件创建环境<ul>\n<li>conda env create -f environment.yaml</li>\n<li>pip freeze &gt; requirements.txt</li>\n<li>pip install -r requirements.txt</li>\n</ul>\n</li>\n<li>列出所有环境：conda env list</li>\n<li><p>移除环境：conda env remove -n env_name</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install 包名</span><br><span class=\"line\">pip list</span><br><span class=\"line\">conda env list</span><br></pre></td></tr></table></figure>\n<h4 id=\"常用包\"><a href=\"#常用包\" class=\"headerlink\" title=\"常用包\"></a>常用包</h4><ul>\n<li>集合处理：collections<ul>\n<li>计数：collections.Counter(list)</li>\n<li>队列&amp;堆栈：collections.deque()</li>\n<li>有序字典：collections.OrderedDict(dict)</li>\n</ul>\n</li>\n<li>随机数：random</li>\n<li>模式匹配：re、glob、string<ul>\n<li>分割（split）</li>\n<li>替换（sub\\replace）</li>\n<li>查询（findall、search）</li>\n<li>str.encode()</li>\n<li>bytes.decode()</li>\n</ul>\n</li>\n<li>加密解析<ul>\n<li>hashlib（md5）</li>\n<li>pyparsing</li>\n<li>fuzzywuzzy（模糊字符串匹配）</li>\n<li>ftfy（整理unicode文本）</li>\n<li>unidecode（unicode转ASCII）</li>\n<li>nameparser（人名）</li>\n<li>phonenumbers（电话号码）</li>\n<li>pypinyin（拼音）</li>\n<li>flanker（邮件）</li>\n</ul>\n</li>\n<li>时间：datetime、time、calendar<ul>\n<li>time.localtime(timestamp) 时间戳 -&gt; 时间数组</li>\n<li>time.mktime(timeArray) 时间数组-&gt;时间戳</li>\n<li>time.strptime(strTime, “%Y-%m-%d %H:%M:%S”) 字符串-&gt;时间数组</li>\n<li>time.strftime(“%Y%m%d-%H:%M:%S”,arrTime) 时间数组 -&gt; 格式化时间</li>\n</ul>\n</li>\n<li>文件操作<ul>\n<li>os</li>\n<li>csv</li>\n<li>shutil</li>\n<li>pandas</li>\n<li>xlrd</li>\n<li>tablib（XLS、CSV、JSON、YAML）</li>\n<li>rows（CSV、HTML、XLS、TXT）</li>\n</ul>\n</li>\n<li>打印结果：logging、string、pprint</li>\n<li>网络请求：requests、urllib、pycurl、socket</li>\n<li>序列化对象：pickle、json<ul>\n<li>pickle.dump(obj, file, protocol=0)</li>\n<li>pickle.load(file)</li>\n<li>strs = json.dumps(obj, skipkeys=True, sort_keys=True)</li>\n<li>dicts= json.loads(encode_obj)</li>\n</ul>\n</li>\n<li>压缩文件<ul>\n<li>zipfile（.zip）</li>\n<li>gzip（.gz）</li>\n<li>tarfile（.tar）</li>\n<li>zlib<ul>\n<li>zlib.compress(orginal)   # 压缩字符串</li>\n<li>zlib.decompress(compressed)  # 解压缩</li>\n<li>zlib.adler32(orginal) &amp; 0xffffffff   # 校验和</li>\n<li>zlib.crc32(orginal) &amp; 0xffffffff    # 校验和</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>数据库：sqlite3、sqlalchemy、pyneo4j、psycopg2</li>\n<li>微信：itchat</li>\n<li>爬虫<ul>\n<li>scrapy</li>\n<li>phantomjs</li>\n<li>pyspider</li>\n<li>grab</li>\n<li>treq（异步）</li>\n<li>selenium（动态）</li>\n<li>cola（分布式）</li>\n<li>user-agents</li>\n</ul>\n</li>\n<li>web框架：django</li>\n<li>NLP<ul>\n<li>pyltp</li>\n<li>jieba</li>\n<li>nltk</li>\n<li>foolnltk</li>\n<li>gensim</li>\n<li>fasttext</li>\n</ul>\n</li>\n<li>分布式：pyspark</li>\n<li>绘图：matplotlib</li>\n<li>深度学习：tensorflow、caffe、keras、mxnet、theano、pytorch</li>\n<li>网页解析：beautifulsoup4、lxml、html2text、xmltodict、pyquery</li>\n<li>机器学习：sklearn</li>\n<li>科学计算：scipy<ul>\n<li>interpolate 插值</li>\n<li>linalg 线性代数</li>\n<li>optimize 数值优化</li>\n<li>stats 统计分布</li>\n<li>cluster 聚类算法</li>\n<li>constants 物理数学常数</li>\n<li>fftpack 傅里叶变换</li>\n<li>integrate 积分和常微分方程求解</li>\n<li>odr 正交距离回归</li>\n<li>signal 信号处理</li>\n<li>ndimage n维图像包</li>\n<li>sparse 稀疏矩阵</li>\n<li>spatial 空间数据结构和算法</li>\n<li>special 特殊方程</li>\n<li>io 输入输出</li>\n<li>weave C/C++ 积分</li>\n</ul>\n</li>\n<li>向量表示：numpy<ul>\n<li>索引过滤</li>\n<li>一元运算</li>\n<li>三角函数（sin、arccos、tanh、cos）</li>\n<li>数值计算（exp、log、sqrt、floor、ceil、abs）</li>\n<li>修改形状（flatten、resize、reshape、ravel）</li>\n<li>数据类型（astype）</li>\n<li>数组属性+方法</li>\n<li>二元运算</li>\n<li>四则运算（+、-、*、/、//、%、**）</li>\n<li>拼接</li>\n<li>比较和逻辑运算</li>\n<li>矩阵运算</li>\n<li>生成数组</li>\n<li>特殊数组</li>\n<li>随机数组</li>\n<li>结构化数组</li>\n<li>文件读写</li>\n<li>内存映射</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"pytorch\"><a href=\"#pytorch\" class=\"headerlink\" title=\"pytorch\"></a>pytorch</h4><blockquote>\n<p>1、数据的加载和保存</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">model = torch.load(path)</span><br><span class=\"line\">torch.save(model, path)</span><br><span class=\"line\">model.load_state_dict(torch.load(path))</span><br><span class=\"line\">torch.save(model.state_dict(), path)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>2、Tensors与numpy互转</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = torch.ones(5)  -&gt;  b = a.numpy()</span><br><span class=\"line\">a = torch.from_numpy(b)  &lt;-  b = np.ones(5)</span><br><span class=\"line\">a.add_(1)  -&gt;  np.add(b, 1, out=b)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>3、常规模型、参数及方法</p>\n</blockquote>\n<ul>\n<li>Module<ul>\n<li>基本属性：_backend、_parameters、_buffers、_backward_hooks、_forward_hooks、</li>\n<li>_forward_pre_hooks、_modules、training（训练True / 验证 False）</li>\n<li>待重写方法：forward、extra_repr、_apply、<strong>setstate</strong>、train、eval</li>\n</ul>\n</li>\n<li>Embedding<ul>\n<li>num_embeddings：向量个数</li>\n<li>embedding_dim：向量维度</li>\n<li>padding_idx：行偏移，默认为None</li>\n<li>max_norm：归一化处理，默认为None</li>\n<li>norm_type：范数类型，默认为2-范数</li>\n<li>scale_grad_by_freq：是否缩放梯度，默认为False</li>\n<li>sparse：是否输出稀疏张量，默认为False</li>\n<li>from_pretrained(embeddings, freeze, sparse)[类方法]</li>\n<li>RNNBase[Inputs: input, h_0; Outputs: output, h_n]</li>\n<li>mode：’LSTM’ 、’GRU’、 ‘RNN_TANH’、’RNN_RELU’</li>\n<li>input_size：输入向量‘x’的特征维度</li>\n<li>hidden_size：隐藏层‘h’的神经元个数</li>\n<li>num_layers：神经网络的层数，默认为1</li>\n<li>bias:是否使用偏置，默认为True</li>\n<li>batch_first：是否批量输入输出，默认为False</li>\n<li>dropout：在每个输出上引入一个“Dropout”层，默认为0</li>\n<li>bidirectional：是否为双向RNN</li>\n<li>_flat_weights、all_weights</li>\n<li>check_forward_args(input, hidden, batch_sizes)</li>\n<li>reset_parameters()</li>\n<li>flatten_parameters()</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"ftplib\"><a href=\"#ftplib\" class=\"headerlink\" title=\"ftplib\"></a>ftplib</h4><h5 id=\"ftp登陆连接\"><a href=\"#ftp登陆连接\" class=\"headerlink\" title=\"ftp登陆连接\"></a>ftp登陆连接</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from ftplib import FTP            #加载ftp模块</span><br><span class=\"line\">ftp=FTP()                         #设置变量</span><br><span class=\"line\">ftp.set_debuglevel(2)             #打开调试级别2，显示详细信息</span><br><span class=\"line\">ftp.connect(&quot;IP&quot;,&quot;port&quot;)          #连接的ftp sever和端口</span><br><span class=\"line\">ftp.login(&quot;user&quot;,&quot;password&quot;)      #连接的用户名，密码</span><br><span class=\"line\">print ftp.getwelcome()            #打印出欢迎信息</span><br><span class=\"line\">ftp.cmd(&quot;xxx/xxx&quot;)                #进入远程目录</span><br><span class=\"line\">bufsize=1024                      #设置的缓冲区大小</span><br><span class=\"line\">filename=&quot;filename.txt&quot;           #需要下载的文件</span><br><span class=\"line\">file_handle=open(filename,&quot;wb&quot;).write #以写模式在本地打开文件</span><br><span class=\"line\">ftp.retrbinaly(&quot;RETR filename.txt&quot;,file_handle,bufsize) #接收服务器上文件并写入本地文件</span><br><span class=\"line\">ftp.set_debuglevel(0)             #关闭调试模式</span><br><span class=\"line\">ftp.quit()                        #退出ftp</span><br></pre></td></tr></table></figure>\n<h5 id=\"ftp相关命令操作\"><a href=\"#ftp相关命令操作\" class=\"headerlink\" title=\"ftp相关命令操作\"></a>ftp相关命令操作</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ftp.cwd(pathname)                 #设置FTP当前操作的路径</span><br><span class=\"line\">ftp.dir()                         #显示目录下所有目录信息</span><br><span class=\"line\">ftp.nlst()                        #获取目录下的文件</span><br><span class=\"line\">ftp.mkd(pathname)                 #新建远程目录</span><br><span class=\"line\">ftp.pwd()                         #返回当前所在位置</span><br><span class=\"line\">ftp.rmd(dirname)                  #删除远程目录</span><br><span class=\"line\">ftp.delete(filename)              #删除远程文件</span><br><span class=\"line\">ftp.rename(fromname, toname)#将fromname修改名称为toname。</span><br><span class=\"line\">ftp.storbinaly(&quot;STOR filename.txt&quot;,file_handel,bufsize)  #上传目标文件</span><br><span class=\"line\">ftp.retrbinary(&quot;RETR filename.txt&quot;,file_handel,bufsize)  #下载FTP文件</span><br></pre></td></tr></table></figure>\n<h4 id=\"boto3\"><a href=\"#boto3\" class=\"headerlink\" title=\"boto3\"></a>boto3</h4><ul>\n<li>提供了两个级别的接口来访问AWS服务<ul>\n<li>High Level的Resource接口</li>\n<li>Low Level的Client接口<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res = boto3.resource(&apos;service name&apos;)\t# 获取API对象，例如s3、ec2</span><br><span class=\"line\">client = boto3.client(&apos;service name&apos;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"os\"><a href=\"#os\" class=\"headerlink\" title=\"os\"></a>os</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def commandExecute(commandLine):</span><br><span class=\"line\">    run_sts = os.system(commandLine)</span><br><span class=\"line\">    if run_sts != 0:</span><br><span class=\"line\">       \tprint(&quot;执行失败:%s&quot; % commandLine, &apos;ERROR&apos;)</span><br><span class=\"line\">        exit(1)</span><br></pre></td></tr></table></figure>\n<h3 id=\"异常处理\"><a href=\"#异常处理\" class=\"headerlink\" title=\"异常处理\"></a>异常处理</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">安装包时报错：error: command &apos;clang++&apos; failed with exit status 1</span><br><span class=\"line\">解决办法(有效)： </span><br><span class=\"line\"> $ git clone https://github.com/HIT-SCIR/pyltp</span><br><span class=\"line\"> $ git submodule init</span><br><span class=\"line\"> $ git submodule update</span><br><span class=\"line\"> $ python setup.py install </span><br><span class=\"line\"> # Mac系统出现版本问题，使用 MACOSX_DEPLOYMENT_TARGET=10.7 python setup.py install</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FutureWarning: Conversion of the second argument of issubdtype from `float` to `np.floating` is deprecated. In future, it will be treated as `np.float64 == np.dtype(float).type`.</span><br><span class=\"line\">解决办法(有效)：pip install h5py==2.8.0rc1</span><br></pre></td></tr></table></figure>\n"},{"_content":"[TOC]\n\n### Linux系统目录\n\n```\n/usr 应用程序+文件\n/usr/X11R6 存放X window的目录\n/usr/bin应用程序\n/usr/sbin管理程序\n/usr/doc linux文档\n/usr/include linux下开发和编译应用程序所需要的头文件\n/usr/lib 常用的动态链接库和软件包的配置文件\n/usr/man 帮助文档\n/usr/src 源代码\n/usr/local/bin 本地增加的命令\n/usr/local/lib 本地增加的库\n/home 用户主目录的基点\n/bin 二进制可执行命令\n/dev 设备特殊文件\n/var 某些大文件的溢出区\n/etc 系统管理和配置文件\n```\n\n### 常用命令\n\n```cmd\n系统内存，free -g\nulimit 限制，ulimit -a\n查看用户最大进程数，ulimit -u\n系统最大线程，cat /proc/sys/kernel/threads-max\n进程号pid限制，cat /proc/sys/kernel/pid_max\n```\n\n### VisualBox\n\n如果出现安装问题，执行```sudo spctl --master-disable```，卸载后重新重装\n\n\n### 文件处理\n\n```cmd\nfile '文件名'，检查输入文件的编码方式\n\npwd，用于显示当前目录\n\nls -ah，查看所有文件\n\njoin a.txt b.txt | uniq > result.txt，根据第一列join两个文件并去重\n\n# MAC 查看 jdk 安装地址\n/usr/libexec/java_home -V\n\n# MAC 查看隐藏文件\ncommand + shift + .\n```\n\n### 文本输出命令 cat\n\n```\ncat filename                            # 一次显示整个文件\ncat > filename；Ctrl+D 结束              # 创建一个文件\ncat file1 file2 > file \t                # 将几个文件合并为一个文件\ncat file1 >> file ；cat file2 >> file   # 或\n\ncat /proc/version 正在运行的内核版本\ncat /etc/issue 发行版本信息\n```\n\n### 修改MAC环境变量\n\n```\nvi ./.bash_profile\n输入 i，改为编辑模式\nPATH = $PATH:\"新的环境变量\"\nesc + :wq!，保存并退出\nsource ~/.bash_profile\n```\n\n### 本地生成SSH密钥对\n\n```\nssh-keygen -t rsa -C \"你的邮箱地址\" -b 4096\n```\n\n### 安装卸载\n\n```\n判断是否安装某一软件\nrpm -qa|grep openssh\n```\n\n#### Centos\n\n```\nrpm [-qa|-ql|-e] | grep 软件\nyum [list|info|install|search|installed|localinstall|updates]\n```\n\n#### Ubuntu\n\n```\ndpkg -l\n> 普通安装：apt-get install softname\n> 修复安装：apt-get -f install softname\n> 重新安装：apt-get --reinstall install softname\n> 源码安装：tar zxf xx.tar.gz ls -F\n        ./configure  make\n        sudo make install\n> 移除式卸载：apt-get remove softname\n> 清除式卸载 ：apt-get --purge remove softname\n```\n\n#### MAC\n\n```\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```\n\n### 压缩和解压\n\n- 压缩比率 = 原内容大小 / 压缩后大小\n    ```cmd\n    .tar：仅做归档处理，不做压缩\n        > 压缩：tar cvf filename.tar dirname\n        > 解压：tar xvf filename.tar -C /path\n\n    .tar.gz 、 .tgz 、 .tar.z：对tar包进行gzip算法压缩\n        > 压缩：tar zcvf filename.tar.gz dirname\n        > 解压：tar zxvf filename.tar.gz -C /path\n\n    .tar.bz2 、 .tar.bz：比 tgz 更耗时，但压缩比率高\n        > 压缩：tar jcvf filename.tar.bz2 dirname\n        > 解压：tar jxvf filename.tar.bz2 -C /path\n\n    .rar\n        > 压缩：rar a filename.rar dirname\n        > 解压：rar x filename.rar\n\n    .zip ：压缩比率不如 rar 和 tgz\n        > 压缩：zip filename.zip dirname\n        > 解压：unzip filename.zip\n\n    .gz\n        > 压缩：gzip filename\n        > 解压1：gzip -d filename.gz\n        > 解压2：gunzip filename.gz\n\n    .bz2、.bz\n        > 压缩：bzip2 -z filename\n        > 解压1：bzip2 -d filename.bz2\n        > 解压1：bunzip2 filename.bz2\n\n    .z\n        > 压缩：compress filename\n        > 解压：uncompress filename.z\n\n    .lzo\n        > 压缩：lzop -Uv filename \n        > 解压：lzop -dv filename.lzo\n        > 列出test.lzo中各个文件的文件头：lzop –info test.lzo\n        > 列出test.lzo中各个文件的压缩信息：lzop -l test.lzo\n    ```","source":"_posts/控制台.md","raw":"[TOC]\n\n### Linux系统目录\n\n```\n/usr 应用程序+文件\n/usr/X11R6 存放X window的目录\n/usr/bin应用程序\n/usr/sbin管理程序\n/usr/doc linux文档\n/usr/include linux下开发和编译应用程序所需要的头文件\n/usr/lib 常用的动态链接库和软件包的配置文件\n/usr/man 帮助文档\n/usr/src 源代码\n/usr/local/bin 本地增加的命令\n/usr/local/lib 本地增加的库\n/home 用户主目录的基点\n/bin 二进制可执行命令\n/dev 设备特殊文件\n/var 某些大文件的溢出区\n/etc 系统管理和配置文件\n```\n\n### 常用命令\n\n```cmd\n系统内存，free -g\nulimit 限制，ulimit -a\n查看用户最大进程数，ulimit -u\n系统最大线程，cat /proc/sys/kernel/threads-max\n进程号pid限制，cat /proc/sys/kernel/pid_max\n```\n\n### VisualBox\n\n如果出现安装问题，执行```sudo spctl --master-disable```，卸载后重新重装\n\n\n### 文件处理\n\n```cmd\nfile '文件名'，检查输入文件的编码方式\n\npwd，用于显示当前目录\n\nls -ah，查看所有文件\n\njoin a.txt b.txt | uniq > result.txt，根据第一列join两个文件并去重\n\n# MAC 查看 jdk 安装地址\n/usr/libexec/java_home -V\n\n# MAC 查看隐藏文件\ncommand + shift + .\n```\n\n### 文本输出命令 cat\n\n```\ncat filename                            # 一次显示整个文件\ncat > filename；Ctrl+D 结束              # 创建一个文件\ncat file1 file2 > file \t                # 将几个文件合并为一个文件\ncat file1 >> file ；cat file2 >> file   # 或\n\ncat /proc/version 正在运行的内核版本\ncat /etc/issue 发行版本信息\n```\n\n### 修改MAC环境变量\n\n```\nvi ./.bash_profile\n输入 i，改为编辑模式\nPATH = $PATH:\"新的环境变量\"\nesc + :wq!，保存并退出\nsource ~/.bash_profile\n```\n\n### 本地生成SSH密钥对\n\n```\nssh-keygen -t rsa -C \"你的邮箱地址\" -b 4096\n```\n\n### 安装卸载\n\n```\n判断是否安装某一软件\nrpm -qa|grep openssh\n```\n\n#### Centos\n\n```\nrpm [-qa|-ql|-e] | grep 软件\nyum [list|info|install|search|installed|localinstall|updates]\n```\n\n#### Ubuntu\n\n```\ndpkg -l\n> 普通安装：apt-get install softname\n> 修复安装：apt-get -f install softname\n> 重新安装：apt-get --reinstall install softname\n> 源码安装：tar zxf xx.tar.gz ls -F\n        ./configure  make\n        sudo make install\n> 移除式卸载：apt-get remove softname\n> 清除式卸载 ：apt-get --purge remove softname\n```\n\n#### MAC\n\n```\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```\n\n### 压缩和解压\n\n- 压缩比率 = 原内容大小 / 压缩后大小\n    ```cmd\n    .tar：仅做归档处理，不做压缩\n        > 压缩：tar cvf filename.tar dirname\n        > 解压：tar xvf filename.tar -C /path\n\n    .tar.gz 、 .tgz 、 .tar.z：对tar包进行gzip算法压缩\n        > 压缩：tar zcvf filename.tar.gz dirname\n        > 解压：tar zxvf filename.tar.gz -C /path\n\n    .tar.bz2 、 .tar.bz：比 tgz 更耗时，但压缩比率高\n        > 压缩：tar jcvf filename.tar.bz2 dirname\n        > 解压：tar jxvf filename.tar.bz2 -C /path\n\n    .rar\n        > 压缩：rar a filename.rar dirname\n        > 解压：rar x filename.rar\n\n    .zip ：压缩比率不如 rar 和 tgz\n        > 压缩：zip filename.zip dirname\n        > 解压：unzip filename.zip\n\n    .gz\n        > 压缩：gzip filename\n        > 解压1：gzip -d filename.gz\n        > 解压2：gunzip filename.gz\n\n    .bz2、.bz\n        > 压缩：bzip2 -z filename\n        > 解压1：bzip2 -d filename.bz2\n        > 解压1：bunzip2 filename.bz2\n\n    .z\n        > 压缩：compress filename\n        > 解压：uncompress filename.z\n\n    .lzo\n        > 压缩：lzop -Uv filename \n        > 解压：lzop -dv filename.lzo\n        > 列出test.lzo中各个文件的文件头：lzop –info test.lzo\n        > 列出test.lzo中各个文件的压缩信息：lzop -l test.lzo\n    ```","slug":"控制台","published":1,"date":"2018-12-05T09:57:34.072Z","updated":"2019-02-01T03:12:40.699Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1oo2pw0004muzydl0nzg96","content":"<p>[TOC]</p>\n<h3 id=\"Linux系统目录\"><a href=\"#Linux系统目录\" class=\"headerlink\" title=\"Linux系统目录\"></a>Linux系统目录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr 应用程序+文件</span><br><span class=\"line\">/usr/X11R6 存放X window的目录</span><br><span class=\"line\">/usr/bin应用程序</span><br><span class=\"line\">/usr/sbin管理程序</span><br><span class=\"line\">/usr/doc linux文档</span><br><span class=\"line\">/usr/include linux下开发和编译应用程序所需要的头文件</span><br><span class=\"line\">/usr/lib 常用的动态链接库和软件包的配置文件</span><br><span class=\"line\">/usr/man 帮助文档</span><br><span class=\"line\">/usr/src 源代码</span><br><span class=\"line\">/usr/local/bin 本地增加的命令</span><br><span class=\"line\">/usr/local/lib 本地增加的库</span><br><span class=\"line\">/home 用户主目录的基点</span><br><span class=\"line\">/bin 二进制可执行命令</span><br><span class=\"line\">/dev 设备特殊文件</span><br><span class=\"line\">/var 某些大文件的溢出区</span><br><span class=\"line\">/etc 系统管理和配置文件</span><br></pre></td></tr></table></figure>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">系统内存，free -g</span><br><span class=\"line\">ulimit 限制，ulimit -a</span><br><span class=\"line\">查看用户最大进程数，ulimit -u</span><br><span class=\"line\">系统最大线程，cat /proc/sys/kernel/threads-max</span><br><span class=\"line\">进程号pid限制，cat /proc/sys/kernel/pid_max</span><br></pre></td></tr></table></figure>\n<h3 id=\"VisualBox\"><a href=\"#VisualBox\" class=\"headerlink\" title=\"VisualBox\"></a>VisualBox</h3><p>如果出现安装问题，执行<figure class=\"highlight plain\"><figcaption><span>spctl --master-disable```，卸载后重新重装</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">### 文件处理</span><br><span class=\"line\"></span><br><span class=\"line\">```cmd</span><br><span class=\"line\">file &apos;文件名&apos;，检查输入文件的编码方式</span><br><span class=\"line\"></span><br><span class=\"line\">pwd，用于显示当前目录</span><br><span class=\"line\"></span><br><span class=\"line\">ls -ah，查看所有文件</span><br><span class=\"line\"></span><br><span class=\"line\">join a.txt b.txt | uniq &gt; result.txt，根据第一列join两个文件并去重</span><br><span class=\"line\"></span><br><span class=\"line\"># MAC 查看 jdk 安装地址</span><br><span class=\"line\">/usr/libexec/java_home -V</span><br><span class=\"line\"></span><br><span class=\"line\"># MAC 查看隐藏文件</span><br><span class=\"line\">command + shift + .</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"文本输出命令-cat\"><a href=\"#文本输出命令-cat\" class=\"headerlink\" title=\"文本输出命令 cat\"></a>文本输出命令 cat</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat filename                            # 一次显示整个文件</span><br><span class=\"line\">cat &gt; filename；Ctrl+D 结束              # 创建一个文件</span><br><span class=\"line\">cat file1 file2 &gt; file \t                # 将几个文件合并为一个文件</span><br><span class=\"line\">cat file1 &gt;&gt; file ；cat file2 &gt;&gt; file   # 或</span><br><span class=\"line\"></span><br><span class=\"line\">cat /proc/version 正在运行的内核版本</span><br><span class=\"line\">cat /etc/issue 发行版本信息</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改MAC环境变量\"><a href=\"#修改MAC环境变量\" class=\"headerlink\" title=\"修改MAC环境变量\"></a>修改MAC环境变量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi ./.bash_profile</span><br><span class=\"line\">输入 i，改为编辑模式</span><br><span class=\"line\">PATH = $PATH:&quot;新的环境变量&quot;</span><br><span class=\"line\">esc + :wq!，保存并退出</span><br><span class=\"line\">source ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<h3 id=\"本地生成SSH密钥对\"><a href=\"#本地生成SSH密钥对\" class=\"headerlink\" title=\"本地生成SSH密钥对\"></a>本地生成SSH密钥对</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;你的邮箱地址&quot; -b 4096</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装卸载\"><a href=\"#安装卸载\" class=\"headerlink\" title=\"安装卸载\"></a>安装卸载</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">判断是否安装某一软件</span><br><span class=\"line\">rpm -qa|grep openssh</span><br></pre></td></tr></table></figure>\n<h4 id=\"Centos\"><a href=\"#Centos\" class=\"headerlink\" title=\"Centos\"></a>Centos</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm [-qa|-ql|-e] | grep 软件</span><br><span class=\"line\">yum [list|info|install|search|installed|localinstall|updates]</span><br></pre></td></tr></table></figure>\n<h4 id=\"Ubuntu\"><a href=\"#Ubuntu\" class=\"headerlink\" title=\"Ubuntu\"></a>Ubuntu</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dpkg -l</span><br><span class=\"line\">&gt; 普通安装：apt-get install softname</span><br><span class=\"line\">&gt; 修复安装：apt-get -f install softname</span><br><span class=\"line\">&gt; 重新安装：apt-get --reinstall install softname</span><br><span class=\"line\">&gt; 源码安装：tar zxf xx.tar.gz ls -F</span><br><span class=\"line\">        ./configure  make</span><br><span class=\"line\">        sudo make install</span><br><span class=\"line\">&gt; 移除式卸载：apt-get remove softname</span><br><span class=\"line\">&gt; 清除式卸载 ：apt-get --purge remove softname</span><br></pre></td></tr></table></figure>\n<h4 id=\"MAC\"><a href=\"#MAC\" class=\"headerlink\" title=\"MAC\"></a>MAC</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"压缩和解压\"><a href=\"#压缩和解压\" class=\"headerlink\" title=\"压缩和解压\"></a>压缩和解压</h3><ul>\n<li>压缩比率 = 原内容大小 / 压缩后大小  <figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.tar：仅做归档处理，不做压缩</span><br><span class=\"line\">    &gt; 压缩：tar cvf filename.tar dirname</span><br><span class=\"line\">    &gt; 解压：tar xvf filename.tar -C /<span class=\"built_in\">path</span></span><br><span class=\"line\"></span><br><span class=\"line\">.tar.gz 、 .tgz 、 .tar.z：对tar包进行gzip算法压缩</span><br><span class=\"line\">    &gt; 压缩：tar zcvf filename.tar.gz dirname</span><br><span class=\"line\">    &gt; 解压：tar zxvf filename.tar.gz -C /<span class=\"built_in\">path</span></span><br><span class=\"line\"></span><br><span class=\"line\">.tar.bz2 、 .tar.bz：比 tgz 更耗时，但压缩比率高</span><br><span class=\"line\">    &gt; 压缩：tar jcvf filename.tar.bz2 dirname</span><br><span class=\"line\">    &gt; 解压：tar jxvf filename.tar.bz2 -C /<span class=\"built_in\">path</span></span><br><span class=\"line\"></span><br><span class=\"line\">.rar</span><br><span class=\"line\">    &gt; 压缩：rar a filename.rar dirname</span><br><span class=\"line\">    &gt; 解压：rar x filename.rar</span><br><span class=\"line\"></span><br><span class=\"line\">.zip ：压缩比率不如 rar 和 tgz</span><br><span class=\"line\">    &gt; 压缩：zip filename.zip dirname</span><br><span class=\"line\">    &gt; 解压：unzip filename.zip</span><br><span class=\"line\"></span><br><span class=\"line\">.gz</span><br><span class=\"line\">    &gt; 压缩：gzip filename</span><br><span class=\"line\">    &gt; 解压<span class=\"number\">1</span>：gzip -d filename.gz</span><br><span class=\"line\">    &gt; 解压<span class=\"number\">2</span>：gunzip filename.gz</span><br><span class=\"line\"></span><br><span class=\"line\">.bz2、.bz</span><br><span class=\"line\">    &gt; 压缩：bzip2 -z filename</span><br><span class=\"line\">    &gt; 解压<span class=\"number\">1</span>：bzip2 -d filename.bz2</span><br><span class=\"line\">    &gt; 解压<span class=\"number\">1</span>：bunzip2 filename.bz2</span><br><span class=\"line\"></span><br><span class=\"line\">.z</span><br><span class=\"line\">    &gt; 压缩：compress filename</span><br><span class=\"line\">    &gt; 解压：uncompress filename.z</span><br><span class=\"line\"></span><br><span class=\"line\">.lzo</span><br><span class=\"line\">    &gt; 压缩：lzop -Uv filename </span><br><span class=\"line\">    &gt; 解压：lzop -dv filename.lzo</span><br><span class=\"line\">    &gt; 列出test.lzo中各个文件的文件头：lzop –info test.lzo</span><br><span class=\"line\">    &gt; 列出test.lzo中各个文件的压缩信息：lzop -l test.lzo</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>[TOC]</p>\n<h3 id=\"Linux系统目录\"><a href=\"#Linux系统目录\" class=\"headerlink\" title=\"Linux系统目录\"></a>Linux系统目录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr 应用程序+文件</span><br><span class=\"line\">/usr/X11R6 存放X window的目录</span><br><span class=\"line\">/usr/bin应用程序</span><br><span class=\"line\">/usr/sbin管理程序</span><br><span class=\"line\">/usr/doc linux文档</span><br><span class=\"line\">/usr/include linux下开发和编译应用程序所需要的头文件</span><br><span class=\"line\">/usr/lib 常用的动态链接库和软件包的配置文件</span><br><span class=\"line\">/usr/man 帮助文档</span><br><span class=\"line\">/usr/src 源代码</span><br><span class=\"line\">/usr/local/bin 本地增加的命令</span><br><span class=\"line\">/usr/local/lib 本地增加的库</span><br><span class=\"line\">/home 用户主目录的基点</span><br><span class=\"line\">/bin 二进制可执行命令</span><br><span class=\"line\">/dev 设备特殊文件</span><br><span class=\"line\">/var 某些大文件的溢出区</span><br><span class=\"line\">/etc 系统管理和配置文件</span><br></pre></td></tr></table></figure>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">系统内存，free -g</span><br><span class=\"line\">ulimit 限制，ulimit -a</span><br><span class=\"line\">查看用户最大进程数，ulimit -u</span><br><span class=\"line\">系统最大线程，cat /proc/sys/kernel/threads-max</span><br><span class=\"line\">进程号pid限制，cat /proc/sys/kernel/pid_max</span><br></pre></td></tr></table></figure>\n<h3 id=\"VisualBox\"><a href=\"#VisualBox\" class=\"headerlink\" title=\"VisualBox\"></a>VisualBox</h3><p>如果出现安装问题，执行<figure class=\"highlight plain\"><figcaption><span>spctl --master-disable```，卸载后重新重装</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">### 文件处理</span><br><span class=\"line\"></span><br><span class=\"line\">```cmd</span><br><span class=\"line\">file &apos;文件名&apos;，检查输入文件的编码方式</span><br><span class=\"line\"></span><br><span class=\"line\">pwd，用于显示当前目录</span><br><span class=\"line\"></span><br><span class=\"line\">ls -ah，查看所有文件</span><br><span class=\"line\"></span><br><span class=\"line\">join a.txt b.txt | uniq &gt; result.txt，根据第一列join两个文件并去重</span><br><span class=\"line\"></span><br><span class=\"line\"># MAC 查看 jdk 安装地址</span><br><span class=\"line\">/usr/libexec/java_home -V</span><br><span class=\"line\"></span><br><span class=\"line\"># MAC 查看隐藏文件</span><br><span class=\"line\">command + shift + .</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"文本输出命令-cat\"><a href=\"#文本输出命令-cat\" class=\"headerlink\" title=\"文本输出命令 cat\"></a>文本输出命令 cat</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat filename                            # 一次显示整个文件</span><br><span class=\"line\">cat &gt; filename；Ctrl+D 结束              # 创建一个文件</span><br><span class=\"line\">cat file1 file2 &gt; file \t                # 将几个文件合并为一个文件</span><br><span class=\"line\">cat file1 &gt;&gt; file ；cat file2 &gt;&gt; file   # 或</span><br><span class=\"line\"></span><br><span class=\"line\">cat /proc/version 正在运行的内核版本</span><br><span class=\"line\">cat /etc/issue 发行版本信息</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改MAC环境变量\"><a href=\"#修改MAC环境变量\" class=\"headerlink\" title=\"修改MAC环境变量\"></a>修改MAC环境变量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi ./.bash_profile</span><br><span class=\"line\">输入 i，改为编辑模式</span><br><span class=\"line\">PATH = $PATH:&quot;新的环境变量&quot;</span><br><span class=\"line\">esc + :wq!，保存并退出</span><br><span class=\"line\">source ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<h3 id=\"本地生成SSH密钥对\"><a href=\"#本地生成SSH密钥对\" class=\"headerlink\" title=\"本地生成SSH密钥对\"></a>本地生成SSH密钥对</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;你的邮箱地址&quot; -b 4096</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装卸载\"><a href=\"#安装卸载\" class=\"headerlink\" title=\"安装卸载\"></a>安装卸载</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">判断是否安装某一软件</span><br><span class=\"line\">rpm -qa|grep openssh</span><br></pre></td></tr></table></figure>\n<h4 id=\"Centos\"><a href=\"#Centos\" class=\"headerlink\" title=\"Centos\"></a>Centos</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm [-qa|-ql|-e] | grep 软件</span><br><span class=\"line\">yum [list|info|install|search|installed|localinstall|updates]</span><br></pre></td></tr></table></figure>\n<h4 id=\"Ubuntu\"><a href=\"#Ubuntu\" class=\"headerlink\" title=\"Ubuntu\"></a>Ubuntu</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dpkg -l</span><br><span class=\"line\">&gt; 普通安装：apt-get install softname</span><br><span class=\"line\">&gt; 修复安装：apt-get -f install softname</span><br><span class=\"line\">&gt; 重新安装：apt-get --reinstall install softname</span><br><span class=\"line\">&gt; 源码安装：tar zxf xx.tar.gz ls -F</span><br><span class=\"line\">        ./configure  make</span><br><span class=\"line\">        sudo make install</span><br><span class=\"line\">&gt; 移除式卸载：apt-get remove softname</span><br><span class=\"line\">&gt; 清除式卸载 ：apt-get --purge remove softname</span><br></pre></td></tr></table></figure>\n<h4 id=\"MAC\"><a href=\"#MAC\" class=\"headerlink\" title=\"MAC\"></a>MAC</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"压缩和解压\"><a href=\"#压缩和解压\" class=\"headerlink\" title=\"压缩和解压\"></a>压缩和解压</h3><ul>\n<li>压缩比率 = 原内容大小 / 压缩后大小  <figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.tar：仅做归档处理，不做压缩</span><br><span class=\"line\">    &gt; 压缩：tar cvf filename.tar dirname</span><br><span class=\"line\">    &gt; 解压：tar xvf filename.tar -C /<span class=\"built_in\">path</span></span><br><span class=\"line\"></span><br><span class=\"line\">.tar.gz 、 .tgz 、 .tar.z：对tar包进行gzip算法压缩</span><br><span class=\"line\">    &gt; 压缩：tar zcvf filename.tar.gz dirname</span><br><span class=\"line\">    &gt; 解压：tar zxvf filename.tar.gz -C /<span class=\"built_in\">path</span></span><br><span class=\"line\"></span><br><span class=\"line\">.tar.bz2 、 .tar.bz：比 tgz 更耗时，但压缩比率高</span><br><span class=\"line\">    &gt; 压缩：tar jcvf filename.tar.bz2 dirname</span><br><span class=\"line\">    &gt; 解压：tar jxvf filename.tar.bz2 -C /<span class=\"built_in\">path</span></span><br><span class=\"line\"></span><br><span class=\"line\">.rar</span><br><span class=\"line\">    &gt; 压缩：rar a filename.rar dirname</span><br><span class=\"line\">    &gt; 解压：rar x filename.rar</span><br><span class=\"line\"></span><br><span class=\"line\">.zip ：压缩比率不如 rar 和 tgz</span><br><span class=\"line\">    &gt; 压缩：zip filename.zip dirname</span><br><span class=\"line\">    &gt; 解压：unzip filename.zip</span><br><span class=\"line\"></span><br><span class=\"line\">.gz</span><br><span class=\"line\">    &gt; 压缩：gzip filename</span><br><span class=\"line\">    &gt; 解压<span class=\"number\">1</span>：gzip -d filename.gz</span><br><span class=\"line\">    &gt; 解压<span class=\"number\">2</span>：gunzip filename.gz</span><br><span class=\"line\"></span><br><span class=\"line\">.bz2、.bz</span><br><span class=\"line\">    &gt; 压缩：bzip2 -z filename</span><br><span class=\"line\">    &gt; 解压<span class=\"number\">1</span>：bzip2 -d filename.bz2</span><br><span class=\"line\">    &gt; 解压<span class=\"number\">1</span>：bunzip2 filename.bz2</span><br><span class=\"line\"></span><br><span class=\"line\">.z</span><br><span class=\"line\">    &gt; 压缩：compress filename</span><br><span class=\"line\">    &gt; 解压：uncompress filename.z</span><br><span class=\"line\"></span><br><span class=\"line\">.lzo</span><br><span class=\"line\">    &gt; 压缩：lzop -Uv filename </span><br><span class=\"line\">    &gt; 解压：lzop -dv filename.lzo</span><br><span class=\"line\">    &gt; 列出test.lzo中各个文件的文件头：lzop –info test.lzo</span><br><span class=\"line\">    &gt; 列出test.lzo中各个文件的压缩信息：lzop -l test.lzo</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"_content":"[toc]\n\n# Presto & Hive & Spark & Redshift\n\n## 常见设置\n\n```sql\nset tez.runtime.io.sort.mb=1024;\nset tez.job.name=dw_user_building_detail;\nset mapred.reduce.tasks=40;\nset hive.exec.dynamic.partition=true;\nset hive.exec.dynamic.partition.mode=nonstrict;\n```\n\n## 基本操作\n\n### 建立连接\n\n```sql\n-- hdfs\nhdfs dfs -put /etc/test /tmp/\n-- hive\nbeeline -u jdbc:hive2://\n```\n\n### 表结构\n\n```sql\n-- presto & hive & spark & mysql\ndesc formatted schemas.table_name;\nshow create table schemas.table_name;\nshow columns from schemas.table_name;\n```\n\n### 建表语句\n\n```sql\n--hive\nCREATE TABLE schemas.table_name(\n  `col1` bigint,\n  `col2` timestamp,\n  `col3` decimal(20,2)\n)\nPARTITIONED BY (\n  `col4` int,\n  `col5` string\n) ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'\n LOCATION '';\n\n-- mysql\nCREATE TABLE schemas.table_name (\n  `col1` int(11) NOT NULL,\n  `col2` tinyint(1) NOT NULL DEFAULT '0',\n  `col3` varchar(256) NOT NULL,\n  `col4` datetime DEFAULT '1970-01-01 00:00:00',\n  `col5` text NOT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n-- redshift\nCREATE TABLE schemas.table_name (\n  `col1` int2 NOT NULL,\n  `col2` int8 NOT NULL DEFAULT '0',\n  `col3` varchar(256) NOT NULL,\n  `col4` numeric(20,2) NOT NULL,\n  `col5` date,\n  `col6` timestamp\n);\n```\n\n### 修改表结构\n\n```sql\nalter table schemas.table_name change col_name new_col_name decimal(38,4) CASCADE;\nalter table schemas.table_name rename to schemas.new_name; -- 外部表不会修改loaction地址，内部表会修改映射地址\n```\n\n### 插入数据\n\n```sql\n-- redshift & mysql（直接插入，不会覆盖原始数据）\ndelete from schemas.table_name where ..;\ninsert into schemas.table_name\nselect ...;\ncommit;\n\n-- hive（会覆盖分区的部分数据）\ninsert overwrite table schemas.table_name partition(col4,col5)\nselect ...\nunion all\nselect * from schemas.table_name\nwhere ...;\n```\n\n## 查询语句\n\n### 数据类型转换\n\n- presto 中的进行比较的数据类型必须强制一致，常用 cast(col as XXX) 进行强制转换。\n- 常见的数据类型\n  - boolean：true|false\n  - tinyint：2^7 - 1\n  - smallint：2^15 - 1\n  - int 或 integer：2^31 - 1\n  - bigint：2^63 - 1\n  - real：2^31 - 1\n  - double：2^63 - 1\n  - decimal(precision,scale)：最高可取(38,18)\n  - varchar【presto & redshift】、string【hive & spark】\n  - date：默认格式为 YYYY-MM-DD\n  - timepstamp：\b默认格式为 YYYY-MM-DD HH:mm:ss\n  - interval：常用单位为 second、minute、hour、day、week、month、quarter、year\n\n### 判空处理\n\n```sql\n-- hive & spark & redshift\nselect nvl(0,0);\n-- presto & hive & spark & redshift\nselect coalesce(0,0);\n```\n\n### 时间函数\n\n- 时间加减\n    ```sql\n    -- hive & spark\n    select date_add('2018-01-31',-30)           -- '2018-01-01'\n        ,date_sub('2018-01-31',30)              -- '2018-01-01'\n        ,datediff('2018-01-31','2018-01-21');   -- 10，前者 - 后者，只可以取到day\n\n    -- presto\n    select cast('2018-01-31' as timestamp) - interval '30' day                   -- '2018-01-01 00:00:00'\n        ,date_diff('day',cast('2018-01-21' as date),cast('2018-01-31' as date)); -- 10，后者 - 前者，可精确到年月日时分秒\n\n    -- redshift\n    select cast('2018-01-31' as timestamp) - interval '30d'                      -- '2018-01-01 00:00:00'\n        ,date_diff('day',cast('2018-01-21' as date),cast('2018-01-31' as date)); -- 10，后者 - 前者，可精确到年月日时分秒\n    ```\n- 获取指定格式的日期字符串\n    ```sql\n    -- hive & spark\n    select date_format('2011-09-20 08:30:45', 'yyyy-MM-dd HH:00:00');\n\n    -- presto\n    select format_datetime(cast('2011-09-20 08:30:45' as timestamp),'yyyy-MM-dd HH:00:00');\n\n    -- redshift\n    select to_char(cast('2011-09-20 08:30:45' as timestamp),'yyyy-MM-dd HH:00:00');\n    ```\n- 当前时间\n    ```sql\n    -- hive & spark\n    select current_timestamp  -- 当前时间的时间戳，默认为UTC时间\n        ,current_date;                 -- 当前日期\n\n    -- presto\n    select current_timestamp           -- 当前时间的时间戳，默认为UTC8时间\n        ,current_date;                 -- 当前日期\n\n    -- redshift\n    select current_timestamp + interval '8h'  -- 当前时间的时间戳，默认为UTC时间\n        ,current_date;                        -- 当前日期\n    ```\n- unix 时间戳\n    ```sql\n    -- hive\n    select unix_timestamp('20170208 11:15:50','YYYYMMDD HH:mm:ss');  -- 1486523750，默认为 YYYY-MM-DD HH:mm:ss，可不填\n    select from_unixtime(unix_timestamp('2017-02-08 11:15:50') + 5,'yyyy-MM-dd HH:mm:ss');  -- '2017-02-08 11:15:55'\n\n    -- presto\n    select to_unixtime(cast('2017-02-08 11:15:50' as timestamp));  -- 1.48652375E9\n    select from_unixtime(1486523750 + 5);  -- '2017-02-08 11:15:55'\n    ```\n\n- 获取周\b一、周日的日期\n\n    ```sql\n    -- hive\n    -- 周一\n    select date_add('2018-12-27',- pmod(datediff('2018-12-27','2000-01-03'),7));\n    -- 周日\n    select date_add('2018-12-27',6 - pmod(datediff('2018-12-27','2000-01-03'),7));\n\n    -- redshift\n    -- 周一\n    select date_add('day',- mod(date_diff('day',cast('2000-01-03' as date),cast('2018-12-27' as date)),7),cast ('2018-12-27' as date));\n    -- 周日\n    select date_add('day',6 - mod(date_diff('day',cast('2000-01-03' as date),cast('2018-12-27' as date)),7),cast ('2018-12-27' as date));\n\n    -- presto\n    -- 周一\n    select date_add('day',1-day_of_week(cast('2018-12-23' as date)),cast('2018-12-23' as date));\n    -- 周日\n    select date_add('day',7-day_of_week(cast('2018-12-23' as date)),cast('2018-12-23' as date));\n    ```\n\n### 字符串函数\n\n- 替换\n    ```sql\n    -- hive & spark & redshift\n    select translate('aabbcc','a','d');  -- 'ddbbcc'\n\n    -- presto & redshift\n    select replace('aabbcc','a','d');  -- 'ddbbcc'\n    ```\n- 查找\n    ```sql\n    -- hive & spark\n    select instr('aabbcc', 'abc');   -- 0\n\n    -- presto & redshift\n    select strpos('aabbcc', 'abc');   -- 0\n    ```\n- 拼接\n    ```sql\n    -- hive & spark & mysql\n    select concat_ws(',','aa','bb','cc')  -- 'aa,bb,cc'\n        ,concat('aa','bb','cc');          -- 'aabbcc'\n\n    -- presto\n    select 'aa'||'bb'||'cc'               -- 'aabbcc'\n        ,concat('aa','bb','cc');          -- 'aabbcc'\n\n    -- redshift\n    select 'aa'||'bb'||'cc';              -- 'aabbcc'\n    ```\n- 模式匹配：hive中的转义字符需要使用双斜杠，而presto中仅需要单斜杠即可\n    ```sql\n    -- hive & spark\n    select regexp_extract('1a-2b-14b-3c', '\\\\d+b', 0);    -- 2b\n    select regexp_replace('1a-2b-14b-3c', '\\\\d+b', '3c'); -- 1a-3c-3c-3c\n    select '1a-2b-14b-3c' rlike '\\\\d+b';                  -- true\n    select '1a-2b-14b-3c' like '\\\\d+b';                   -- false，spark中不可用\n    select split('1a-2b-14b-3c','\\\\d+b');                 -- [\"1a-\",\"-\",\"-3c\"]\n\n    -- presto\n    select regexp_extract('1a-2b-14b-3c', '\\d+b');         -- 2b\n    select regexp_extract_all('1a-2b-14b-3c', '\\d+b');     -- {\"2b\",\"14b\"}\n    select regexp_replace('1a-2b-14b-3c', '\\d+b','3c');    -- 1a-3c-3c-3c\n    select regexp_like('1a-2b-14b-3c', '\\d+b');            -- true\n    select regexp_split('1a-2b-14b-3c', '\\d+b');           -- {\"1a \",\"-\",\"-\",\"-3c\"}\n\n    --  redshift\n    select '1a-2b-14b-3c' like '%[0-9]+b%';         -- false\n    select '1a-2b-14b-3c' similar to '$[0-9]+b$';   -- true\n    select 'abc' ~ '.*(b|d).*';                     -- true\n    select split_part('aa/bb/cc/d','/',1);          -- 'aa'\n    ```\n\n- json解析\n    ```sql\n    -- hive\n    select get_json_object(snapshot_value, '$.barrack_sub_a') from ods.user_daily where game_id=1012 and create_time = '2019-01' limit 10;\n\n    -- presto\n    select json_extract(snapshot_value, '$.barrack_sub_a') from ods.user_daily where game_id=1012 and create_time = '2019-01' limit 10;\n    ```\n\n### group by & having\n\n- presto & spark & redshift 可以在 group by时使用数字代替指定位置的字段，hive不可以；\n- presto 在使用 having 筛选时字段必须要一致，不能直接使用重命名的字段名，hive & spark & redshift 均可以。\n    ```sql\n    -- hive & spark & redshift\n    select open_udid,count(1) as counts\n    from dw.udid\n    where game_id = 1031\n    group by open_udid having counts > 1;\n\n    -- presto & spark & redshift\n    select open_udid,count(1) as counts\n    from dw.udid\n    where game_id = 1031\n    group by 1 having count(1) > 1;\n    ```\n\n### 分位数函数 percentile_approx\n\n```sql\n-- hive & spark\nSELECT play_date,\n        count(DISTINCT user_id) AS fps_player_count,\n        percentile_approx(fps_game_count, 0.5) AS fps_game_count_median,\n        percentile_approx(fps_game_count, 0.25) AS fps_game_count_25_quantile,\n        percentile_approx(fps_game_count, 0.75) AS fps_game_count_75_quantile\nFROM fps_game_info1\nGROUP BY play_date;\n\n-- presto & redshift\nSELECT A.play_date,\n        count(DISTINCT A.user_id) AS fps_player_count,\n        max(case when A.rank = cast(A.per_day_count * 0.5 as int) then A.fps_game_count else 0 end) as fps_game_count_median,\n        max(case when A.rank = cast(A.per_day_count * 0.25 as int) then A.fps_game_count else 0 end) as fps_game_count_25_quantile,\n        max(case when A.rank = cast(A.per_day_count * 0.75 as int) then A.fps_game_count else 0 end) as fps_game_count_75_quantile\nFROM(\n    select play_date\n            ,fps_game_count\n            ,user_id\n            ,row_number() over(partition by play_date order by fps_game_count asc) as rank\n            ,count(1) over(partition by play_date) per_day_count\n    from fps_game_info1\n) A\nGROUP BY 1;\n```\n\n## 数据导入导出\n\n### Redshift -> S3\n\n```sql\nunload (\n'select * from dw_me.user_ip_most_often_vip_lxc')\nto 's3://dw-muse-third/tmp/lxc9/'\ncredentials 'aws_access_key_id=AKIAICQLDGY7FGKBM6UQ;aws_secret_access_key=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'\nDELIMITER AS ',' ALLOWOVERWRITE ESCAPE GZIP;\n```\n\n- s3AccessKey 、 s3SecretKey 、s3a:// 地址，可自行修改\n- 部分字符需要转义，详情参考 [redshift unload 函数](https://docs.aws.amazon.com/zh_cn/redshift/latest/dg/r_UNLOAD.html \"unload\")\n- 不可在外部查询中使用 limit，若需要使用 limit 请参照例子使用子查询\n\n### Hive -> S3\n\n```sql\n-- 获取目标表的地址，location 在 HDFS，则需要\b新建表定位到s3\ndesc formatted table_name;\n\ncreate table tmp.wizzo_user (\n    user_group   string,\n    user_id      varchar(32),\n    user_no      bigint,\n    install_time     timestamp\n)\nrow format delimited fields terminated by ','\ncollection items terminated by '-'\nmap keys terminated by ':'\nlocation 's3a://dw-muse-third/tmp/lxc5/';\n\ninsert into table tmp.wizzo_user\nselect\n    user_group\n    ,user_id\n    ,user_no\n    ,install_time\nfrom ...\n```\n\n### HDFS|本地 <-> \bHive\n\n```sql\nhadoop dfs -get hdfs://host:port/user/hadoop/file localfile\n\nhadoop dfs -put localfile hdfs://host:port/user/hadoop/file\n\nload data [local] inpath '/user/data/staging/page_view'\n[overwrite] into table tmp.wizzo_user;\n```\n\n> Beeline不支持 load data local inpath 和 insert overwrite local directory\n\n### S3 -> 本地 或 HDFS\n\n参考文档： [s3cmd](https://s3tools.org/s3cmd \"s3\")\n\n- 本地安装s3cmd ,    ```pip install s3cmd```\n- 配置s3cmd\n    1. 命令行输入  ```s3cmd --configure```\n    2. 输入两个密钥(s3AccessKey 、s3SecretKey) 和时区 us-west-2\n    3. 一直回车 或 y\n- 查看文件 ```s3cmd ls s3://dw-muse-third/tmp/lxc6/```\n- 下载指定文件至本地\n    ```sql\n    s3cmd get s3://dw-muse-third/tmp/lxc6/ /Users/liuxingchi/Downloads/msgdata\n    ```\n\n### Mysql -> 本地\n\n1. mysqldump 命令\n    ```sql\n    mysqldump -h localhost -u root -p mydb mytable > target_file\n    ```\n2. 运行脚本\n    ```sql\n    SELECT * FROM tablename\n    INTO OUTFILE 'target_file'\n    [option];\n\n    select * from tmp.user_info \n    into outfile '/tmp/emp.txt' \n    fields terminated by \",\" enclosed by '\"';\n    ```\n其中 option 参数可以是以下选项：\n\n命令参数 | 说明\n---|---\nfields terminated by '字符' |字段分隔符，默认字符为制表符'\\t'\nfields [optionally] enclosed by '单字符' |字段引用符，加上optionally后在数字类型上不会有引用符号\nfields escaped by '单字符' |转义字符，默认为'\\'\nlines starting by '字符' |每行前都加此支付，默认为空\nlines terminated by '字符' |行结束符，默认为'\\n'\n\n### Presto -> 本地\n\n1. 下载 [presto-cli-xxx-executable.jar](https://prestodb.io/docs/current/installation/cli.html \"presto\")\n2. 重命名为 presto，执行./presto --help，会有相关可利用选择\n3. 执行以下脚本\n    ```cmd\n    presto --server ip:port --catalog=xxx --user=xxx --execute '需要导出的sql查询命令' --output-format CSV > xxx.csv\n    ```\n4. 如果csv出现中文乱码，执行下面指令：\n    ```cmd\n    iconv -f UTF-8 -t GB18030 xxx.csv >tmp.csv\n    ```","source":"_posts/SQL.md","raw":"[toc]\n\n# Presto & Hive & Spark & Redshift\n\n## 常见设置\n\n```sql\nset tez.runtime.io.sort.mb=1024;\nset tez.job.name=dw_user_building_detail;\nset mapred.reduce.tasks=40;\nset hive.exec.dynamic.partition=true;\nset hive.exec.dynamic.partition.mode=nonstrict;\n```\n\n## 基本操作\n\n### 建立连接\n\n```sql\n-- hdfs\nhdfs dfs -put /etc/test /tmp/\n-- hive\nbeeline -u jdbc:hive2://\n```\n\n### 表结构\n\n```sql\n-- presto & hive & spark & mysql\ndesc formatted schemas.table_name;\nshow create table schemas.table_name;\nshow columns from schemas.table_name;\n```\n\n### 建表语句\n\n```sql\n--hive\nCREATE TABLE schemas.table_name(\n  `col1` bigint,\n  `col2` timestamp,\n  `col3` decimal(20,2)\n)\nPARTITIONED BY (\n  `col4` int,\n  `col5` string\n) ROW FORMAT DELIMITED FIELDS TERMINATED BY '|'\n LOCATION '';\n\n-- mysql\nCREATE TABLE schemas.table_name (\n  `col1` int(11) NOT NULL,\n  `col2` tinyint(1) NOT NULL DEFAULT '0',\n  `col3` varchar(256) NOT NULL,\n  `col4` datetime DEFAULT '1970-01-01 00:00:00',\n  `col5` text NOT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n-- redshift\nCREATE TABLE schemas.table_name (\n  `col1` int2 NOT NULL,\n  `col2` int8 NOT NULL DEFAULT '0',\n  `col3` varchar(256) NOT NULL,\n  `col4` numeric(20,2) NOT NULL,\n  `col5` date,\n  `col6` timestamp\n);\n```\n\n### 修改表结构\n\n```sql\nalter table schemas.table_name change col_name new_col_name decimal(38,4) CASCADE;\nalter table schemas.table_name rename to schemas.new_name; -- 外部表不会修改loaction地址，内部表会修改映射地址\n```\n\n### 插入数据\n\n```sql\n-- redshift & mysql（直接插入，不会覆盖原始数据）\ndelete from schemas.table_name where ..;\ninsert into schemas.table_name\nselect ...;\ncommit;\n\n-- hive（会覆盖分区的部分数据）\ninsert overwrite table schemas.table_name partition(col4,col5)\nselect ...\nunion all\nselect * from schemas.table_name\nwhere ...;\n```\n\n## 查询语句\n\n### 数据类型转换\n\n- presto 中的进行比较的数据类型必须强制一致，常用 cast(col as XXX) 进行强制转换。\n- 常见的数据类型\n  - boolean：true|false\n  - tinyint：2^7 - 1\n  - smallint：2^15 - 1\n  - int 或 integer：2^31 - 1\n  - bigint：2^63 - 1\n  - real：2^31 - 1\n  - double：2^63 - 1\n  - decimal(precision,scale)：最高可取(38,18)\n  - varchar【presto & redshift】、string【hive & spark】\n  - date：默认格式为 YYYY-MM-DD\n  - timepstamp：\b默认格式为 YYYY-MM-DD HH:mm:ss\n  - interval：常用单位为 second、minute、hour、day、week、month、quarter、year\n\n### 判空处理\n\n```sql\n-- hive & spark & redshift\nselect nvl(0,0);\n-- presto & hive & spark & redshift\nselect coalesce(0,0);\n```\n\n### 时间函数\n\n- 时间加减\n    ```sql\n    -- hive & spark\n    select date_add('2018-01-31',-30)           -- '2018-01-01'\n        ,date_sub('2018-01-31',30)              -- '2018-01-01'\n        ,datediff('2018-01-31','2018-01-21');   -- 10，前者 - 后者，只可以取到day\n\n    -- presto\n    select cast('2018-01-31' as timestamp) - interval '30' day                   -- '2018-01-01 00:00:00'\n        ,date_diff('day',cast('2018-01-21' as date),cast('2018-01-31' as date)); -- 10，后者 - 前者，可精确到年月日时分秒\n\n    -- redshift\n    select cast('2018-01-31' as timestamp) - interval '30d'                      -- '2018-01-01 00:00:00'\n        ,date_diff('day',cast('2018-01-21' as date),cast('2018-01-31' as date)); -- 10，后者 - 前者，可精确到年月日时分秒\n    ```\n- 获取指定格式的日期字符串\n    ```sql\n    -- hive & spark\n    select date_format('2011-09-20 08:30:45', 'yyyy-MM-dd HH:00:00');\n\n    -- presto\n    select format_datetime(cast('2011-09-20 08:30:45' as timestamp),'yyyy-MM-dd HH:00:00');\n\n    -- redshift\n    select to_char(cast('2011-09-20 08:30:45' as timestamp),'yyyy-MM-dd HH:00:00');\n    ```\n- 当前时间\n    ```sql\n    -- hive & spark\n    select current_timestamp  -- 当前时间的时间戳，默认为UTC时间\n        ,current_date;                 -- 当前日期\n\n    -- presto\n    select current_timestamp           -- 当前时间的时间戳，默认为UTC8时间\n        ,current_date;                 -- 当前日期\n\n    -- redshift\n    select current_timestamp + interval '8h'  -- 当前时间的时间戳，默认为UTC时间\n        ,current_date;                        -- 当前日期\n    ```\n- unix 时间戳\n    ```sql\n    -- hive\n    select unix_timestamp('20170208 11:15:50','YYYYMMDD HH:mm:ss');  -- 1486523750，默认为 YYYY-MM-DD HH:mm:ss，可不填\n    select from_unixtime(unix_timestamp('2017-02-08 11:15:50') + 5,'yyyy-MM-dd HH:mm:ss');  -- '2017-02-08 11:15:55'\n\n    -- presto\n    select to_unixtime(cast('2017-02-08 11:15:50' as timestamp));  -- 1.48652375E9\n    select from_unixtime(1486523750 + 5);  -- '2017-02-08 11:15:55'\n    ```\n\n- 获取周\b一、周日的日期\n\n    ```sql\n    -- hive\n    -- 周一\n    select date_add('2018-12-27',- pmod(datediff('2018-12-27','2000-01-03'),7));\n    -- 周日\n    select date_add('2018-12-27',6 - pmod(datediff('2018-12-27','2000-01-03'),7));\n\n    -- redshift\n    -- 周一\n    select date_add('day',- mod(date_diff('day',cast('2000-01-03' as date),cast('2018-12-27' as date)),7),cast ('2018-12-27' as date));\n    -- 周日\n    select date_add('day',6 - mod(date_diff('day',cast('2000-01-03' as date),cast('2018-12-27' as date)),7),cast ('2018-12-27' as date));\n\n    -- presto\n    -- 周一\n    select date_add('day',1-day_of_week(cast('2018-12-23' as date)),cast('2018-12-23' as date));\n    -- 周日\n    select date_add('day',7-day_of_week(cast('2018-12-23' as date)),cast('2018-12-23' as date));\n    ```\n\n### 字符串函数\n\n- 替换\n    ```sql\n    -- hive & spark & redshift\n    select translate('aabbcc','a','d');  -- 'ddbbcc'\n\n    -- presto & redshift\n    select replace('aabbcc','a','d');  -- 'ddbbcc'\n    ```\n- 查找\n    ```sql\n    -- hive & spark\n    select instr('aabbcc', 'abc');   -- 0\n\n    -- presto & redshift\n    select strpos('aabbcc', 'abc');   -- 0\n    ```\n- 拼接\n    ```sql\n    -- hive & spark & mysql\n    select concat_ws(',','aa','bb','cc')  -- 'aa,bb,cc'\n        ,concat('aa','bb','cc');          -- 'aabbcc'\n\n    -- presto\n    select 'aa'||'bb'||'cc'               -- 'aabbcc'\n        ,concat('aa','bb','cc');          -- 'aabbcc'\n\n    -- redshift\n    select 'aa'||'bb'||'cc';              -- 'aabbcc'\n    ```\n- 模式匹配：hive中的转义字符需要使用双斜杠，而presto中仅需要单斜杠即可\n    ```sql\n    -- hive & spark\n    select regexp_extract('1a-2b-14b-3c', '\\\\d+b', 0);    -- 2b\n    select regexp_replace('1a-2b-14b-3c', '\\\\d+b', '3c'); -- 1a-3c-3c-3c\n    select '1a-2b-14b-3c' rlike '\\\\d+b';                  -- true\n    select '1a-2b-14b-3c' like '\\\\d+b';                   -- false，spark中不可用\n    select split('1a-2b-14b-3c','\\\\d+b');                 -- [\"1a-\",\"-\",\"-3c\"]\n\n    -- presto\n    select regexp_extract('1a-2b-14b-3c', '\\d+b');         -- 2b\n    select regexp_extract_all('1a-2b-14b-3c', '\\d+b');     -- {\"2b\",\"14b\"}\n    select regexp_replace('1a-2b-14b-3c', '\\d+b','3c');    -- 1a-3c-3c-3c\n    select regexp_like('1a-2b-14b-3c', '\\d+b');            -- true\n    select regexp_split('1a-2b-14b-3c', '\\d+b');           -- {\"1a \",\"-\",\"-\",\"-3c\"}\n\n    --  redshift\n    select '1a-2b-14b-3c' like '%[0-9]+b%';         -- false\n    select '1a-2b-14b-3c' similar to '$[0-9]+b$';   -- true\n    select 'abc' ~ '.*(b|d).*';                     -- true\n    select split_part('aa/bb/cc/d','/',1);          -- 'aa'\n    ```\n\n- json解析\n    ```sql\n    -- hive\n    select get_json_object(snapshot_value, '$.barrack_sub_a') from ods.user_daily where game_id=1012 and create_time = '2019-01' limit 10;\n\n    -- presto\n    select json_extract(snapshot_value, '$.barrack_sub_a') from ods.user_daily where game_id=1012 and create_time = '2019-01' limit 10;\n    ```\n\n### group by & having\n\n- presto & spark & redshift 可以在 group by时使用数字代替指定位置的字段，hive不可以；\n- presto 在使用 having 筛选时字段必须要一致，不能直接使用重命名的字段名，hive & spark & redshift 均可以。\n    ```sql\n    -- hive & spark & redshift\n    select open_udid,count(1) as counts\n    from dw.udid\n    where game_id = 1031\n    group by open_udid having counts > 1;\n\n    -- presto & spark & redshift\n    select open_udid,count(1) as counts\n    from dw.udid\n    where game_id = 1031\n    group by 1 having count(1) > 1;\n    ```\n\n### 分位数函数 percentile_approx\n\n```sql\n-- hive & spark\nSELECT play_date,\n        count(DISTINCT user_id) AS fps_player_count,\n        percentile_approx(fps_game_count, 0.5) AS fps_game_count_median,\n        percentile_approx(fps_game_count, 0.25) AS fps_game_count_25_quantile,\n        percentile_approx(fps_game_count, 0.75) AS fps_game_count_75_quantile\nFROM fps_game_info1\nGROUP BY play_date;\n\n-- presto & redshift\nSELECT A.play_date,\n        count(DISTINCT A.user_id) AS fps_player_count,\n        max(case when A.rank = cast(A.per_day_count * 0.5 as int) then A.fps_game_count else 0 end) as fps_game_count_median,\n        max(case when A.rank = cast(A.per_day_count * 0.25 as int) then A.fps_game_count else 0 end) as fps_game_count_25_quantile,\n        max(case when A.rank = cast(A.per_day_count * 0.75 as int) then A.fps_game_count else 0 end) as fps_game_count_75_quantile\nFROM(\n    select play_date\n            ,fps_game_count\n            ,user_id\n            ,row_number() over(partition by play_date order by fps_game_count asc) as rank\n            ,count(1) over(partition by play_date) per_day_count\n    from fps_game_info1\n) A\nGROUP BY 1;\n```\n\n## 数据导入导出\n\n### Redshift -> S3\n\n```sql\nunload (\n'select * from dw_me.user_ip_most_often_vip_lxc')\nto 's3://dw-muse-third/tmp/lxc9/'\ncredentials 'aws_access_key_id=AKIAICQLDGY7FGKBM6UQ;aws_secret_access_key=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'\nDELIMITER AS ',' ALLOWOVERWRITE ESCAPE GZIP;\n```\n\n- s3AccessKey 、 s3SecretKey 、s3a:// 地址，可自行修改\n- 部分字符需要转义，详情参考 [redshift unload 函数](https://docs.aws.amazon.com/zh_cn/redshift/latest/dg/r_UNLOAD.html \"unload\")\n- 不可在外部查询中使用 limit，若需要使用 limit 请参照例子使用子查询\n\n### Hive -> S3\n\n```sql\n-- 获取目标表的地址，location 在 HDFS，则需要\b新建表定位到s3\ndesc formatted table_name;\n\ncreate table tmp.wizzo_user (\n    user_group   string,\n    user_id      varchar(32),\n    user_no      bigint,\n    install_time     timestamp\n)\nrow format delimited fields terminated by ','\ncollection items terminated by '-'\nmap keys terminated by ':'\nlocation 's3a://dw-muse-third/tmp/lxc5/';\n\ninsert into table tmp.wizzo_user\nselect\n    user_group\n    ,user_id\n    ,user_no\n    ,install_time\nfrom ...\n```\n\n### HDFS|本地 <-> \bHive\n\n```sql\nhadoop dfs -get hdfs://host:port/user/hadoop/file localfile\n\nhadoop dfs -put localfile hdfs://host:port/user/hadoop/file\n\nload data [local] inpath '/user/data/staging/page_view'\n[overwrite] into table tmp.wizzo_user;\n```\n\n> Beeline不支持 load data local inpath 和 insert overwrite local directory\n\n### S3 -> 本地 或 HDFS\n\n参考文档： [s3cmd](https://s3tools.org/s3cmd \"s3\")\n\n- 本地安装s3cmd ,    ```pip install s3cmd```\n- 配置s3cmd\n    1. 命令行输入  ```s3cmd --configure```\n    2. 输入两个密钥(s3AccessKey 、s3SecretKey) 和时区 us-west-2\n    3. 一直回车 或 y\n- 查看文件 ```s3cmd ls s3://dw-muse-third/tmp/lxc6/```\n- 下载指定文件至本地\n    ```sql\n    s3cmd get s3://dw-muse-third/tmp/lxc6/ /Users/liuxingchi/Downloads/msgdata\n    ```\n\n### Mysql -> 本地\n\n1. mysqldump 命令\n    ```sql\n    mysqldump -h localhost -u root -p mydb mytable > target_file\n    ```\n2. 运行脚本\n    ```sql\n    SELECT * FROM tablename\n    INTO OUTFILE 'target_file'\n    [option];\n\n    select * from tmp.user_info \n    into outfile '/tmp/emp.txt' \n    fields terminated by \",\" enclosed by '\"';\n    ```\n其中 option 参数可以是以下选项：\n\n命令参数 | 说明\n---|---\nfields terminated by '字符' |字段分隔符，默认字符为制表符'\\t'\nfields [optionally] enclosed by '单字符' |字段引用符，加上optionally后在数字类型上不会有引用符号\nfields escaped by '单字符' |转义字符，默认为'\\'\nlines starting by '字符' |每行前都加此支付，默认为空\nlines terminated by '字符' |行结束符，默认为'\\n'\n\n### Presto -> 本地\n\n1. 下载 [presto-cli-xxx-executable.jar](https://prestodb.io/docs/current/installation/cli.html \"presto\")\n2. 重命名为 presto，执行./presto --help，会有相关可利用选择\n3. 执行以下脚本\n    ```cmd\n    presto --server ip:port --catalog=xxx --user=xxx --execute '需要导出的sql查询命令' --output-format CSV > xxx.csv\n    ```\n4. 如果csv出现中文乱码，执行下面指令：\n    ```cmd\n    iconv -f UTF-8 -t GB18030 xxx.csv >tmp.csv\n    ```","slug":"SQL","published":1,"date":"2018-12-17T01:53:20.031Z","updated":"2019-01-18T02:51:30.734Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjs1oo2qg0005muzyy0enrutg","content":"<p>[toc]</p>\n<h1 id=\"Presto-amp-Hive-amp-Spark-amp-Redshift\"><a href=\"#Presto-amp-Hive-amp-Spark-amp-Redshift\" class=\"headerlink\" title=\"Presto &amp; Hive &amp; Spark &amp; Redshift\"></a>Presto &amp; Hive &amp; Spark &amp; Redshift</h1><h2 id=\"常见设置\"><a href=\"#常见设置\" class=\"headerlink\" title=\"常见设置\"></a>常见设置</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span> tez.runtime.io.sort.mb=<span class=\"number\">1024</span>;</span><br><span class=\"line\"><span class=\"keyword\">set</span> tez.job.name=dw_user_building_detail;</span><br><span class=\"line\"><span class=\"keyword\">set</span> mapred.reduce.tasks=<span class=\"number\">40</span>;</span><br><span class=\"line\"><span class=\"keyword\">set</span> hive.exec.dynamic.partition=<span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"keyword\">set</span> hive.exec.dynamic.partition.mode=nonstrict;</span><br></pre></td></tr></table></figure>\n<h2 id=\"基本操作\"><a href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"></a>基本操作</h2><h3 id=\"建立连接\"><a href=\"#建立连接\" class=\"headerlink\" title=\"建立连接\"></a>建立连接</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hdfs</span></span><br><span class=\"line\">hdfs dfs -put /etc/test /tmp/</span><br><span class=\"line\"><span class=\"comment\">-- hive</span></span><br><span class=\"line\">beeline -u jdbc:hive2://</span><br></pre></td></tr></table></figure>\n<h3 id=\"表结构\"><a href=\"#表结构\" class=\"headerlink\" title=\"表结构\"></a>表结构</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- presto &amp; hive &amp; spark &amp; mysql</span></span><br><span class=\"line\">desc formatted schemas.table_name;</span><br><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> schemas.table_name;</span><br><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">columns</span> <span class=\"keyword\">from</span> schemas.table_name;</span><br></pre></td></tr></table></figure>\n<h3 id=\"建表语句\"><a href=\"#建表语句\" class=\"headerlink\" title=\"建表语句\"></a>建表语句</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--hive</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> schemas.table_name(</span><br><span class=\"line\">  <span class=\"string\">`col1`</span> <span class=\"built_in\">bigint</span>,</span><br><span class=\"line\">  <span class=\"string\">`col2`</span> <span class=\"built_in\">timestamp</span>,</span><br><span class=\"line\">  <span class=\"string\">`col3`</span> <span class=\"built_in\">decimal</span>(<span class=\"number\">20</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\">PARTITIONED <span class=\"keyword\">BY</span> (</span><br><span class=\"line\">  <span class=\"string\">`col4`</span> <span class=\"built_in\">int</span>,</span><br><span class=\"line\">  <span class=\"string\">`col5`</span> <span class=\"keyword\">string</span></span><br><span class=\"line\">) <span class=\"keyword\">ROW</span> <span class=\"keyword\">FORMAT</span> <span class=\"keyword\">DELIMITED</span> <span class=\"keyword\">FIELDS</span> <span class=\"keyword\">TERMINATED</span> <span class=\"keyword\">BY</span> <span class=\"string\">'|'</span></span><br><span class=\"line\"> LOCATION <span class=\"string\">''</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- mysql</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> schemas.table_name (</span><br><span class=\"line\">  <span class=\"string\">`col1`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`col2`</span> <span class=\"built_in\">tinyint</span>(<span class=\"number\">1</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'0'</span>,</span><br><span class=\"line\">  <span class=\"string\">`col3`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">256</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`col4`</span> datetime <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'1970-01-01 00:00:00'</span>,</span><br><span class=\"line\">  <span class=\"string\">`col5`</span> <span class=\"built_in\">text</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span></span><br><span class=\"line\">) <span class=\"keyword\">ENGINE</span>=<span class=\"keyword\">InnoDB</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CHARSET</span>=utf8;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- redshift</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> schemas.table_name (</span><br><span class=\"line\">  <span class=\"string\">`col1`</span> int2 <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`col2`</span> <span class=\"built_in\">int8</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'0'</span>,</span><br><span class=\"line\">  <span class=\"string\">`col3`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">256</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`col4`</span> <span class=\"built_in\">numeric</span>(<span class=\"number\">20</span>,<span class=\"number\">2</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`col5`</span> <span class=\"built_in\">date</span>,</span><br><span class=\"line\">  <span class=\"string\">`col6`</span> <span class=\"built_in\">timestamp</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改表结构\"><a href=\"#修改表结构\" class=\"headerlink\" title=\"修改表结构\"></a>修改表结构</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> schemas.table_name <span class=\"keyword\">change</span> col_name new_col_name <span class=\"built_in\">decimal</span>(<span class=\"number\">38</span>,<span class=\"number\">4</span>) <span class=\"keyword\">CASCADE</span>;</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> schemas.table_name <span class=\"keyword\">rename</span> <span class=\"keyword\">to</span> schemas.new_name; <span class=\"comment\">-- 外部表不会修改loaction地址，内部表会修改映射地址</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"插入数据\"><a href=\"#插入数据\" class=\"headerlink\" title=\"插入数据\"></a>插入数据</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- redshift &amp; mysql（直接插入，不会覆盖原始数据）</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> schemas.table_name <span class=\"keyword\">where</span> ..;</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> schemas.table_name</span><br><span class=\"line\"><span class=\"keyword\">select</span> ...;</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- hive（会覆盖分区的部分数据）</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> overwrite <span class=\"keyword\">table</span> schemas.table_name <span class=\"keyword\">partition</span>(col4,col5)</span><br><span class=\"line\"><span class=\"keyword\">select</span> ...</span><br><span class=\"line\"><span class=\"keyword\">union</span> <span class=\"keyword\">all</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> schemas.table_name</span><br><span class=\"line\"><span class=\"keyword\">where</span> ...;</span><br></pre></td></tr></table></figure>\n<h2 id=\"查询语句\"><a href=\"#查询语句\" class=\"headerlink\" title=\"查询语句\"></a>查询语句</h2><h3 id=\"数据类型转换\"><a href=\"#数据类型转换\" class=\"headerlink\" title=\"数据类型转换\"></a>数据类型转换</h3><ul>\n<li>presto 中的进行比较的数据类型必须强制一致，常用 cast(col as XXX) 进行强制转换。</li>\n<li>常见的数据类型<ul>\n<li>boolean：true|false</li>\n<li>tinyint：2^7 - 1</li>\n<li>smallint：2^15 - 1</li>\n<li>int 或 integer：2^31 - 1</li>\n<li>bigint：2^63 - 1</li>\n<li>real：2^31 - 1</li>\n<li>double：2^63 - 1</li>\n<li>decimal(precision,scale)：最高可取(38,18)</li>\n<li>varchar【presto &amp; redshift】、string【hive &amp; spark】</li>\n<li>date：默认格式为 YYYY-MM-DD</li>\n<li>timepstamp：\b默认格式为 YYYY-MM-DD HH:mm:ss</li>\n<li>interval：常用单位为 second、minute、hour、day、week、month、quarter、year</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"判空处理\"><a href=\"#判空处理\" class=\"headerlink\" title=\"判空处理\"></a>判空处理</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark &amp; redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> nvl(<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"comment\">-- presto &amp; hive &amp; spark &amp; redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">coalesce</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"时间函数\"><a href=\"#时间函数\" class=\"headerlink\" title=\"时间函数\"></a>时间函数</h3><ul>\n<li><p>时间加减</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">date_add</span>(<span class=\"string\">'2018-01-31'</span>,<span class=\"number\">-30</span>)           <span class=\"comment\">-- '2018-01-01'</span></span><br><span class=\"line\">    ,<span class=\"keyword\">date_sub</span>(<span class=\"string\">'2018-01-31'</span>,<span class=\"number\">30</span>)              <span class=\"comment\">-- '2018-01-01'</span></span><br><span class=\"line\">    ,<span class=\"keyword\">datediff</span>(<span class=\"string\">'2018-01-31'</span>,<span class=\"string\">'2018-01-21'</span>);   <span class=\"comment\">-- 10，前者 - 后者，只可以取到day</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">cast</span>(<span class=\"string\">'2018-01-31'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">timestamp</span>) - <span class=\"built_in\">interval</span> <span class=\"string\">'30'</span> <span class=\"keyword\">day</span>                   <span class=\"comment\">-- '2018-01-01 00:00:00'</span></span><br><span class=\"line\">    ,date_diff(<span class=\"string\">'day'</span>,<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-01-21'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>),<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-01-31'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>)); <span class=\"comment\">-- 10，后者 - 前者，可精确到年月日时分秒</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">cast</span>(<span class=\"string\">'2018-01-31'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">timestamp</span>) - <span class=\"built_in\">interval</span> <span class=\"string\">'30d'</span>                      <span class=\"comment\">-- '2018-01-01 00:00:00'</span></span><br><span class=\"line\">    ,date_diff(<span class=\"string\">'day'</span>,<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-01-21'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>),<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-01-31'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>)); <span class=\"comment\">-- 10，后者 - 前者，可精确到年月日时分秒</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取指定格式的日期字符串</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">date_format</span>(<span class=\"string\">'2011-09-20 08:30:45'</span>, <span class=\"string\">'yyyy-MM-dd HH:00:00'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> format_datetime(<span class=\"keyword\">cast</span>(<span class=\"string\">'2011-09-20 08:30:45'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">timestamp</span>),<span class=\"string\">'yyyy-MM-dd HH:00:00'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> to_char(<span class=\"keyword\">cast</span>(<span class=\"string\">'2011-09-20 08:30:45'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">timestamp</span>),<span class=\"string\">'yyyy-MM-dd HH:00:00'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>当前时间</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">current_timestamp</span>  <span class=\"comment\">-- 当前时间的时间戳，默认为UTC时间</span></span><br><span class=\"line\">    ,<span class=\"keyword\">current_date</span>;                 <span class=\"comment\">-- 当前日期</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">current_timestamp</span>           <span class=\"comment\">-- 当前时间的时间戳，默认为UTC8时间</span></span><br><span class=\"line\">    ,<span class=\"keyword\">current_date</span>;                 <span class=\"comment\">-- 当前日期</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">current_timestamp</span> + <span class=\"built_in\">interval</span> <span class=\"string\">'8h'</span>  <span class=\"comment\">-- 当前时间的时间戳，默认为UTC时间</span></span><br><span class=\"line\">    ,<span class=\"keyword\">current_date</span>;                        <span class=\"comment\">-- 当前日期</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>unix 时间戳</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">unix_timestamp</span>(<span class=\"string\">'20170208 11:15:50'</span>,<span class=\"string\">'YYYYMMDD HH:mm:ss'</span>);  <span class=\"comment\">-- 1486523750，默认为 YYYY-MM-DD HH:mm:ss，可不填</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> from_unixtime(<span class=\"keyword\">unix_timestamp</span>(<span class=\"string\">'2017-02-08 11:15:50'</span>) + <span class=\"number\">5</span>,<span class=\"string\">'yyyy-MM-dd HH:mm:ss'</span>);  <span class=\"comment\">-- '2017-02-08 11:15:55'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> to_unixtime(<span class=\"keyword\">cast</span>(<span class=\"string\">'2017-02-08 11:15:50'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">timestamp</span>));  <span class=\"comment\">-- 1.48652375E9</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> from_unixtime(<span class=\"number\">1486523750</span> + <span class=\"number\">5</span>);  <span class=\"comment\">-- '2017-02-08 11:15:55'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取周\b一、周日的日期</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive</span></span><br><span class=\"line\"><span class=\"comment\">-- 周一</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">date_add</span>(<span class=\"string\">'2018-12-27'</span>,- pmod(<span class=\"keyword\">datediff</span>(<span class=\"string\">'2018-12-27'</span>,<span class=\"string\">'2000-01-03'</span>),<span class=\"number\">7</span>));</span><br><span class=\"line\"><span class=\"comment\">-- 周日</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">date_add</span>(<span class=\"string\">'2018-12-27'</span>,<span class=\"number\">6</span> - pmod(<span class=\"keyword\">datediff</span>(<span class=\"string\">'2018-12-27'</span>,<span class=\"string\">'2000-01-03'</span>),<span class=\"number\">7</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- redshift</span></span><br><span class=\"line\"><span class=\"comment\">-- 周一</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">date_add</span>(<span class=\"string\">'day'</span>,- <span class=\"keyword\">mod</span>(date_diff(<span class=\"string\">'day'</span>,<span class=\"keyword\">cast</span>(<span class=\"string\">'2000-01-03'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>),<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-12-27'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>)),<span class=\"number\">7</span>),<span class=\"keyword\">cast</span> (<span class=\"string\">'2018-12-27'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>));</span><br><span class=\"line\"><span class=\"comment\">-- 周日</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">date_add</span>(<span class=\"string\">'day'</span>,<span class=\"number\">6</span> - <span class=\"keyword\">mod</span>(date_diff(<span class=\"string\">'day'</span>,<span class=\"keyword\">cast</span>(<span class=\"string\">'2000-01-03'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>),<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-12-27'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>)),<span class=\"number\">7</span>),<span class=\"keyword\">cast</span> (<span class=\"string\">'2018-12-27'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto</span></span><br><span class=\"line\"><span class=\"comment\">-- 周一</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">date_add</span>(<span class=\"string\">'day'</span>,<span class=\"number\">1</span>-day_of_week(<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-12-23'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>)),<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-12-23'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>));</span><br><span class=\"line\"><span class=\"comment\">-- 周日</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">date_add</span>(<span class=\"string\">'day'</span>,<span class=\"number\">7</span>-day_of_week(<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-12-23'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>)),<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-12-23'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>));</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"字符串函数\"><a href=\"#字符串函数\" class=\"headerlink\" title=\"字符串函数\"></a>字符串函数</h3><ul>\n<li><p>替换</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark &amp; redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">translate</span>(<span class=\"string\">'aabbcc'</span>,<span class=\"string\">'a'</span>,<span class=\"string\">'d'</span>);  <span class=\"comment\">-- 'ddbbcc'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto &amp; redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">replace</span>(<span class=\"string\">'aabbcc'</span>,<span class=\"string\">'a'</span>,<span class=\"string\">'d'</span>);  <span class=\"comment\">-- 'ddbbcc'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查找</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">instr</span>(<span class=\"string\">'aabbcc'</span>, <span class=\"string\">'abc'</span>);   <span class=\"comment\">-- 0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto &amp; redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> strpos(<span class=\"string\">'aabbcc'</span>, <span class=\"string\">'abc'</span>);   <span class=\"comment\">-- 0</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>拼接</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark &amp; mysql</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">concat_ws</span>(<span class=\"string\">','</span>,<span class=\"string\">'aa'</span>,<span class=\"string\">'bb'</span>,<span class=\"string\">'cc'</span>)  <span class=\"comment\">-- 'aa,bb,cc'</span></span><br><span class=\"line\">    ,<span class=\"keyword\">concat</span>(<span class=\"string\">'aa'</span>,<span class=\"string\">'bb'</span>,<span class=\"string\">'cc'</span>);          <span class=\"comment\">-- 'aabbcc'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"string\">'aa'</span>||<span class=\"string\">'bb'</span>||<span class=\"string\">'cc'</span>               <span class=\"comment\">-- 'aabbcc'</span></span><br><span class=\"line\">    ,<span class=\"keyword\">concat</span>(<span class=\"string\">'aa'</span>,<span class=\"string\">'bb'</span>,<span class=\"string\">'cc'</span>);          <span class=\"comment\">-- 'aabbcc'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"string\">'aa'</span>||<span class=\"string\">'bb'</span>||<span class=\"string\">'cc'</span>;              <span class=\"comment\">-- 'aabbcc'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>模式匹配：hive中的转义字符需要使用双斜杠，而presto中仅需要单斜杠即可</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> regexp_extract(<span class=\"string\">'1a-2b-14b-3c'</span>, <span class=\"string\">'\\\\d+b'</span>, <span class=\"number\">0</span>);    <span class=\"comment\">-- 2b</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> regexp_replace(<span class=\"string\">'1a-2b-14b-3c'</span>, <span class=\"string\">'\\\\d+b'</span>, <span class=\"string\">'3c'</span>); <span class=\"comment\">-- 1a-3c-3c-3c</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"string\">'1a-2b-14b-3c'</span> <span class=\"keyword\">rlike</span> <span class=\"string\">'\\\\d+b'</span>;                  <span class=\"comment\">-- true</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"string\">'1a-2b-14b-3c'</span> <span class=\"keyword\">like</span> <span class=\"string\">'\\\\d+b'</span>;                   <span class=\"comment\">-- false，spark中不可用</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">split</span>(<span class=\"string\">'1a-2b-14b-3c'</span>,<span class=\"string\">'\\\\d+b'</span>);                 <span class=\"comment\">-- [\"1a-\",\"-\",\"-3c\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> regexp_extract(<span class=\"string\">'1a-2b-14b-3c'</span>, <span class=\"string\">'\\d+b'</span>);         <span class=\"comment\">-- 2b</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> regexp_extract_all(<span class=\"string\">'1a-2b-14b-3c'</span>, <span class=\"string\">'\\d+b'</span>);     <span class=\"comment\">-- &#123;\"2b\",\"14b\"&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> regexp_replace(<span class=\"string\">'1a-2b-14b-3c'</span>, <span class=\"string\">'\\d+b'</span>,<span class=\"string\">'3c'</span>);    <span class=\"comment\">-- 1a-3c-3c-3c</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">regexp_like</span>(<span class=\"string\">'1a-2b-14b-3c'</span>, <span class=\"string\">'\\d+b'</span>);            <span class=\"comment\">-- true</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> regexp_split(<span class=\"string\">'1a-2b-14b-3c'</span>, <span class=\"string\">'\\d+b'</span>);           <span class=\"comment\">-- &#123;\"1a \",\"-\",\"-\",\"-3c\"&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--  redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"string\">'1a-2b-14b-3c'</span> <span class=\"keyword\">like</span> <span class=\"string\">'%[0-9]+b%'</span>;         <span class=\"comment\">-- false</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"string\">'1a-2b-14b-3c'</span> similar <span class=\"keyword\">to</span> <span class=\"string\">'$[0-9]+b$'</span>;   <span class=\"comment\">-- true</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"string\">'abc'</span> ~ <span class=\"string\">'.*(b|d).*'</span>;                     <span class=\"comment\">-- true</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> split_part(<span class=\"string\">'aa/bb/cc/d'</span>,<span class=\"string\">'/'</span>,<span class=\"number\">1</span>);          <span class=\"comment\">-- 'aa'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>json解析</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> get_json_object(snapshot_value, <span class=\"string\">'$.barrack_sub_a'</span>) <span class=\"keyword\">from</span> ods.user_daily <span class=\"keyword\">where</span> game_id=<span class=\"number\">1012</span> <span class=\"keyword\">and</span> create_time = <span class=\"string\">'2019-01'</span> <span class=\"keyword\">limit</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> json_extract(snapshot_value, <span class=\"string\">'$.barrack_sub_a'</span>) <span class=\"keyword\">from</span> ods.user_daily <span class=\"keyword\">where</span> game_id=<span class=\"number\">1012</span> <span class=\"keyword\">and</span> create_time = <span class=\"string\">'2019-01'</span> <span class=\"keyword\">limit</span> <span class=\"number\">10</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"group-by-amp-having\"><a href=\"#group-by-amp-having\" class=\"headerlink\" title=\"group by &amp; having\"></a>group by &amp; having</h3><ul>\n<li>presto &amp; spark &amp; redshift 可以在 group by时使用数字代替指定位置的字段，hive不可以；</li>\n<li>presto 在使用 having 筛选时字段必须要一致，不能直接使用重命名的字段名，hive &amp; spark &amp; redshift 均可以。  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark &amp; redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> open_udid,<span class=\"keyword\">count</span>(<span class=\"number\">1</span>) <span class=\"keyword\">as</span> counts</span><br><span class=\"line\"><span class=\"keyword\">from</span> dw.udid</span><br><span class=\"line\"><span class=\"keyword\">where</span> game_id = <span class=\"number\">1031</span></span><br><span class=\"line\"><span class=\"keyword\">group</span> <span class=\"keyword\">by</span> open_udid <span class=\"keyword\">having</span> counts &gt; <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto &amp; spark &amp; redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> open_udid,<span class=\"keyword\">count</span>(<span class=\"number\">1</span>) <span class=\"keyword\">as</span> counts</span><br><span class=\"line\"><span class=\"keyword\">from</span> dw.udid</span><br><span class=\"line\"><span class=\"keyword\">where</span> game_id = <span class=\"number\">1031</span></span><br><span class=\"line\"><span class=\"keyword\">group</span> <span class=\"keyword\">by</span> <span class=\"number\">1</span> <span class=\"keyword\">having</span> <span class=\"keyword\">count</span>(<span class=\"number\">1</span>) &gt; <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"分位数函数-percentile-approx\"><a href=\"#分位数函数-percentile-approx\" class=\"headerlink\" title=\"分位数函数 percentile_approx\"></a>分位数函数 percentile_approx</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> play_date,</span><br><span class=\"line\">        <span class=\"keyword\">count</span>(<span class=\"keyword\">DISTINCT</span> user_id) <span class=\"keyword\">AS</span> fps_player_count,</span><br><span class=\"line\">        percentile_approx(fps_game_count, <span class=\"number\">0.5</span>) <span class=\"keyword\">AS</span> fps_game_count_median,</span><br><span class=\"line\">        percentile_approx(fps_game_count, <span class=\"number\">0.25</span>) <span class=\"keyword\">AS</span> fps_game_count_25_quantile,</span><br><span class=\"line\">        percentile_approx(fps_game_count, <span class=\"number\">0.75</span>) <span class=\"keyword\">AS</span> fps_game_count_75_quantile</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> fps_game_info1</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> play_date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto &amp; redshift</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> A.play_date,</span><br><span class=\"line\">        <span class=\"keyword\">count</span>(<span class=\"keyword\">DISTINCT</span> A.user_id) <span class=\"keyword\">AS</span> fps_player_count,</span><br><span class=\"line\">        <span class=\"keyword\">max</span>(<span class=\"keyword\">case</span> <span class=\"keyword\">when</span> A.rank = <span class=\"keyword\">cast</span>(A.per_day_count * <span class=\"number\">0.5</span> <span class=\"keyword\">as</span> <span class=\"built_in\">int</span>) <span class=\"keyword\">then</span> A.fps_game_count <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">end</span>) <span class=\"keyword\">as</span> fps_game_count_median,</span><br><span class=\"line\">        <span class=\"keyword\">max</span>(<span class=\"keyword\">case</span> <span class=\"keyword\">when</span> A.rank = <span class=\"keyword\">cast</span>(A.per_day_count * <span class=\"number\">0.25</span> <span class=\"keyword\">as</span> <span class=\"built_in\">int</span>) <span class=\"keyword\">then</span> A.fps_game_count <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">end</span>) <span class=\"keyword\">as</span> fps_game_count_25_quantile,</span><br><span class=\"line\">        <span class=\"keyword\">max</span>(<span class=\"keyword\">case</span> <span class=\"keyword\">when</span> A.rank = <span class=\"keyword\">cast</span>(A.per_day_count * <span class=\"number\">0.75</span> <span class=\"keyword\">as</span> <span class=\"built_in\">int</span>) <span class=\"keyword\">then</span> A.fps_game_count <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">end</span>) <span class=\"keyword\">as</span> fps_game_count_75_quantile</span><br><span class=\"line\"><span class=\"keyword\">FROM</span>(</span><br><span class=\"line\">    <span class=\"keyword\">select</span> play_date</span><br><span class=\"line\">            ,fps_game_count</span><br><span class=\"line\">            ,user_id</span><br><span class=\"line\">            ,row_number() <span class=\"keyword\">over</span>(<span class=\"keyword\">partition</span> <span class=\"keyword\">by</span> play_date <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> fps_game_count <span class=\"keyword\">asc</span>) <span class=\"keyword\">as</span> <span class=\"keyword\">rank</span></span><br><span class=\"line\">            ,<span class=\"keyword\">count</span>(<span class=\"number\">1</span>) <span class=\"keyword\">over</span>(<span class=\"keyword\">partition</span> <span class=\"keyword\">by</span> play_date) per_day_count</span><br><span class=\"line\">    <span class=\"keyword\">from</span> fps_game_info1</span><br><span class=\"line\">) A</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据导入导出\"><a href=\"#数据导入导出\" class=\"headerlink\" title=\"数据导入导出\"></a>数据导入导出</h2><h3 id=\"Redshift-gt-S3\"><a href=\"#Redshift-gt-S3\" class=\"headerlink\" title=\"Redshift -&gt; S3\"></a>Redshift -&gt; S3</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unload (</span><br><span class=\"line\">'<span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> dw_me.user_ip_most_often_vip_lxc<span class=\"string\">')</span></span><br><span class=\"line\"><span class=\"string\">to '</span>s3://dw-muse-third/tmp/lxc9/<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">credentials '</span>aws_access_key_id=AKIAICQLDGY7FGKBM6UQ;aws_secret_access_key=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'</span><br><span class=\"line\">DELIMITER AS ',' ALLOWOVERWRITE ESCAPE GZIP;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>s3AccessKey 、 s3SecretKey 、s3a:// 地址，可自行修改</li>\n<li>部分字符需要转义，详情参考 <a href=\"https://docs.aws.amazon.com/zh_cn/redshift/latest/dg/r_UNLOAD.html\" title=\"unload\" target=\"_blank\" rel=\"noopener\">redshift unload 函数</a></li>\n<li>不可在外部查询中使用 limit，若需要使用 limit 请参照例子使用子查询</li>\n</ul>\n<h3 id=\"Hive-gt-S3\"><a href=\"#Hive-gt-S3\" class=\"headerlink\" title=\"Hive -&gt; S3\"></a>Hive -&gt; S3</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 获取目标表的地址，location 在 HDFS，则需要\b新建表定位到s3</span></span><br><span class=\"line\">desc formatted table_name;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> tmp.wizzo_user (</span><br><span class=\"line\">    user_group   <span class=\"keyword\">string</span>,</span><br><span class=\"line\">    user_id      <span class=\"built_in\">varchar</span>(<span class=\"number\">32</span>),</span><br><span class=\"line\">    user_no      <span class=\"built_in\">bigint</span>,</span><br><span class=\"line\">    install_time     <span class=\"built_in\">timestamp</span></span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">row</span> <span class=\"keyword\">format</span> <span class=\"keyword\">delimited</span> <span class=\"keyword\">fields</span> <span class=\"keyword\">terminated</span> <span class=\"keyword\">by</span> <span class=\"string\">','</span></span><br><span class=\"line\">collection items <span class=\"keyword\">terminated</span> <span class=\"keyword\">by</span> <span class=\"string\">'-'</span></span><br><span class=\"line\"><span class=\"keyword\">map</span> <span class=\"keyword\">keys</span> <span class=\"keyword\">terminated</span> <span class=\"keyword\">by</span> <span class=\"string\">':'</span></span><br><span class=\"line\">location <span class=\"string\">'s3a://dw-muse-third/tmp/lxc5/'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> <span class=\"keyword\">table</span> tmp.wizzo_user</span><br><span class=\"line\"><span class=\"keyword\">select</span></span><br><span class=\"line\">    user_group</span><br><span class=\"line\">    ,user_id</span><br><span class=\"line\">    ,user_no</span><br><span class=\"line\">    ,install_time</span><br><span class=\"line\"><span class=\"keyword\">from</span> ...</span><br></pre></td></tr></table></figure>\n<h3 id=\"HDFS-本地-Hive\"><a href=\"#HDFS-本地-Hive\" class=\"headerlink\" title=\"HDFS|本地  \bHive\"></a>HDFS|本地 <-> \bHive</-></h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hadoop dfs -get hdfs://host:port/user/hadoop/file localfile</span><br><span class=\"line\"></span><br><span class=\"line\">hadoop dfs -put localfile hdfs://host:port/user/hadoop/file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">load</span> <span class=\"keyword\">data</span> [<span class=\"keyword\">local</span>] inpath <span class=\"string\">'/user/data/staging/page_view'</span></span><br><span class=\"line\">[overwrite] <span class=\"keyword\">into</span> <span class=\"keyword\">table</span> tmp.wizzo_user;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Beeline不支持 load data local inpath 和 insert overwrite local directory</p>\n</blockquote>\n<h3 id=\"S3-gt-本地-或-HDFS\"><a href=\"#S3-gt-本地-或-HDFS\" class=\"headerlink\" title=\"S3 -&gt; 本地 或 HDFS\"></a>S3 -&gt; 本地 或 HDFS</h3><p>参考文档： <a href=\"https://s3tools.org/s3cmd\" title=\"s3\" target=\"_blank\" rel=\"noopener\">s3cmd</a></p>\n<ul>\n<li><p>本地安装s3cmd ,    <figure class=\"highlight plain\"><figcaption><span>install s3cmd```</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 配置s3cmd</span><br><span class=\"line\">    1. 命令行输入  ```s3cmd --configure</span><br></pre></td></tr></table></figure></p>\n<ol start=\"2\">\n<li>输入两个密钥(s3AccessKey 、s3SecretKey) 和时区 us-west-2</li>\n<li>一直回车 或 y</li>\n</ol>\n</li>\n<li>查看文件 <figure class=\"highlight plain\"><figcaption><span>ls s3://dw-muse-third/tmp/lxc6/```</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 下载指定文件至本地</span><br><span class=\"line\">    ```sql</span><br><span class=\"line\">    s3cmd get s3://dw-muse-third/tmp/lxc6/ /Users/liuxingchi/Downloads/msgdata</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"Mysql-gt-本地\"><a href=\"#Mysql-gt-本地\" class=\"headerlink\" title=\"Mysql -&gt; 本地\"></a>Mysql -&gt; 本地</h3><ol>\n<li><p>mysqldump 命令</p>\n <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump -h localhost -u root -p mydb mytable &gt; target_file</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行脚本</p>\n <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> tablename</span><br><span class=\"line\"><span class=\"keyword\">INTO</span> <span class=\"keyword\">OUTFILE</span> <span class=\"string\">'target_file'</span></span><br><span class=\"line\">[<span class=\"keyword\">option</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> tmp.user_info </span><br><span class=\"line\"><span class=\"keyword\">into</span> <span class=\"keyword\">outfile</span> <span class=\"string\">'/tmp/emp.txt'</span> </span><br><span class=\"line\"><span class=\"keyword\">fields</span> <span class=\"keyword\">terminated</span> <span class=\"keyword\">by</span> <span class=\"string\">\",\"</span> <span class=\"keyword\">enclosed</span> <span class=\"keyword\">by</span> <span class=\"string\">'\"'</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>其中 option 参数可以是以下选项：</p>\n<table>\n<thead>\n<tr>\n<th>命令参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>fields terminated by ‘字符’</td>\n<td>字段分隔符，默认字符为制表符’\\t’</td>\n</tr>\n<tr>\n<td>fields [optionally] enclosed by ‘单字符’</td>\n<td>字段引用符，加上optionally后在数字类型上不会有引用符号</td>\n</tr>\n<tr>\n<td>fields escaped by ‘单字符’</td>\n<td>转义字符，默认为’\\’</td>\n</tr>\n<tr>\n<td>lines starting by ‘字符’</td>\n<td>每行前都加此支付，默认为空</td>\n</tr>\n<tr>\n<td>lines terminated by ‘字符’</td>\n<td>行结束符，默认为’\\n’</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Presto-gt-本地\"><a href=\"#Presto-gt-本地\" class=\"headerlink\" title=\"Presto -&gt; 本地\"></a>Presto -&gt; 本地</h3><ol>\n<li>下载 <a href=\"https://prestodb.io/docs/current/installation/cli.html\" title=\"presto\" target=\"_blank\" rel=\"noopener\">presto-cli-xxx-executable.jar</a></li>\n<li>重命名为 presto，执行./presto –help，会有相关可利用选择</li>\n<li><p>执行以下脚本</p>\n <figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">presto --server ip:port --catalog=xxx --user=xxx --execute '需要导出的sql查询命令' --output-<span class=\"built_in\">format</span> CSV &gt; xxx.csv</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果csv出现中文乱码，执行下面指令：</p>\n <figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iconv -f UTF-<span class=\"number\">8</span> -t GB18030 xxx.csv &gt;tmp.csv</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>[toc]</p>\n<h1 id=\"Presto-amp-Hive-amp-Spark-amp-Redshift\"><a href=\"#Presto-amp-Hive-amp-Spark-amp-Redshift\" class=\"headerlink\" title=\"Presto &amp; Hive &amp; Spark &amp; Redshift\"></a>Presto &amp; Hive &amp; Spark &amp; Redshift</h1><h2 id=\"常见设置\"><a href=\"#常见设置\" class=\"headerlink\" title=\"常见设置\"></a>常见设置</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span> tez.runtime.io.sort.mb=<span class=\"number\">1024</span>;</span><br><span class=\"line\"><span class=\"keyword\">set</span> tez.job.name=dw_user_building_detail;</span><br><span class=\"line\"><span class=\"keyword\">set</span> mapred.reduce.tasks=<span class=\"number\">40</span>;</span><br><span class=\"line\"><span class=\"keyword\">set</span> hive.exec.dynamic.partition=<span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"keyword\">set</span> hive.exec.dynamic.partition.mode=nonstrict;</span><br></pre></td></tr></table></figure>\n<h2 id=\"基本操作\"><a href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"></a>基本操作</h2><h3 id=\"建立连接\"><a href=\"#建立连接\" class=\"headerlink\" title=\"建立连接\"></a>建立连接</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hdfs</span></span><br><span class=\"line\">hdfs dfs -put /etc/test /tmp/</span><br><span class=\"line\"><span class=\"comment\">-- hive</span></span><br><span class=\"line\">beeline -u jdbc:hive2://</span><br></pre></td></tr></table></figure>\n<h3 id=\"表结构\"><a href=\"#表结构\" class=\"headerlink\" title=\"表结构\"></a>表结构</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- presto &amp; hive &amp; spark &amp; mysql</span></span><br><span class=\"line\">desc formatted schemas.table_name;</span><br><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> schemas.table_name;</span><br><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">columns</span> <span class=\"keyword\">from</span> schemas.table_name;</span><br></pre></td></tr></table></figure>\n<h3 id=\"建表语句\"><a href=\"#建表语句\" class=\"headerlink\" title=\"建表语句\"></a>建表语句</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--hive</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> schemas.table_name(</span><br><span class=\"line\">  <span class=\"string\">`col1`</span> <span class=\"built_in\">bigint</span>,</span><br><span class=\"line\">  <span class=\"string\">`col2`</span> <span class=\"built_in\">timestamp</span>,</span><br><span class=\"line\">  <span class=\"string\">`col3`</span> <span class=\"built_in\">decimal</span>(<span class=\"number\">20</span>,<span class=\"number\">2</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\">PARTITIONED <span class=\"keyword\">BY</span> (</span><br><span class=\"line\">  <span class=\"string\">`col4`</span> <span class=\"built_in\">int</span>,</span><br><span class=\"line\">  <span class=\"string\">`col5`</span> <span class=\"keyword\">string</span></span><br><span class=\"line\">) <span class=\"keyword\">ROW</span> <span class=\"keyword\">FORMAT</span> <span class=\"keyword\">DELIMITED</span> <span class=\"keyword\">FIELDS</span> <span class=\"keyword\">TERMINATED</span> <span class=\"keyword\">BY</span> <span class=\"string\">'|'</span></span><br><span class=\"line\"> LOCATION <span class=\"string\">''</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- mysql</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> schemas.table_name (</span><br><span class=\"line\">  <span class=\"string\">`col1`</span> <span class=\"built_in\">int</span>(<span class=\"number\">11</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`col2`</span> <span class=\"built_in\">tinyint</span>(<span class=\"number\">1</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'0'</span>,</span><br><span class=\"line\">  <span class=\"string\">`col3`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">256</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`col4`</span> datetime <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'1970-01-01 00:00:00'</span>,</span><br><span class=\"line\">  <span class=\"string\">`col5`</span> <span class=\"built_in\">text</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span></span><br><span class=\"line\">) <span class=\"keyword\">ENGINE</span>=<span class=\"keyword\">InnoDB</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">CHARSET</span>=utf8;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- redshift</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> schemas.table_name (</span><br><span class=\"line\">  <span class=\"string\">`col1`</span> int2 <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`col2`</span> <span class=\"built_in\">int8</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'0'</span>,</span><br><span class=\"line\">  <span class=\"string\">`col3`</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">256</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`col4`</span> <span class=\"built_in\">numeric</span>(<span class=\"number\">20</span>,<span class=\"number\">2</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"string\">`col5`</span> <span class=\"built_in\">date</span>,</span><br><span class=\"line\">  <span class=\"string\">`col6`</span> <span class=\"built_in\">timestamp</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改表结构\"><a href=\"#修改表结构\" class=\"headerlink\" title=\"修改表结构\"></a>修改表结构</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> schemas.table_name <span class=\"keyword\">change</span> col_name new_col_name <span class=\"built_in\">decimal</span>(<span class=\"number\">38</span>,<span class=\"number\">4</span>) <span class=\"keyword\">CASCADE</span>;</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> schemas.table_name <span class=\"keyword\">rename</span> <span class=\"keyword\">to</span> schemas.new_name; <span class=\"comment\">-- 外部表不会修改loaction地址，内部表会修改映射地址</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"插入数据\"><a href=\"#插入数据\" class=\"headerlink\" title=\"插入数据\"></a>插入数据</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- redshift &amp; mysql（直接插入，不会覆盖原始数据）</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> schemas.table_name <span class=\"keyword\">where</span> ..;</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> schemas.table_name</span><br><span class=\"line\"><span class=\"keyword\">select</span> ...;</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- hive（会覆盖分区的部分数据）</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> overwrite <span class=\"keyword\">table</span> schemas.table_name <span class=\"keyword\">partition</span>(col4,col5)</span><br><span class=\"line\"><span class=\"keyword\">select</span> ...</span><br><span class=\"line\"><span class=\"keyword\">union</span> <span class=\"keyword\">all</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> schemas.table_name</span><br><span class=\"line\"><span class=\"keyword\">where</span> ...;</span><br></pre></td></tr></table></figure>\n<h2 id=\"查询语句\"><a href=\"#查询语句\" class=\"headerlink\" title=\"查询语句\"></a>查询语句</h2><h3 id=\"数据类型转换\"><a href=\"#数据类型转换\" class=\"headerlink\" title=\"数据类型转换\"></a>数据类型转换</h3><ul>\n<li>presto 中的进行比较的数据类型必须强制一致，常用 cast(col as XXX) 进行强制转换。</li>\n<li>常见的数据类型<ul>\n<li>boolean：true|false</li>\n<li>tinyint：2^7 - 1</li>\n<li>smallint：2^15 - 1</li>\n<li>int 或 integer：2^31 - 1</li>\n<li>bigint：2^63 - 1</li>\n<li>real：2^31 - 1</li>\n<li>double：2^63 - 1</li>\n<li>decimal(precision,scale)：最高可取(38,18)</li>\n<li>varchar【presto &amp; redshift】、string【hive &amp; spark】</li>\n<li>date：默认格式为 YYYY-MM-DD</li>\n<li>timepstamp：\b默认格式为 YYYY-MM-DD HH:mm:ss</li>\n<li>interval：常用单位为 second、minute、hour、day、week、month、quarter、year</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"判空处理\"><a href=\"#判空处理\" class=\"headerlink\" title=\"判空处理\"></a>判空处理</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark &amp; redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> nvl(<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"comment\">-- presto &amp; hive &amp; spark &amp; redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">coalesce</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"时间函数\"><a href=\"#时间函数\" class=\"headerlink\" title=\"时间函数\"></a>时间函数</h3><ul>\n<li><p>时间加减</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">date_add</span>(<span class=\"string\">'2018-01-31'</span>,<span class=\"number\">-30</span>)           <span class=\"comment\">-- '2018-01-01'</span></span><br><span class=\"line\">    ,<span class=\"keyword\">date_sub</span>(<span class=\"string\">'2018-01-31'</span>,<span class=\"number\">30</span>)              <span class=\"comment\">-- '2018-01-01'</span></span><br><span class=\"line\">    ,<span class=\"keyword\">datediff</span>(<span class=\"string\">'2018-01-31'</span>,<span class=\"string\">'2018-01-21'</span>);   <span class=\"comment\">-- 10，前者 - 后者，只可以取到day</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">cast</span>(<span class=\"string\">'2018-01-31'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">timestamp</span>) - <span class=\"built_in\">interval</span> <span class=\"string\">'30'</span> <span class=\"keyword\">day</span>                   <span class=\"comment\">-- '2018-01-01 00:00:00'</span></span><br><span class=\"line\">    ,date_diff(<span class=\"string\">'day'</span>,<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-01-21'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>),<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-01-31'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>)); <span class=\"comment\">-- 10，后者 - 前者，可精确到年月日时分秒</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">cast</span>(<span class=\"string\">'2018-01-31'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">timestamp</span>) - <span class=\"built_in\">interval</span> <span class=\"string\">'30d'</span>                      <span class=\"comment\">-- '2018-01-01 00:00:00'</span></span><br><span class=\"line\">    ,date_diff(<span class=\"string\">'day'</span>,<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-01-21'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>),<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-01-31'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>)); <span class=\"comment\">-- 10，后者 - 前者，可精确到年月日时分秒</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取指定格式的日期字符串</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">date_format</span>(<span class=\"string\">'2011-09-20 08:30:45'</span>, <span class=\"string\">'yyyy-MM-dd HH:00:00'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> format_datetime(<span class=\"keyword\">cast</span>(<span class=\"string\">'2011-09-20 08:30:45'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">timestamp</span>),<span class=\"string\">'yyyy-MM-dd HH:00:00'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> to_char(<span class=\"keyword\">cast</span>(<span class=\"string\">'2011-09-20 08:30:45'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">timestamp</span>),<span class=\"string\">'yyyy-MM-dd HH:00:00'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>当前时间</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">current_timestamp</span>  <span class=\"comment\">-- 当前时间的时间戳，默认为UTC时间</span></span><br><span class=\"line\">    ,<span class=\"keyword\">current_date</span>;                 <span class=\"comment\">-- 当前日期</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">current_timestamp</span>           <span class=\"comment\">-- 当前时间的时间戳，默认为UTC8时间</span></span><br><span class=\"line\">    ,<span class=\"keyword\">current_date</span>;                 <span class=\"comment\">-- 当前日期</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">current_timestamp</span> + <span class=\"built_in\">interval</span> <span class=\"string\">'8h'</span>  <span class=\"comment\">-- 当前时间的时间戳，默认为UTC时间</span></span><br><span class=\"line\">    ,<span class=\"keyword\">current_date</span>;                        <span class=\"comment\">-- 当前日期</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>unix 时间戳</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">unix_timestamp</span>(<span class=\"string\">'20170208 11:15:50'</span>,<span class=\"string\">'YYYYMMDD HH:mm:ss'</span>);  <span class=\"comment\">-- 1486523750，默认为 YYYY-MM-DD HH:mm:ss，可不填</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> from_unixtime(<span class=\"keyword\">unix_timestamp</span>(<span class=\"string\">'2017-02-08 11:15:50'</span>) + <span class=\"number\">5</span>,<span class=\"string\">'yyyy-MM-dd HH:mm:ss'</span>);  <span class=\"comment\">-- '2017-02-08 11:15:55'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> to_unixtime(<span class=\"keyword\">cast</span>(<span class=\"string\">'2017-02-08 11:15:50'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">timestamp</span>));  <span class=\"comment\">-- 1.48652375E9</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> from_unixtime(<span class=\"number\">1486523750</span> + <span class=\"number\">5</span>);  <span class=\"comment\">-- '2017-02-08 11:15:55'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取周\b一、周日的日期</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive</span></span><br><span class=\"line\"><span class=\"comment\">-- 周一</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">date_add</span>(<span class=\"string\">'2018-12-27'</span>,- pmod(<span class=\"keyword\">datediff</span>(<span class=\"string\">'2018-12-27'</span>,<span class=\"string\">'2000-01-03'</span>),<span class=\"number\">7</span>));</span><br><span class=\"line\"><span class=\"comment\">-- 周日</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">date_add</span>(<span class=\"string\">'2018-12-27'</span>,<span class=\"number\">6</span> - pmod(<span class=\"keyword\">datediff</span>(<span class=\"string\">'2018-12-27'</span>,<span class=\"string\">'2000-01-03'</span>),<span class=\"number\">7</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- redshift</span></span><br><span class=\"line\"><span class=\"comment\">-- 周一</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">date_add</span>(<span class=\"string\">'day'</span>,- <span class=\"keyword\">mod</span>(date_diff(<span class=\"string\">'day'</span>,<span class=\"keyword\">cast</span>(<span class=\"string\">'2000-01-03'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>),<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-12-27'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>)),<span class=\"number\">7</span>),<span class=\"keyword\">cast</span> (<span class=\"string\">'2018-12-27'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>));</span><br><span class=\"line\"><span class=\"comment\">-- 周日</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">date_add</span>(<span class=\"string\">'day'</span>,<span class=\"number\">6</span> - <span class=\"keyword\">mod</span>(date_diff(<span class=\"string\">'day'</span>,<span class=\"keyword\">cast</span>(<span class=\"string\">'2000-01-03'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>),<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-12-27'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>)),<span class=\"number\">7</span>),<span class=\"keyword\">cast</span> (<span class=\"string\">'2018-12-27'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto</span></span><br><span class=\"line\"><span class=\"comment\">-- 周一</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">date_add</span>(<span class=\"string\">'day'</span>,<span class=\"number\">1</span>-day_of_week(<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-12-23'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>)),<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-12-23'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>));</span><br><span class=\"line\"><span class=\"comment\">-- 周日</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">date_add</span>(<span class=\"string\">'day'</span>,<span class=\"number\">7</span>-day_of_week(<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-12-23'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>)),<span class=\"keyword\">cast</span>(<span class=\"string\">'2018-12-23'</span> <span class=\"keyword\">as</span> <span class=\"built_in\">date</span>));</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"字符串函数\"><a href=\"#字符串函数\" class=\"headerlink\" title=\"字符串函数\"></a>字符串函数</h3><ul>\n<li><p>替换</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark &amp; redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">translate</span>(<span class=\"string\">'aabbcc'</span>,<span class=\"string\">'a'</span>,<span class=\"string\">'d'</span>);  <span class=\"comment\">-- 'ddbbcc'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto &amp; redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">replace</span>(<span class=\"string\">'aabbcc'</span>,<span class=\"string\">'a'</span>,<span class=\"string\">'d'</span>);  <span class=\"comment\">-- 'ddbbcc'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查找</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">instr</span>(<span class=\"string\">'aabbcc'</span>, <span class=\"string\">'abc'</span>);   <span class=\"comment\">-- 0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto &amp; redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> strpos(<span class=\"string\">'aabbcc'</span>, <span class=\"string\">'abc'</span>);   <span class=\"comment\">-- 0</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>拼接</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark &amp; mysql</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">concat_ws</span>(<span class=\"string\">','</span>,<span class=\"string\">'aa'</span>,<span class=\"string\">'bb'</span>,<span class=\"string\">'cc'</span>)  <span class=\"comment\">-- 'aa,bb,cc'</span></span><br><span class=\"line\">    ,<span class=\"keyword\">concat</span>(<span class=\"string\">'aa'</span>,<span class=\"string\">'bb'</span>,<span class=\"string\">'cc'</span>);          <span class=\"comment\">-- 'aabbcc'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"string\">'aa'</span>||<span class=\"string\">'bb'</span>||<span class=\"string\">'cc'</span>               <span class=\"comment\">-- 'aabbcc'</span></span><br><span class=\"line\">    ,<span class=\"keyword\">concat</span>(<span class=\"string\">'aa'</span>,<span class=\"string\">'bb'</span>,<span class=\"string\">'cc'</span>);          <span class=\"comment\">-- 'aabbcc'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"string\">'aa'</span>||<span class=\"string\">'bb'</span>||<span class=\"string\">'cc'</span>;              <span class=\"comment\">-- 'aabbcc'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>模式匹配：hive中的转义字符需要使用双斜杠，而presto中仅需要单斜杠即可</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> regexp_extract(<span class=\"string\">'1a-2b-14b-3c'</span>, <span class=\"string\">'\\\\d+b'</span>, <span class=\"number\">0</span>);    <span class=\"comment\">-- 2b</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> regexp_replace(<span class=\"string\">'1a-2b-14b-3c'</span>, <span class=\"string\">'\\\\d+b'</span>, <span class=\"string\">'3c'</span>); <span class=\"comment\">-- 1a-3c-3c-3c</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"string\">'1a-2b-14b-3c'</span> <span class=\"keyword\">rlike</span> <span class=\"string\">'\\\\d+b'</span>;                  <span class=\"comment\">-- true</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"string\">'1a-2b-14b-3c'</span> <span class=\"keyword\">like</span> <span class=\"string\">'\\\\d+b'</span>;                   <span class=\"comment\">-- false，spark中不可用</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">split</span>(<span class=\"string\">'1a-2b-14b-3c'</span>,<span class=\"string\">'\\\\d+b'</span>);                 <span class=\"comment\">-- [\"1a-\",\"-\",\"-3c\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> regexp_extract(<span class=\"string\">'1a-2b-14b-3c'</span>, <span class=\"string\">'\\d+b'</span>);         <span class=\"comment\">-- 2b</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> regexp_extract_all(<span class=\"string\">'1a-2b-14b-3c'</span>, <span class=\"string\">'\\d+b'</span>);     <span class=\"comment\">-- &#123;\"2b\",\"14b\"&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> regexp_replace(<span class=\"string\">'1a-2b-14b-3c'</span>, <span class=\"string\">'\\d+b'</span>,<span class=\"string\">'3c'</span>);    <span class=\"comment\">-- 1a-3c-3c-3c</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">regexp_like</span>(<span class=\"string\">'1a-2b-14b-3c'</span>, <span class=\"string\">'\\d+b'</span>);            <span class=\"comment\">-- true</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> regexp_split(<span class=\"string\">'1a-2b-14b-3c'</span>, <span class=\"string\">'\\d+b'</span>);           <span class=\"comment\">-- &#123;\"1a \",\"-\",\"-\",\"-3c\"&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--  redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"string\">'1a-2b-14b-3c'</span> <span class=\"keyword\">like</span> <span class=\"string\">'%[0-9]+b%'</span>;         <span class=\"comment\">-- false</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"string\">'1a-2b-14b-3c'</span> similar <span class=\"keyword\">to</span> <span class=\"string\">'$[0-9]+b$'</span>;   <span class=\"comment\">-- true</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"string\">'abc'</span> ~ <span class=\"string\">'.*(b|d).*'</span>;                     <span class=\"comment\">-- true</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> split_part(<span class=\"string\">'aa/bb/cc/d'</span>,<span class=\"string\">'/'</span>,<span class=\"number\">1</span>);          <span class=\"comment\">-- 'aa'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>json解析</p>\n  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> get_json_object(snapshot_value, <span class=\"string\">'$.barrack_sub_a'</span>) <span class=\"keyword\">from</span> ods.user_daily <span class=\"keyword\">where</span> game_id=<span class=\"number\">1012</span> <span class=\"keyword\">and</span> create_time = <span class=\"string\">'2019-01'</span> <span class=\"keyword\">limit</span> <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> json_extract(snapshot_value, <span class=\"string\">'$.barrack_sub_a'</span>) <span class=\"keyword\">from</span> ods.user_daily <span class=\"keyword\">where</span> game_id=<span class=\"number\">1012</span> <span class=\"keyword\">and</span> create_time = <span class=\"string\">'2019-01'</span> <span class=\"keyword\">limit</span> <span class=\"number\">10</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"group-by-amp-having\"><a href=\"#group-by-amp-having\" class=\"headerlink\" title=\"group by &amp; having\"></a>group by &amp; having</h3><ul>\n<li>presto &amp; spark &amp; redshift 可以在 group by时使用数字代替指定位置的字段，hive不可以；</li>\n<li>presto 在使用 having 筛选时字段必须要一致，不能直接使用重命名的字段名，hive &amp; spark &amp; redshift 均可以。  <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark &amp; redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> open_udid,<span class=\"keyword\">count</span>(<span class=\"number\">1</span>) <span class=\"keyword\">as</span> counts</span><br><span class=\"line\"><span class=\"keyword\">from</span> dw.udid</span><br><span class=\"line\"><span class=\"keyword\">where</span> game_id = <span class=\"number\">1031</span></span><br><span class=\"line\"><span class=\"keyword\">group</span> <span class=\"keyword\">by</span> open_udid <span class=\"keyword\">having</span> counts &gt; <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto &amp; spark &amp; redshift</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> open_udid,<span class=\"keyword\">count</span>(<span class=\"number\">1</span>) <span class=\"keyword\">as</span> counts</span><br><span class=\"line\"><span class=\"keyword\">from</span> dw.udid</span><br><span class=\"line\"><span class=\"keyword\">where</span> game_id = <span class=\"number\">1031</span></span><br><span class=\"line\"><span class=\"keyword\">group</span> <span class=\"keyword\">by</span> <span class=\"number\">1</span> <span class=\"keyword\">having</span> <span class=\"keyword\">count</span>(<span class=\"number\">1</span>) &gt; <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"分位数函数-percentile-approx\"><a href=\"#分位数函数-percentile-approx\" class=\"headerlink\" title=\"分位数函数 percentile_approx\"></a>分位数函数 percentile_approx</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- hive &amp; spark</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> play_date,</span><br><span class=\"line\">        <span class=\"keyword\">count</span>(<span class=\"keyword\">DISTINCT</span> user_id) <span class=\"keyword\">AS</span> fps_player_count,</span><br><span class=\"line\">        percentile_approx(fps_game_count, <span class=\"number\">0.5</span>) <span class=\"keyword\">AS</span> fps_game_count_median,</span><br><span class=\"line\">        percentile_approx(fps_game_count, <span class=\"number\">0.25</span>) <span class=\"keyword\">AS</span> fps_game_count_25_quantile,</span><br><span class=\"line\">        percentile_approx(fps_game_count, <span class=\"number\">0.75</span>) <span class=\"keyword\">AS</span> fps_game_count_75_quantile</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> fps_game_info1</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> play_date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- presto &amp; redshift</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> A.play_date,</span><br><span class=\"line\">        <span class=\"keyword\">count</span>(<span class=\"keyword\">DISTINCT</span> A.user_id) <span class=\"keyword\">AS</span> fps_player_count,</span><br><span class=\"line\">        <span class=\"keyword\">max</span>(<span class=\"keyword\">case</span> <span class=\"keyword\">when</span> A.rank = <span class=\"keyword\">cast</span>(A.per_day_count * <span class=\"number\">0.5</span> <span class=\"keyword\">as</span> <span class=\"built_in\">int</span>) <span class=\"keyword\">then</span> A.fps_game_count <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">end</span>) <span class=\"keyword\">as</span> fps_game_count_median,</span><br><span class=\"line\">        <span class=\"keyword\">max</span>(<span class=\"keyword\">case</span> <span class=\"keyword\">when</span> A.rank = <span class=\"keyword\">cast</span>(A.per_day_count * <span class=\"number\">0.25</span> <span class=\"keyword\">as</span> <span class=\"built_in\">int</span>) <span class=\"keyword\">then</span> A.fps_game_count <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">end</span>) <span class=\"keyword\">as</span> fps_game_count_25_quantile,</span><br><span class=\"line\">        <span class=\"keyword\">max</span>(<span class=\"keyword\">case</span> <span class=\"keyword\">when</span> A.rank = <span class=\"keyword\">cast</span>(A.per_day_count * <span class=\"number\">0.75</span> <span class=\"keyword\">as</span> <span class=\"built_in\">int</span>) <span class=\"keyword\">then</span> A.fps_game_count <span class=\"keyword\">else</span> <span class=\"number\">0</span> <span class=\"keyword\">end</span>) <span class=\"keyword\">as</span> fps_game_count_75_quantile</span><br><span class=\"line\"><span class=\"keyword\">FROM</span>(</span><br><span class=\"line\">    <span class=\"keyword\">select</span> play_date</span><br><span class=\"line\">            ,fps_game_count</span><br><span class=\"line\">            ,user_id</span><br><span class=\"line\">            ,row_number() <span class=\"keyword\">over</span>(<span class=\"keyword\">partition</span> <span class=\"keyword\">by</span> play_date <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> fps_game_count <span class=\"keyword\">asc</span>) <span class=\"keyword\">as</span> <span class=\"keyword\">rank</span></span><br><span class=\"line\">            ,<span class=\"keyword\">count</span>(<span class=\"number\">1</span>) <span class=\"keyword\">over</span>(<span class=\"keyword\">partition</span> <span class=\"keyword\">by</span> play_date) per_day_count</span><br><span class=\"line\">    <span class=\"keyword\">from</span> fps_game_info1</span><br><span class=\"line\">) A</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"数据导入导出\"><a href=\"#数据导入导出\" class=\"headerlink\" title=\"数据导入导出\"></a>数据导入导出</h2><h3 id=\"Redshift-gt-S3\"><a href=\"#Redshift-gt-S3\" class=\"headerlink\" title=\"Redshift -&gt; S3\"></a>Redshift -&gt; S3</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unload (</span><br><span class=\"line\">'<span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> dw_me.user_ip_most_often_vip_lxc<span class=\"string\">')</span></span><br><span class=\"line\"><span class=\"string\">to '</span>s3://dw-muse-third/tmp/lxc9/<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">credentials '</span>aws_access_key_id=AKIAICQLDGY7FGKBM6UQ;aws_secret_access_key=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'</span><br><span class=\"line\">DELIMITER AS ',' ALLOWOVERWRITE ESCAPE GZIP;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>s3AccessKey 、 s3SecretKey 、s3a:// 地址，可自行修改</li>\n<li>部分字符需要转义，详情参考 <a href=\"https://docs.aws.amazon.com/zh_cn/redshift/latest/dg/r_UNLOAD.html\" title=\"unload\" target=\"_blank\" rel=\"noopener\">redshift unload 函数</a></li>\n<li>不可在外部查询中使用 limit，若需要使用 limit 请参照例子使用子查询</li>\n</ul>\n<h3 id=\"Hive-gt-S3\"><a href=\"#Hive-gt-S3\" class=\"headerlink\" title=\"Hive -&gt; S3\"></a>Hive -&gt; S3</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 获取目标表的地址，location 在 HDFS，则需要\b新建表定位到s3</span></span><br><span class=\"line\">desc formatted table_name;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> tmp.wizzo_user (</span><br><span class=\"line\">    user_group   <span class=\"keyword\">string</span>,</span><br><span class=\"line\">    user_id      <span class=\"built_in\">varchar</span>(<span class=\"number\">32</span>),</span><br><span class=\"line\">    user_no      <span class=\"built_in\">bigint</span>,</span><br><span class=\"line\">    install_time     <span class=\"built_in\">timestamp</span></span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">row</span> <span class=\"keyword\">format</span> <span class=\"keyword\">delimited</span> <span class=\"keyword\">fields</span> <span class=\"keyword\">terminated</span> <span class=\"keyword\">by</span> <span class=\"string\">','</span></span><br><span class=\"line\">collection items <span class=\"keyword\">terminated</span> <span class=\"keyword\">by</span> <span class=\"string\">'-'</span></span><br><span class=\"line\"><span class=\"keyword\">map</span> <span class=\"keyword\">keys</span> <span class=\"keyword\">terminated</span> <span class=\"keyword\">by</span> <span class=\"string\">':'</span></span><br><span class=\"line\">location <span class=\"string\">'s3a://dw-muse-third/tmp/lxc5/'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> <span class=\"keyword\">table</span> tmp.wizzo_user</span><br><span class=\"line\"><span class=\"keyword\">select</span></span><br><span class=\"line\">    user_group</span><br><span class=\"line\">    ,user_id</span><br><span class=\"line\">    ,user_no</span><br><span class=\"line\">    ,install_time</span><br><span class=\"line\"><span class=\"keyword\">from</span> ...</span><br></pre></td></tr></table></figure>\n<h3 id=\"HDFS-本地-Hive\"><a href=\"#HDFS-本地-Hive\" class=\"headerlink\" title=\"HDFS|本地  \bHive\"></a>HDFS|本地 <-> \bHive</-></h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hadoop dfs -get hdfs://host:port/user/hadoop/file localfile</span><br><span class=\"line\"></span><br><span class=\"line\">hadoop dfs -put localfile hdfs://host:port/user/hadoop/file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">load</span> <span class=\"keyword\">data</span> [<span class=\"keyword\">local</span>] inpath <span class=\"string\">'/user/data/staging/page_view'</span></span><br><span class=\"line\">[overwrite] <span class=\"keyword\">into</span> <span class=\"keyword\">table</span> tmp.wizzo_user;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Beeline不支持 load data local inpath 和 insert overwrite local directory</p>\n</blockquote>\n<h3 id=\"S3-gt-本地-或-HDFS\"><a href=\"#S3-gt-本地-或-HDFS\" class=\"headerlink\" title=\"S3 -&gt; 本地 或 HDFS\"></a>S3 -&gt; 本地 或 HDFS</h3><p>参考文档： <a href=\"https://s3tools.org/s3cmd\" title=\"s3\" target=\"_blank\" rel=\"noopener\">s3cmd</a></p>\n<ul>\n<li><p>本地安装s3cmd ,    <figure class=\"highlight plain\"><figcaption><span>install s3cmd```</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 配置s3cmd</span><br><span class=\"line\">    1. 命令行输入  ```s3cmd --configure</span><br></pre></td></tr></table></figure></p>\n<ol start=\"2\">\n<li>输入两个密钥(s3AccessKey 、s3SecretKey) 和时区 us-west-2</li>\n<li>一直回车 或 y</li>\n</ol>\n</li>\n<li>查看文件 <figure class=\"highlight plain\"><figcaption><span>ls s3://dw-muse-third/tmp/lxc6/```</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 下载指定文件至本地</span><br><span class=\"line\">    ```sql</span><br><span class=\"line\">    s3cmd get s3://dw-muse-third/tmp/lxc6/ /Users/liuxingchi/Downloads/msgdata</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"Mysql-gt-本地\"><a href=\"#Mysql-gt-本地\" class=\"headerlink\" title=\"Mysql -&gt; 本地\"></a>Mysql -&gt; 本地</h3><ol>\n<li><p>mysqldump 命令</p>\n <figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump -h localhost -u root -p mydb mytable &gt; target_file</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行脚本</p>\n <figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> tablename</span><br><span class=\"line\"><span class=\"keyword\">INTO</span> <span class=\"keyword\">OUTFILE</span> <span class=\"string\">'target_file'</span></span><br><span class=\"line\">[<span class=\"keyword\">option</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> tmp.user_info </span><br><span class=\"line\"><span class=\"keyword\">into</span> <span class=\"keyword\">outfile</span> <span class=\"string\">'/tmp/emp.txt'</span> </span><br><span class=\"line\"><span class=\"keyword\">fields</span> <span class=\"keyword\">terminated</span> <span class=\"keyword\">by</span> <span class=\"string\">\",\"</span> <span class=\"keyword\">enclosed</span> <span class=\"keyword\">by</span> <span class=\"string\">'\"'</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>其中 option 参数可以是以下选项：</p>\n<table>\n<thead>\n<tr>\n<th>命令参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>fields terminated by ‘字符’</td>\n<td>字段分隔符，默认字符为制表符’\\t’</td>\n</tr>\n<tr>\n<td>fields [optionally] enclosed by ‘单字符’</td>\n<td>字段引用符，加上optionally后在数字类型上不会有引用符号</td>\n</tr>\n<tr>\n<td>fields escaped by ‘单字符’</td>\n<td>转义字符，默认为’\\’</td>\n</tr>\n<tr>\n<td>lines starting by ‘字符’</td>\n<td>每行前都加此支付，默认为空</td>\n</tr>\n<tr>\n<td>lines terminated by ‘字符’</td>\n<td>行结束符，默认为’\\n’</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Presto-gt-本地\"><a href=\"#Presto-gt-本地\" class=\"headerlink\" title=\"Presto -&gt; 本地\"></a>Presto -&gt; 本地</h3><ol>\n<li>下载 <a href=\"https://prestodb.io/docs/current/installation/cli.html\" title=\"presto\" target=\"_blank\" rel=\"noopener\">presto-cli-xxx-executable.jar</a></li>\n<li>重命名为 presto，执行./presto –help，会有相关可利用选择</li>\n<li><p>执行以下脚本</p>\n <figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">presto --server ip:port --catalog=xxx --user=xxx --execute '需要导出的sql查询命令' --output-<span class=\"built_in\">format</span> CSV &gt; xxx.csv</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果csv出现中文乱码，执行下面指令：</p>\n <figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iconv -f UTF-<span class=\"number\">8</span> -t GB18030 xxx.csv &gt;tmp.csv</span><br></pre></td></tr></table></figure></li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}